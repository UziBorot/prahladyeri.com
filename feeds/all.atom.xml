<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Prahlad Yeri - Freelance Programmer</title><link href="/" rel="alternate"></link><link href="feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2019-05-03T14:23:00+05:30</updated><entry><title>A Dark Day For Consumer Rights - Right To Repair Bill Killed In Canada Thanks To Corporate Lobbying</title><link href="blog/2019/05/a-dark-day-for-consumer-rights-right-to-repair-bill-killed-in-canada-thanks-to-corporate-lobbying.html" rel="alternate"></link><published>2019-05-03T14:23:00+05:30</published><updated>2019-05-03T14:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2019-05-03:blog/2019/05/a-dark-day-for-consumer-rights-right-to-repair-bill-killed-in-canada-thanks-to-corporate-lobbying.html</id><summary type="html">&lt;p&gt;When Linus Torvalds wrote the &lt;a href="https://en.wikipedia.org/wiki/Linux"&gt;Linux Kernel&lt;/a&gt; in 1991 or Ian Murdock first released the &lt;a href="https://en.wikipedia.org/wiki/Debian"&gt;Debian OS&lt;/a&gt; in 1993, talking about the "openness" of a PC or the "right to repair it" would have been a laughable affair! 8086 was an open standard then (just as standards should be) and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When Linus Torvalds wrote the &lt;a href="https://en.wikipedia.org/wiki/Linux"&gt;Linux Kernel&lt;/a&gt; in 1991 or Ian Murdock first released the &lt;a href="https://en.wikipedia.org/wiki/Debian"&gt;Debian OS&lt;/a&gt; in 1993, talking about the "openness" of a PC or the "right to repair it" would have been a laughable affair! 8086 was an open standard then (just as standards should be) and anybody was free to write an operating system for it (such as Linux), or user land utilities (such as GNU) or even define a desktop standard (such as Xorg).&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="random image" class="alignnone size-medium wp-image-904" height="225" src="/uploads/2018/07/pexels-photo-261577-300x225.jpeg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;But in 2019, that's no longer the case with standards. Looks like humanity is going backward in terms of progress as standards are becoming more and more closed and proprietary instead of becoming open and transparent. Companies like Apple are successful in not only creating entire dependencies of such closed standards but are fighting tooth and nail so that their closed standards get a stamp from the legislature too.&lt;/p&gt;
&lt;p&gt;The law makers of Ontario, Canada succumbed to this massive corporate lobbying today and &lt;a href="https://motherboard.vice.com/en_us/article/9kxayy/right-to-repair-bill-killed-after-big-tech-lobbying-in-ontario"&gt;killed the "right to repair" bill before it could even see the lights of the day&lt;/a&gt;. This bill was asking for a very basic thing - the right to open your own device (which you've already paid for) and fix it for any problems. In order to empower a user to do this, the bill called for forcing tech companies like Apple to provide the following at a fair price:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Repair Manual&lt;/li&gt;
&lt;li&gt;Official Parts&lt;/li&gt;
&lt;li&gt;Diagnostic Tools&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is something very basic, something the Stallmans and Torvalds of the world have already been doing since 90s. Canada sent a very wrong signal to the tech world today, this would have been the first such pro-consumer law in the world, if passed. &lt;a href="https://motherboard.vice.com/en_us/article/evex8z/right-to-repair-advocates-are-hosting-youtube-town-halls-to-show-you-how-to-get-involved-in-the-movement"&gt;About 20 American states are also considering a similar right to repair bill&lt;/a&gt; and this sets a very wrong precedent to those decision makers. Both USA and Canada are highly developed countries and the whole world looks up to them for framing their own tech laws, so this is a very bad thing that happened today. I hope the American states will act sanely and pass this bill otherwise any hope left for open standards and protocols for the future generations will be lost. Since innovation blossoms in openness and gets stifled in closed environments, this will sound a death knell to innovation too.&lt;/p&gt;
&lt;p&gt;It is now left to organizations like &lt;a href="https://www.eff.org/"&gt;EFF&lt;/a&gt; and internet freedom activists like &lt;a href="https://stallman.org/"&gt;Richard Stallman&lt;/a&gt; to protest this decision and ensure some sanity in the tech world which is getting increasingly crony capitalistic.&lt;/p&gt;</content><category term="Internet"></category><category term="Open Source"></category></entry><entry><title>Foxy Firefighters And The Clash Between Individual And Collective Liberalism</title><link href="blog/2019/02/foxy-firefighters-and-the-clash-between-individual-and-collective-liberalism.html" rel="alternate"></link><published>2019-02-02T10:51:00+05:30</published><updated>2019-02-02T10:51:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2019-02-02:blog/2019/02/foxy-firefighters-and-the-clash-between-individual-and-collective-liberalism.html</id><summary type="html">&lt;p&gt;The biggest speculation in the tech industry these days concern net neutrality and the last week was no different. Whilst I'm happy that TRAI is clear on upholding the net neutrality in my own country, India, the clouds of doom could be clearly seen in USA as the FCC is …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The biggest speculation in the tech industry these days concern net neutrality and the last week was no different. Whilst I'm happy that TRAI is clear on upholding the net neutrality in my own country, India, the clouds of doom could be clearly seen in USA as the FCC is trying hard to banish net neutrality and bring control of the Internet in the hands of a few large companies.&lt;/p&gt;
&lt;p&gt;This is quite worrying for Internet in general because the world looks up to the United States for laws governing the digital space, not India. What's hilarious is that the FCC is resorting to unbelievable arguments like &lt;a href="https://arstechnica.com/tech-policy/2019/02/throttling-of-firefighters-hurts-fcc-case-as-it-defends-net-neutrality-repeal/"&gt;broadband isn't a telecommunication service&lt;/a&gt; in their desperate attempt to repeal net neutrality. I hope the US legal system is smart enough to discard such illogical arguments and the light of justice prevails in the country where Internet was first invented.&lt;/p&gt;
&lt;p&gt;&lt;img alt="random laptop image" class="size-medium wp-image-1087 aligncenter" height="200" src="/uploads/2019/02/laptop-1478822_1920-300x200.jpg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;The positive thing though is that those fighting on the side of net neutrality are also strong in numbers and include &lt;a href="https://9to5mac.com/2019/02/01/save-net-neutrality/"&gt;companies like Reddit, Mozilla, Vimeo, etc. along with 22 state attorneys&lt;/a&gt;. Also, unbelievably, in the middle of this protest against repeal of net neutrality are a &lt;a href="https://abcnews.go.com/beta-story-container/Business/firefighters-join-mozilla-net-neutrality-fight-citing-public/story?id=60750432"&gt;bunch of fire fighters&lt;/a&gt; who also want net neutrality to prevail! Fire fighters of California are citing public safety as a reason to uphold net neutrality and logically so. According to the linked ABC news report, California witnessed the largest fire in its entire history and the firefighters encountered an unexpected danger - they couldn't communicate with their team members as Verizon was deliberately throttling and slowing down Internet speed on their phones. This is just a small sample of what could happen across the world if net neutrality was repealed for good.&lt;/p&gt;
&lt;p&gt;In other news, &lt;a href="https://www.theverge.com/2019/1/29/18202880/facebook-research-enterprise-root-certificate-onavo-techcrunch"&gt;Facebook seems to be offering teenagers 20/month in exchange for their phone activity data&lt;/a&gt;. While privacy advocates are all pitchforks on this happening and calling for Facebook to be made liable, this has a very large implication on the ever ongoing debate on &lt;strong&gt;"Individual Liberty vs Collective Liberty"&lt;/strong&gt;. For me, personally, it makes sense that digital privacy is a very important thing and online companies shouldn't be encouraged by allowing to run schemes like these when studies have shown that they already collect a whole lot of user data by default (location tracking, analytics, diagnostic data, etc.). Any other ration dude who has some knowledge of Information Technology will also think similarly, I suppose. However, if I try to advocate this knowledge to others and call for laws preventing such individual sale of private data, we are venturing into the area of collective liberalism, and here comes the danger of a clash happening between collective and individual liberalism. The thing is that those teenagers (however misguided they are), have full liberty to trade their private data with facebook or whatever social media company they want, and preventing them from doing that might be against the ethics of individual liberalism, that's just my few cents. In all probability, this debate could continue for years to come and so will the privacy debate, hopefully a solution will be found which is favorable and acceptable to everyone.&lt;/p&gt;
&lt;p&gt;Last but not the least, there are &lt;a href="https://www.theguardian.com/technology/2019/feb/01/facebook-mental-health-study-happiness-delete-account"&gt;many studies like&lt;/a&gt; these sprouting up these days claiming that deleting Facebook or Twitter accounts bring happiness in people's lives. However, I want someone to perform another study into the mystery of why do so many people decidedly stay unhappy by constantly plugging into the social media sites!&lt;/p&gt;</content><category term="Internet"></category><category term="News"></category></entry><entry><title>Docker Trick: Running Containers Efficiently Using A Bash Script</title><link href="blog/2018/09/docker-trick-running-containers-efficiently-using-a-bash-script.html" rel="alternate"></link><published>2018-09-14T10:59:00+05:30</published><updated>2018-09-14T10:59:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-09-14:blog/2018/09/docker-trick-running-containers-efficiently-using-a-bash-script.html</id><summary type="html">&lt;p&gt;One of the basic problems with running a docker image is that its too easy to spew up multiple instances or containers of the same image. Consider running the following container for instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it -e AWS_ACCESS_KEY_ID=&amp;quot;test&amp;quot; -e AWS_SECRET_ACCESS_KEY=&amp;quot;test&amp;quot; \
--net=host &amp;quot;prahladyeri/testimage:latest&amp;quot; /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the basic problems with running a docker image is that its too easy to spew up multiple instances or containers of the same image. Consider running the following container for instance:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -it -e AWS_ACCESS_KEY_ID=&amp;quot;test&amp;quot; -e AWS_SECRET_ACCESS_KEY=&amp;quot;test&amp;quot; \
--net=host &amp;quot;prahladyeri/testimage:latest&amp;quot; /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will start a fresh container instance from image &lt;strong&gt;prahladyeri/testimage:latest&lt;/strong&gt; and you may optionally pass environment variables (using -e switch), and the /bin/bash argument to manually trigger a command inside the container instead of running the default one. However, once you exit the container, you don't have any control over that container &lt;em&gt;instance&lt;/em&gt;. Running the same "docker run" command as above is just going to spew another container instance for the same image, while the old one still stays in memory. Repeating this process multiple times is a wastage of invaluable memory and cores which isn't the goal of using docker at all!&lt;/p&gt;
&lt;p&gt;&lt;img alt="docker-logo" class="alignnone size-medium wp-image-1073" height="232" src="/uploads/2018/09/docker-logo-300x232.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;A more efficient way of handling things is to check the existence of a container instance already running for the image, and restart that one if required:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker ps -a -f &amp;quot;ancestor=prahladyeri/testimage:latest&amp;quot; -q -l
f7261ea890ce
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above command returns the id of an already running container (if any), so using that you can just restart that same container without passing all the parameters again as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker start -i f7261ea890ce
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, you can automate this whole process by writing a single bash script called &lt;em&gt;start_container:&lt;/em&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="nv"&gt;imgname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;prahladyeri/testimage:latest&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;imgid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;docker ps -a -f &lt;span class="s2"&gt;&amp;quot;ancestor=&lt;/span&gt;&lt;span class="nv"&gt;$imgname&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -q -l&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$imgid&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;creating new instance for &lt;/span&gt;&lt;span class="nv"&gt;$imgname&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  docker run -it -e &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt; -e &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt; --net&lt;span class="o"&gt;=&lt;/span&gt;host &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$imgname&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; /bin/bash
&lt;span class="k"&gt;else&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;instance found&amp;quot;&lt;/span&gt;
  docker start -i &lt;span class="k"&gt;$(&lt;/span&gt;docker ps -a -f &lt;span class="s2"&gt;&amp;quot;ancestor=&lt;/span&gt;&lt;span class="nv"&gt;$imgname&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; -q -l&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Just replace the \$&lt;em&gt;imgname&lt;/em&gt; variable with that of your own image name, and pass any arguments you want (for example, &lt;strong&gt;&lt;em&gt;-e AWS_KEY_ID&lt;/em&gt;&lt;/strong&gt;) to the container on line 7. This script will start a new container only if none are found already, otherwise, it will just restart an existing one!&lt;/p&gt;
&lt;p&gt;Hope you find this useful.&lt;/p&gt;</content><category term="Docker"></category><category term="Linux"></category></entry><entry><title>Docker is the best thing to happen to Linux since the GNU bread</title><link href="blog/2018/09/docker-is-the-best-thing-to-happen-to-linux-since-the-gnu-bread.html" rel="alternate"></link><published>2018-09-13T09:00:00+05:30</published><updated>2018-09-13T09:00:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-09-13:blog/2018/09/docker-is-the-best-thing-to-happen-to-linux-since-the-gnu-bread.html</id><summary type="html">&lt;p&gt;Its has become an oft-repeated cliche now that docker has become the latest buzzword, both in DevOps circles as well as the open source community. But being the ever cynic and contrarian, I wasn't quite convinced of its merits until quite recently, I thought it was just another hype that …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Its has become an oft-repeated cliche now that docker has become the latest buzzword, both in DevOps circles as well as the open source community. But being the ever cynic and contrarian, I wasn't quite convinced of its merits until quite recently, I thought it was just another hype that will come and go like all other things.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;After all, software configuration management has been going on nicely without these kinds of virtualization tools since ages, and since I can install and configure php/python/apache/nginx/whatever on any given LAMP box, and there is already virtualbox to create a parallel LAMP setup on my laptop, why exactly do I need docker?&lt;/p&gt;
&lt;p&gt;But some months ago, I came to understand that the contributors to the docker project included some of the biggest industry leaders such as &lt;a href="https://en.wikipedia.org/wiki/Docker_(software)#Adoption"&gt;Google, Microsoft, IBM, Cisco and Red Hat&lt;/a&gt;, and Linux is their primary development platform! Now, all of these professional companies couldn't have possibly bet on the wrong horse, isn't it? So, I got interested and started exploring a bit more about docker and learned that it sat somewhere between pure hardware virtualization like VirtualBox/VMWare and the slow software emulation like QEMU.&lt;/p&gt;
&lt;p&gt;In fact, docker uses existing linux tools and libraries like iptables, apparmor, SELinux and libvirt to create an efficient solution for containerized running of your apps. This parallel environment is called &lt;strong&gt;container&lt;/strong&gt;, and unlike the other parallel environment called VMs, a container is a lot more efficient and conservative of resources (memory and cores), since it doesn't have to emulate or churn up an entirely new virtual kernel or operating system. The isolation is there at the application level, not at the operating system level which is exactly the need of the hour in about 90% of use cases for software engineers. I think the below diagram illustrates this point very well:&lt;/p&gt;
&lt;p&gt;[caption id="" align="aligncenter" width="1200"]&lt;img alt="Docker Containers vs Virtualbox VMs" height="491" src="https://www.docker.com/sites/default/files/styles/large/public/compare/docker-containerized-and-vm-transparent-bg.png?itok=nyQG8a_p" width="1200"&gt; &lt;strong&gt;Docker Containers vs Virtualbox VMs (&lt;em&gt;Image Source: &lt;a href="https://www.docker.com"&gt;Docker.com&lt;/a&gt;&lt;/em&gt;)&lt;/strong&gt;[/caption]&lt;/p&gt;
&lt;p&gt;Emulating a system or running an app in a jailed or containerized environment is just one use case of docker, another and probably more popular use case is &lt;strong&gt;deployment&lt;/strong&gt; and &lt;strong&gt;integration testing&lt;/strong&gt;. The advantage of using containerized deployment is that you don't actually have to install php and nginx to run wordpress, you don't actually have to install python and flask to run a flask app!&lt;/p&gt;
&lt;p&gt;All the developer does is builds a docker &lt;em&gt;image&lt;/em&gt; (of which a container is an instance) and your image can derive from and add reference to one of the several official pre-built ones on the docker hub such as &lt;a href="https://hub.docker.com/_/python/"&gt;Python&lt;/a&gt;, &lt;a href="https://hub.docker.com/_/php/"&gt;PHP,&lt;/a&gt; &lt;a href="https://hub.docker.com/_/nginx/"&gt;nginx&lt;/a&gt;, etc. All a developer has to do is define a thing called &lt;a href="https://docs.docker.com/engine/reference/builder/"&gt;DockerFile&lt;/a&gt; (the source code used to build an image), add reference to Python or whatever (there are variants like &lt;em&gt;python:slim&lt;/em&gt; or &lt;em&gt;python-\&amp;lt;version&gt;&lt;/em&gt; to take care of specific cases), add his source code files (including &lt;em&gt;requirements.txt&lt;/em&gt; to pull the packages from pypi if need be), build, run, test and push the container to the &lt;a href="https://hub.docker.com"&gt;docker hub&lt;/a&gt; and be done with it! The developer runs a container which is entirely self-contained and entirely separated from his actual system. You don't need to have python, php or any of the image dependencies on your actual system, you've developed your entire application without installing a single software on your system, and without resorting to heavy parallelization tools like VMs, can you even imagine how magical that feels!&lt;/p&gt;
&lt;p&gt;Once the developer pushes the image to docker hub, the DevOps or sysadmin can pull that image from there and install it on his production, testing or whatever cloud instance and just run it. Without any single configuration change, the container will run exactly as it ran on developer's environment which is just magically innovative! You've essentially abstracted away your application development and deployment to such an extent that its no longer necessary for developer and DevOps to communicate or agree on any conventions, or even know each other at all!&lt;/p&gt;
&lt;p&gt;The separation of concerns between a docker container or image, and the underlying linux system is what does this whole magic:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1053" align="alignnone" width="492"]&lt;img alt="Docker Engine Components" class="size-full wp-image-1053" height="385" src="/uploads/2018/09/docker-engine-components-flow.png" width="492"&gt; &lt;strong&gt;Docker Engine Components&lt;/strong&gt;[/caption]&lt;/p&gt;
&lt;p&gt;Docker runs as a systemd service or daemon on your linux system and is responsible for keeping this separation intact and basic errands like building an image from DockerFile, running a container from the image, list down, track and clean images and containers, push images to docker hub, etc. And all this happens using a single docker command which is easy to grasp once you start using it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;## List CLI commands
docker
docker container --help

## Display version and info
docker --version
docker version
docker info

## Execute image
docker run hello-world

## List images
docker image ls #or docker images

## List containers (running, all, all in quiet mode)
docker container ls
docker container ls --all
docker container ls -aq
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, an entire tutorial on docker is out of scope for this article, but I'd like to leave some useful links to help you install, learn and use it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com"&gt;Docker Official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/"&gt;Installing Docker Community Edition on Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.docker.com/resources/what-container"&gt;What is a Docker Container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.docker.com/get-started/part2/"&gt;Getting Started With Containers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hub.docker.com"&gt;Docker Hub (The Docker equivalent of Github)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Docker"></category><category term="Linux"></category></entry><entry><title>Performing A Little Usability Tweak On The XFCE Window Recycler in Greybird Theme</title><link href="blog/2018/09/performing-a-little-usability-tweak-on-the-xfce-window-recycler-in-greybird-theme.html" rel="alternate"></link><published>2018-09-11T09:44:00+05:30</published><updated>2018-09-11T09:44:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-09-11:blog/2018/09/performing-a-little-usability-tweak-on-the-xfce-window-recycler-in-greybird-theme.html</id><summary type="html">&lt;p&gt;Xubuntu is my favorite distro, hands down and the default Greybird theme is just wonderful! There used to be a time when I liked Ubuntu-MATE too, but not so much since they took the road to GTK+3! Coming back to the topic, XFCE works great but it has a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Xubuntu is my favorite distro, hands down and the default Greybird theme is just wonderful! There used to be a time when I liked Ubuntu-MATE too, but not so much since they took the road to GTK+3! Coming back to the topic, XFCE works great but it has a small usability issue in the default Greybird theme which annoys most power users.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;ALT+TAB is the usual way to recycle window icons on any DE, and the "tab" key determines the currently focused window. Now, one of the Greybird theme developers decided in his profound wisdom that a mouse move over the cycling dialog can cause a window focus too. Since the mouse cursor occupies a central position most of the time, it automatically causes an item in the cycling dialog to be selected which is not intended at all! While this could be a great "feature" for those users who like juggling with their mouse while pressing the ALT+TAB keys, I hardly think any power user would like to do that. For most users, this could be easily a cause of annoyance or frustration since they have to move the mouse out of the dialog's range to ensure that it doesn't interfere with their selection again.&lt;/p&gt;
&lt;p&gt;&lt;img alt="XFCE Alt+Tab Cycling Dialog" src="/uploads/2018/09/alt-tab-cycling.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the blue background represents the selected/active window. Now, imagine intending to select the firefox window by pressing ALT+TAB, but terminal window gets selected instead since the mouse happens to be placed there! Astonishingly, however, I couldn't find any discussions or issues raised regarding this anywhere on the internet except &lt;a href="https://forum.xfce.org/viewtopic.php?id=9585"&gt;this one thread on XFCE forums&lt;/a&gt;. After making some tweaks to their code, I was able to come up with my own version which resolves this issue:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;include &amp;quot;/usr/share/themes/Greybird/gtk-2.0/gtkrc&amp;quot;

style &amp;quot;xfwm-tabwin-tweak&amp;quot;
{
 Xfwm4TabwinWidget::border-width = 1
 Xfwm4TabwinWidget::border-alpha = 0.9
 Xfwm4TabwinWidget::icon-size = 64
 Xfwm4TabwinWidget::listview-icon-size = 16
 Xfwm4TabwinWidget::preview-size = 512
 Xfwm4TabwinWidget::alpha = 0.9 #0.8
 Xfwm4TabwinWidget::border-radius = 5 #10

bg[NORMAL] = shade (0.45, @bg_color_dark) # widget background color
 bg[ACTIVE] = shade (0.65, @selected_bg_color)# when keyboard and mouse focus on the same item
 bg[PRELIGHT] = shade (0.45, @bg_color_dark) # color of item with mouse hovering on it, which we want to make it
 bg[SELECTED] = shade (0.65, @selected_bg_color) #color of selected item using keyboard

fg[NORMAL] = shade (0.8, &amp;quot;#fff&amp;quot;) #shade (0.8, @base_color)
 fg[ACTIVE] = &amp;quot;#fff&amp;quot; #@base_color # text color of item where our mouse and keyboard meet
 fg[PRELIGHT] = shade (0.8, &amp;quot;#fff&amp;quot;) #shade (0.8, @base_color)
 fg[SELECTED] = &amp;quot;#fff&amp;quot; #@base_color

engine &amp;quot;murrine&amp;quot; {
 roundness = 6
 }
}

widget &amp;quot;xfwm4-tabwin*&amp;quot; style &amp;quot;xfwm-tabwin-tweak&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Save the above file as \~/.gtkrc-2.0 and change your theme from Greybird to something else and back again, and this issue will be resolved.&lt;/p&gt;</content><category term="Linux"></category><category term="XFCE"></category></entry><entry><title>Linux DIY: Creating a Multiboot USB Drive With ISO Images Of Multiple Distros</title><link href="blog/2018/09/linux-diy-creating-a-multiboot-usb-drive-with-iso-images-of-multiple-distros.html" rel="alternate"></link><published>2018-09-11T04:32:00+05:30</published><updated>2018-09-11T04:32:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-09-11:blog/2018/09/linux-diy-creating-a-multiboot-usb-drive-with-iso-images-of-multiple-distros.html</id><summary type="html">&lt;p&gt;Though I'm not a distro-hopper exactly, I keep trying live versions of popular linux distros like &lt;strong&gt;debian&lt;/strong&gt; and &lt;strong&gt;ubuntu&lt;/strong&gt; every now and then, and while I generally use the "dd" command which works right out of the box, today I thought that instead of burning a new ISO image each …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Though I'm not a distro-hopper exactly, I keep trying live versions of popular linux distros like &lt;strong&gt;debian&lt;/strong&gt; and &lt;strong&gt;ubuntu&lt;/strong&gt; every now and then, and while I generally use the "dd" command which works right out of the box, today I thought that instead of burning a new ISO image each time, why not create a single 16GB USB stick which can boot multiple distro images!&lt;!--more--&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dd if=xubuntu-18.04.1-desktop-amd64.iso of=/dev/sdb bs=1M
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This simple dd command does the job, but you are left with a single ISO image occupying the entire disk space which is an inefficiency if you have a larger drive that can hold multiple images. So, let's learn how to reclaim all that space by creating a single USB which can boot multiple ISO images. Though the process is a bit more involved than the dd command, the reward is obviously worth it too.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-1: Format your USB drive to FAT32, there should be a single partition on the drive with boot flag enabled.&lt;/strong&gt; - Also, label the drive as MULTIBOOT or something for recognizing it easier. Though the linked article below uses the fdisk/mkfs.vfat commands, you can even use graphical tools like &lt;strong&gt;gparted&lt;/strong&gt; to make this process simpler.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gparted" class="alignnone size-full wp-image-1020" height="520" src="/uploads/2018/09/gparted.png" width="774"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-2: Install grub2 on the newly formatted drive, create a boilerplate grub.cfg file:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Close the gparted window if its open, otherwise the drive won't be mounted.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;sudo grub-install --force --no-floppy --boot-directory=/media/prahlad/MULTIBOOT/boot /dev/sdx&lt;/code&gt; (replacing path with yours, &lt;strong&gt;x&lt;/strong&gt; with your actual USB device)&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;cd /media/prahlad/MULTIBOOT/boot/grub&lt;/code&gt; (or whatever your path is)&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;wget http://pendrivelinux.com/downloads/multibootlinux/grub.cfg&lt;/code&gt; (to get the grub.cfg file)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Step-3: Copy whatever ISOs you want into the root folder of your drive.&lt;/strong&gt; For the purposes of this example, let's consider latest LTS releases of Ubuntu and Xubuntu (swap with any other flavors or debian too if you prefer):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp ubuntu-18.04.1-desktop-amd64.iso /media/prahlad/MULTIBOOT/
cp xubuntu-18.04.1-desktop-amd64.iso /media/prahlad/MULTIBOOT/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Step-4: Edit the grub.cfg you just downloaded, and configure entries for your ISOs accordingly.&lt;/strong&gt; Its important that you do this carefully:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# This grub.cfg file was created by Lance http://www.pendrivelinux.com
# Suggested Entries and the suggestor, if available, will also be noted.

set timeout=10
set default=0

menuentry &amp;quot;Ubuntu Desktop ISO&amp;quot; {
 loopback loop /ubuntu-18.04.1-desktop-amd64.iso
 linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=/ubuntu-18.04.1-desktop-amd64.iso noeject noprompt splash --
 initrd (loop)/casper/initrd.lz
}

menuentry &amp;quot;Xubuntu Desktop ISO&amp;quot; {
 loopback loop /xubuntu-18.04.1-desktop-amd64.iso
 linux (loop)/casper/vmlinuz boot=casper iso-scan/filename=/xubuntu-18.04.1-desktop-amd64.iso noeject noprompt splash --
 initrd (loop)/casper/initrd
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, I've changed only the menu entries to keep things simple. The arguments are also self apparent. For instance, &lt;em&gt;loopback&lt;/em&gt; and &lt;em&gt;loop&lt;/em&gt; attributes are used because we aren't booting directly from the USB, but mounting the virtual loop device (ISO file) instead.&lt;/p&gt;
&lt;p&gt;However, note that there could be subtle differences between distros, xubuntu uses &lt;strong&gt;&lt;em&gt;/casper/initrd&lt;/em&gt;&lt;/strong&gt; instead of &lt;strong&gt;&lt;em&gt;/casper/initrd.lz&lt;/em&gt;&lt;/strong&gt;, for instance. To know the right entry for your own distro, compare the "&lt;em&gt;/boot/grub/grub.cfg" file&lt;/em&gt; of your distro ISO to get a hint about what menu entry to add. If your ISO isn't one of the 'buntus or a debian, then it might get trickier.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-5: Boot from your USB drive and ensure that it works.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Make sure that you boot from your newly created USB drive, not from the hard drive as usual. If everything goes right, you should be able to see a grub boot screen with the two menus for Ubuntu and Xubuntu.&lt;/p&gt;
&lt;p&gt;Once this process is successful, adding new ISOs to your drive is only too easy. Just copy the brand new ISO to your drive's root directory and just add the necessary entry in &lt;em&gt;/boot/grub/grub.cfg&lt;/em&gt;, that's it!&lt;/p&gt;
&lt;p&gt;Finally, you'll have to enable legacy boot option if not already done in your bios settings, this process won't work with EFI/UEFI systems since the drive doesn't have an EFI partition. I might do another post about creating a similar drive for EFI/UEFI setups in future, until then you can refer to &lt;a href="https://old.reddit.com/r/linux/comments/9es7j1/linux_diy_creating_a_multiboot_usb_drive_with_iso/e5sa5d8/"&gt;this reddit post&lt;/a&gt; by &lt;a href="https://old.reddit.com/user/need2burn"&gt;/u/need2burn&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Best of luck, and let me know how it goes in comments below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Reference:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;http://www.pendrivelinux.com/boot-multiple-iso-from-usb-via-grub2-using-linux/&lt;/p&gt;</content><category term="Linux"></category></entry><entry><title>Userscript Recipe: Adding Auto-Refresh Button to GMail Classic</title><link href="blog/2018/08/userscript-recipe-adding-auto-refresh-button-to-gmail-classic.html" rel="alternate"></link><published>2018-08-28T21:48:00+05:30</published><updated>2018-08-28T21:48:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-08-28:blog/2018/08/userscript-recipe-adding-auto-refresh-button-to-gmail-classic.html</id><summary type="html">&lt;p&gt;Call me old, but I much prefer the older classic GMail interface to the modern bloated one. Not only is the classic version less bandwidth consuming, but also simplistic in nature with just the buttons and tools that we need.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;I somehow don't like it when zillions of AJAX scripts …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Call me old, but I much prefer the older classic GMail interface to the modern bloated one. Not only is the classic version less bandwidth consuming, but also simplistic in nature with just the buttons and tools that we need.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;I somehow don't like it when zillions of AJAX scripts do all kinds of magic in the background of the web-page. However, I still want the GMail tab to auto-refresh itself and check new mails while I'm working in another tab in my browser. If only Google provided a way to auto-refresh in the classic interface! Since there isn't one, I &lt;a href="https://gist.github.com/prahladyeri/b66ba873106474520577ff744aa1ed46"&gt;wrote a user-script&lt;/a&gt; to add this functionality:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1009" align="alignnone" width="1171"]&lt;img alt="GMail Classic" class="size-full wp-image-1009" height="561" src="/uploads/2018/08/gmail_classic_final.png" width="1171"&gt; GMail Classic[/caption]&lt;/p&gt;
&lt;p&gt;You can use any Script extension for Chrome/Firefox such as &lt;strong&gt;GreaseMonkey&lt;/strong&gt; or &lt;strong&gt;TamperMonkey&lt;/strong&gt; to add this userscript to your browser. I really hope you find this userscript useful!&lt;/p&gt;</content><category term="JavaScript"></category></entry><entry><title>Windows Recipe: How to quickly track your active network connections using Resmon Utility</title><link href="blog/2018/08/windows-recipe-how-to-quickly-track-your-active-network-connections-using-resmon-utility.html" rel="alternate"></link><published>2018-08-28T10:58:00+05:30</published><updated>2018-08-28T10:58:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-08-28:blog/2018/08/windows-recipe-how-to-quickly-track-your-active-network-connections-using-resmon-utility.html</id><summary type="html">&lt;p&gt;Windows 10 is a great operating system when its clean and well-maintained but once you start cluttering it with more and more apps, your Internet speed typically starts to slow down and it becomes increasingly difficult to find out which background app is consuming your bandwidth.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;One way of tackling …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Windows 10 is a great operating system when its clean and well-maintained but once you start cluttering it with more and more apps, your Internet speed typically starts to slow down and it becomes increasingly difficult to find out which background app is consuming your bandwidth.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;One way of tackling this is to harden the windows firewall by restricting outgoing TCP connections too (incoming are already restricted by default). But this is quite cumbersome in the long run as you will have to whitelist each and every executable that needs to access the internet which can be a difficult and time consuming task.&lt;/p&gt;
&lt;p&gt;Another quick way of finding out which app is consuming your most bandwidth (whether on the background or foreground) is to fire up the &lt;strong&gt;Windows Resource Monitor&lt;/strong&gt; by running &lt;strong&gt;resmon.exe&lt;/strong&gt; which is a nice Windows utility program that comes by default. By clicking on the Network tab and expanding the Network Activity pane, you'll come to know exactly how much bandwidth each executable is eating on your system!&lt;/p&gt;
&lt;p&gt;[caption id="attachment_1005" align="alignnone" width="935"]&lt;img alt="Resource Monitor" class="size-full wp-image-1005" height="593" src="/uploads/2018/08/resmon.png" width="935"&gt; Resource Monitor (resmon.exe) running on Windows[/caption]&lt;/p&gt;
&lt;p&gt;Once you know the culprit EXE causing the bandwidth drain, you can either uninstall that app or block it in the windows firewall. All in all, resmon.exe is a great utility in the hands of the Windows power user who wants to take control of his/her operating system. I hope you find this utility useful.&lt;/p&gt;</content><category term="windows"></category><category term="windows utility"></category></entry><entry><title>Beware of Uber's vomit fraud when booking a cab next time</title><link href="blog/2018/07/beware-of-ubers-vomit-fraud-when-booking-a-cab-next-time.html" rel="alternate"></link><published>2018-07-24T10:51:00+05:30</published><updated>2018-07-24T10:51:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-24:blog/2018/07/beware-of-ubers-vomit-fraud-when-booking-a-cab-next-time.html</id><summary type="html">&lt;p&gt;According to some recent reports by top technology blogs, Uber drivers have been reportedly engaging in an activity called "vomit fraud". Basically, Uber (and many other cab services too) allow their drivers to collect a fine of up to \$150 if their customer creates a mess in the cab (such …&lt;/p&gt;</summary><content type="html">&lt;p&gt;According to some recent reports by top technology blogs, Uber drivers have been reportedly engaging in an activity called "vomit fraud". Basically, Uber (and many other cab services too) allow their drivers to collect a fine of up to \$150 if their customer creates a mess in the cab (such as puking).&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;However, we aren't talking about the occasional real puke or vomit here, drivers are reportedly exploiting this feature to fraudulently claim a "cleaning fee" even when no such thing was done by a customer.&lt;/p&gt;
&lt;p&gt;&lt;img alt="bmw-car-driving" class="alignnone wp-image-994 size-medium" height="200" src="/uploads/2018/07/bmw-car-driving-13781-300x200.jpg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;For instance, according to &lt;a href="https://gizmodo.com/ubers-vomit-fraud-sounds-worse-than-surge-pricing-1827797566"&gt;this Gizmodo report&lt;/a&gt; a Miami resident was recently fined twice fraudulently for this. And whilst you might recover this fine by engaging with their customer care and maybe exchanging several emails with them, the process is almost infinitely tedious and there isn't a guarantee that you may get your money back.&lt;/p&gt;
&lt;p&gt;To make things worse, as per this &lt;a href="https://mashable.com/2018/07/23/uber-vomit-fraud"&gt;Mashable report&lt;/a&gt;, a tech savvy driver may also photoshop a fake picture of a puke and provide it as evidence thus making your chances of recovering the fine almost zero.&lt;/p&gt;
&lt;p&gt;The practice has become so rampant that the drivers are openly admitting doing this on social media platforms and treating it casually. From the linked Mashable report:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&gt;&gt; &lt;em&gt;"lol vomit fraud is the oldest trick in my book," one Redditor — with &lt;a href="https://old.reddit.com/r/lyftdrivers/comments/8cdg8k/lyft_pickup_changed_rerouting/"&gt;a history&lt;/a&gt; of &lt;a href="https://old.reddit.com/r/uberdrivers/comments/8b9olz/just_announced_rate_increases_for_drivers/"&gt;ride-hail related&lt;/a&gt; posts — &lt;a href="https://old.reddit.com/r/uberdrivers/comments/910kt8/its_called_vomit_fraud_and_it_could_make_your/e2v96m7/"&gt;wrote in r/uberdrivers&lt;/a&gt;. "I’ve successfully done it many times when [passengers] are rude, slam my doors, or make me wait too long. Makes them learn the hard way."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I don't know what could be the solution to this other than some basic "street-smartness" by customers and maybe the built-in review system. If drivers who indulge in such fraudulent behavior are reported frequently and called upon by customers in their reviews, that should ideally purge the system of bad drivers in the long-term.&lt;/p&gt;</content><category term="Uber"></category></entry><entry><title>XFCE panel indicator plugin background fix</title><link href="blog/2018/07/xfce-panel-indicator-plugin-background-fix.html" rel="alternate"></link><published>2018-07-21T00:14:00+05:30</published><updated>2018-07-21T00:14:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-21:blog/2018/07/xfce-panel-indicator-plugin-background-fix.html</id><summary type="html">&lt;p&gt;The indicator plugin in XFCE panel has been a very useful but also a very controversial plugin! The reason is that its the only plugin on the XFCE panel developed in GTK3 (whereas rest of the panel is developed in GTK2) and this causes some theming issues.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Specifically, only those …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The indicator plugin in XFCE panel has been a very useful but also a very controversial plugin! The reason is that its the only plugin on the XFCE panel developed in GTK3 (whereas rest of the panel is developed in GTK2) and this causes some theming issues.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Specifically, only those themes will work for the panel who's developers have taken care to style both the GTK2 and GTK3 components, otherwise it results in an odd background color around the indicator plugin which isn't in sync with rest of the theme:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_976" align="alignnone" width="380"]&lt;img alt="xfce-indicator-plugin-background-issue" class="size-full wp-image-976" height="130" src="/uploads/2018/07/xfce-indicator-plugin-background-issue.png" width="380"&gt; XFCE indicator-plugin background issue[/caption]&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bugs.launchpad.net/bugs/1408979"&gt;Bug #1408979&lt;/a&gt; has been reported on launchpad for this and even askubuntu is filled with &lt;a href="https://askubuntu.com/questions/663248/xubuntu-indicator-plugin-background"&gt;a bunch of questions&lt;/a&gt; pertaining to this issue. I came across this while trying to port &lt;a href="https://prahladyeri.com/blog/2018/07/how-to-make-your-xubuntu-desktop-look-and-behave-like-ubuntu-mate.html"&gt;ambiance looks to my xubuntu desktop&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The fix is really simple if your theme already has GTK3 support (but not for the indicator plugin specifically). GTK3 support typically exists for your theme if it has &lt;strong&gt;/gtk-3.0&lt;/strong&gt; folder in its root folder. All you have to do is open the &lt;strong&gt;/\&amp;lt;your_theme&gt;/gtk-3.0/gtk.css&lt;/strong&gt; and add this style patch to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;/*xfce panel workaround */&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;xfce4-panel&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dark_bg_color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="k"&gt;font&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;xfce4-panel&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dark_bg_color&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;xfce4-panel&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;active&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;xfce4-panel&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;checked&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background-image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;shade&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dark_bg_color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;xfce4-panel&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;xfce4-panel&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;active&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;hover&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;xfce4-panel&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;button&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;checked&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;shade&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;dark_bg_color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make sure to replace the &lt;strong&gt;\@dark_bg_color&lt;/strong&gt; with whatever your theme's background color is. After the above change, just apply your theme using the theme switcher and you will see this problem magically fixed!&lt;/p&gt;
&lt;p&gt;Now in cases where your theme doesn't have GTK3 support, it might get tricky. I faced this same issue with the &lt;a href="https://www.xfce-look.org/p/1016446/"&gt;Ambiance XFCE theme&lt;/a&gt;, for instance. What I did as a workaround was copy the &lt;strong&gt;gtk-3.0&lt;/strong&gt; folder from the official Ambiance theme from &lt;strong&gt;ubuntu-mate-themes&lt;/strong&gt; package to the linked XFCE theme's folder and then did the above fix. Of course, I could have used the official theme itself in the first place, but it doesn't support xfwm4.&lt;/p&gt;
&lt;p&gt;I hope the above information helps you if you were looking for a fix to this exact same issue.&lt;/p&gt;</content><category term="XFCE"></category><category term="Xubuntu"></category></entry><entry><title>How to make your Xubuntu 16.04 Desktop look and behave like Ubuntu-MATE</title><link href="blog/2018/07/how-to-make-your-xubuntu-desktop-look-and-behave-like-ubuntu-mate.html" rel="alternate"></link><published>2018-07-18T19:40:00+05:30</published><updated>2018-07-18T19:40:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-18:blog/2018/07/how-to-make-your-xubuntu-desktop-look-and-behave-like-ubuntu-mate.html</id><summary type="html">&lt;p&gt;Xubuntu is one of the most popular among the "lighter" distros as it hardly consumes 200MB when idle and even older machines are able to run with acceptable performance. Ubuntu-MATE which is based on MATE Desktop (a GNOME-2 fork) is also a similar competing distro though its debatable whether its …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Xubuntu is one of the most popular among the "lighter" distros as it hardly consumes 200MB when idle and even older machines are able to run with acceptable performance. Ubuntu-MATE which is based on MATE Desktop (a GNOME-2 fork) is also a similar competing distro though its debatable whether its as light as Xubuntu in terms of resource consumption.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;[caption id="attachment_955" align="alignnone" width="1024"]&lt;img alt="Xubuntu Desktop which looks like Ubuntu-MATE" class="wp-image-955 size-large" height="576" src="/uploads/2018/07/ubuntu-mate_lookalike-1024x576.png" width="1024"&gt; Xubuntu Desktop which looks like Ubuntu-MATE[/caption]&lt;/p&gt;
&lt;p&gt;Making a switch from Xubuntu to Ubuntu-MATE totally makes sense if you have any particular reason for it, but I've observed that many people make that switch only because they like the astonishing looks of Ubuntu-MATE which are admittedly and relatively better compared to XFCE. For whatever reason (such as familiarity) if you want to just stay on Xubuntu but still want to have the "look and feel" of Ubuntu-MATE, its very easy to achieve that, you just have to follow this brief process described in this article.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-1: Download the Ambiance theme for XFCE from &lt;a href="https://www.xfce-look.org/p/1016446/"&gt;here&lt;/a&gt; and extract them to your \~/.themes/ folder.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Whilst the official Ubuntu packages &lt;strong&gt;mate-themes&lt;/strong&gt; and &lt;strong&gt;ubuntu-mate-themes&lt;/strong&gt; also come with a version of Ambiance theme, the window title background didn't turn dark when I applied it for some reason. You can still have those packages installed if you want, but the one in your \~/.themes/ folder will override any installed themes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-2: Apply Ambiance GTK theme.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Head over to Appearance applet in your XFCE Settings Manager and switch the GTK theme to &lt;strong&gt;Ambiance&lt;/strong&gt; which you should now see after performing step-1:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_956" align="alignnone" width="642"]&lt;img alt="Settings Manager-&gt;Appearance" class="size-full wp-image-956" height="530" src="/uploads/2018/07/SM_appearance.png" width="642"&gt; Settings Manager-&gt;Appearance[/caption]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-3: Apply Ambiance Window Manager theme.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The next step is to do the same for Window Manager theme. Head over to Window Manager applet and make the switch there too:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_957" align="alignnone" width="642"]&lt;img alt="Settings Manager-&gt;Window Manager" class="wp-image-957 size-full" height="530" src="/uploads/2018/07/SM_window_manager.png" width="642"&gt; Settings Manager-&gt;Window Manager[/caption]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-4: Install Ubuntu-MATE icons.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is for adding those green MATE icons. Just run this command to install the official package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt install ubuntu-mate-icon-themes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again open the Appearance applet but this time click the &lt;strong&gt;Icons&lt;/strong&gt; tab on the top, and just select &lt;strong&gt;Ambiance-MATE&lt;/strong&gt; from there:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_958" align="alignnone" width="642"]&lt;img alt="Settings Manager-&gt;Appearance (Icons Tab)" class="size-full wp-image-958" height="530" src="/uploads/2018/07/SM_appearance_icons.png" width="642"&gt; Settings Manager-&gt;Appearance (Icons Tab)[/caption]&lt;/p&gt;
&lt;p&gt;Optionally, you can also click the &lt;strong&gt;Fonts&lt;/strong&gt; tab and change the font to Ubuntu or one of its derivatives to get that Ubuntu-MATE feel!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step-5: Use the magic switch: XFCE Panel Switch.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;XFCE Panel Switch&lt;/strong&gt; is a wonderful tool that drastically alters the layout of your XFCE Desktop, just search for "XFCE Panel Switch" in your whisker menu or find it under &lt;strong&gt;Settings&lt;/strong&gt; in your regular menu. Start that tool and you'll be able to switch to any desired desktop layout (choose "GNOME 2" for the looks of Ubuntu-MATE and click "Apply" icon which is the first in the bottom list of small icons):&lt;/p&gt;
&lt;p&gt;[caption id="attachment_967" align="alignnone" width="352"]&lt;img alt="XFCE Panel Switch" class="size-full wp-image-967" height="430" src="/uploads/2018/07/xfce-panel-switch.png" width="352"&gt; XFCE Panel Switch[/caption]&lt;/p&gt;
&lt;p&gt;Once you do that, you should be able to get a perfect Ubuntu-MATE look alike such as the one shown on the top screen. Finally and optionally, you can also install the official package &lt;strong&gt;ubuntu-mate-wallpapers&lt;/strong&gt; if you like their wallpapers too.&lt;/p&gt;</content><category term="Linux"></category><category term="Ubuntu"></category><category term="Ubuntu-MATE"></category><category term="Xubuntu"></category></entry><entry><title>Its an eerie world where tech giants can simply ban the plebeians into a digital exile</title><link href="blog/2018/07/its-an-eerie-world.html" rel="alternate"></link><published>2018-07-14T18:13:00+05:30</published><updated>2018-07-14T18:13:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-14:blog/2018/07/its-an-eerie-world.html</id><summary type="html">&lt;p&gt;Today morning, I came across &lt;a href="https://medium.com/@jacksoncunningham/digital-exile-how-i-got-banned-for-life-from-airbnb-615434c6eeba"&gt;this medium post&lt;/a&gt; from Jackson Cunningham in which he describes how AirBnB simply banned him for life from their website without a due process. Jackson's mistake:&lt;!--more--&gt; He and his girlfriend rented an apartment with a rude host who came in barging in an hour before …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today morning, I came across &lt;a href="https://medium.com/@jacksoncunningham/digital-exile-how-i-got-banned-for-life-from-airbnb-615434c6eeba"&gt;this medium post&lt;/a&gt; from Jackson Cunningham in which he describes how AirBnB simply banned him for life from their website without a due process. Jackson's mistake:&lt;!--more--&gt; He and his girlfriend rented an apartment with a rude host who came in barging in an hour before the checkout time and started forcing them out, and Jackson later wrote a review about it on Google (the AirBnB's own website didn't accept a negative review about a host as its their usual practice):&lt;/p&gt;
&lt;p&gt;&lt;img alt="google review of jackson cunningham" class="alignnone size-full" height="487" src="https://cdn-images-1.medium.com/max/800/0*ZiRvqmzxuAljq3Fy" width="652"&gt;&lt;/p&gt;
&lt;p&gt;And Jackson isn't alone who has faced the wrath of this tech giant. As the top comments on &lt;a href="https://old.reddit.com/r/technology/comments/8yk1rp/digital_exile_how_i_got_banned_for_life_from/"&gt;this reddit post&lt;/a&gt; corroborate, many others who tried to rent through AirBnB have faced a similar consequence:&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/technology/comments/8yk1rp/digital_exile_how_i_got_banned_for_life_from/e2bqq3p/&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/technology/comments/8yk1rp/digital_exile_how_i_got_banned_for_life_from/e2bv3xx/&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/technology/comments/8yk1rp/digital_exile_how_i_got_banned_for_life_from/e2c5z36/&lt;/p&gt;
&lt;p&gt;The broader philosophical question is how easy it has become for the large tech giants of the world to simply place a plebeian or commoner into a digital exile by one flip of a switch today. The problem isn't that a company like AirBnB is able to ban a user, the problem is that people have allowed AirBnB to become a kind of digital monopoly that is able to ruin one's earnings, employment and service availing for life by simply banning them. Its the people who have given them this power, or in other words, the plebeians have brought this upon themselves.&lt;/p&gt;
&lt;p&gt;And as much as one would try to rationalize this as a natural result of capitalism, it isn't. This goes totally against the principle of &lt;a href="https://en.wikipedia.org/wiki/Laissez-faire"&gt;&lt;strong&gt;&lt;em&gt;Laissez-faire&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; (French for &lt;em&gt;let-go&lt;/em&gt; or &lt;em&gt;free trade&lt;/em&gt;) which forms the very basis of capitalism. So, even from the perspective of capitalism, banning a market agent without a due process in this way and putting them out of business goes totally against the spirit of free trade and capitalism. In fact, this is more resembling of and a digital equivalent of the Gladiator-era fascism where a Roman dictator can ban or exile any plebeian of the state at their whims.&lt;/p&gt;
&lt;p&gt;[caption id="" align="alignnone" width="800"]&lt;img alt="Roman Dictator" class="size-full" height="429" src="https://cdn-images-1.medium.com/max/800/0*lfFsZKCyj5HSvBY5" width="800"&gt; Roman Dictator (Image Source: Medium.com)[/caption]&lt;/p&gt;
&lt;p&gt;And how did the Romans solved their dictator problem? That's right, they brought in democracy and civic structure, they decentralized their political system so that its divided into multiple ministries and provincial bodies now, so that &lt;em&gt;one dictator&lt;/em&gt; shouldn't be able to affect everything at his whims.&lt;/p&gt;
&lt;p&gt;The same thing needs to happen in the digital world today, I'd like to see a world where there are tons of alternatives to AirBnB, Amazon, Ebay, Microsoft, Uber, etc., a world where consumers don't give all the power to a few entities, and thus screw themselves in the process. The consumers should have many alternatives, so that if one service bans them, there are a ton of others, and in order for this to happen, the open source programmers also have a large role to play.&lt;/p&gt;
&lt;p&gt;Even a consumer should not source everything from one service by succumbing to convenience, but cultivate a habit of giving new players a chance. Why use only Amazon for shopping, also try Ebay, Flipkart, Snapdeal, AliExpress, etc. once in a while. Why use only Uber for cabbing, also try Ola, Lyft, Hailo, Meru, etc. once in a while. Remember plebeians, you are yourself responsible for the digital world you create, and each one of us is partly responsible in some way or other for Jackson's situation.&lt;/p&gt;</content><category term="Internet"></category></entry><entry><title>Backbone.Events+Promises+async/await is a great combination for building JavaScript apps</title><link href="blog/2018/07/backbone-events-promises-async_await-combination.html" rel="alternate"></link><published>2018-07-12T11:59:00+05:30</published><updated>2018-07-12T11:59:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-12:blog/2018/07/backbone-events-promises-async_await-combination.html</id><summary type="html">&lt;p&gt;At the risk of being a contrarian, I'd like to show in this article how exactly can the Backbone's Events model be combined with the more modern constructs of Promises and async/await to build a killer app using JavaScript.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;First, let's try to understand why do we need these …&lt;/p&gt;</summary><content type="html">&lt;p&gt;At the risk of being a contrarian, I'd like to show in this article how exactly can the Backbone's Events model be combined with the more modern constructs of Promises and async/await to build a killer app using JavaScript.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;First, let's try to understand why do we need these constructs for asynchronous programming when JavaScript itself is a mostly asynchronous language featuring events and function callbacks. The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise API&lt;/a&gt; was introduced in ES6 standard as a way of preventing callback hell:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;anotherFunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;yetAnotherFunction() {&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;reallyCoreFunction() {&lt;/span&gt;
      &lt;span class="c1"&gt;//readability sucks now!&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is only three layers of callbacks, imagine what will happen when there are a hundred of them which is quite possible in a medium sized web app with multiple ajax calls and a dynamic interface. To solve this problem, functions started returning a "Promise" object instead of a callback function, so instead of multiple layers of callbacks, we can now use "function chaining" using the &lt;strong&gt;then&lt;/strong&gt; keyword like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;someFunction()
.then(function(){
  yetAnotherFunction();
})
.then(function(){
  reallyCoreFunction();
})
//readability is better now!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As you can see, the Promise API has improved the readability to a considerable extent. Instead of a callback mechanism, the callee returns an object called &lt;strong&gt;Promise&lt;/strong&gt; which can be chained for further execution. For this to happen, the callee has to call resolve() in order for the caller to end the wait and trigger further execution in the next chain:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_921" align="alignnone" width="755"]&lt;img alt="Promise Model" class="size-full wp-image-921" height="222" src="/uploads/2018/07/promise_model.png" width="755"&gt; Promise Model[/caption]&lt;/p&gt;
&lt;p&gt;But the async/await construct goes even further than this. You don't even need to do function chaining using &lt;strong&gt;then&lt;/strong&gt;, but the &lt;strong&gt;await&lt;/strong&gt; keyword itself is enough to do this. Internally, the async/await model uses the Promise API to achieve its end because even in this model, the callee has to make the resolve() call in order to return execution control to the caller and the process continues after the next await statement:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_922" align="alignnone" width="755"]&lt;img alt="async await Model" class="size-full wp-image-922" height="222" src="/uploads/2018/07/async_await_model.png" width="755"&gt; async await Model[/caption]&lt;/p&gt;
&lt;p&gt;However, one disadvantage of async/await is that the caller can only wait, it cannot receive a returned value which is possible in the Promise model. Another disadvantage is that the caller function itself who invoked the await statement needs to be declared as async which means it cannot be a part of a sequential statements in another process, but has to work independently as shown &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function#Examples"&gt;in this example&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{.brush: .js .line-numbers .language-js}
var sequentialStart = async function() {
  console.log('==SEQUENTIAL START==');
  const slow = await resolveAfter2Seconds(); // If the value of the expression following the await operator is not a Promise, it's converted to a resolved Promise.
  const fast = await resolveAfter1Second();
  console.log(slow);
  console.log(fast);
}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finally, the most important thing here is to realize that both Promises and async/await are just one level of asynchrony, let's call this detail asynchrony or &lt;strong&gt;micro asynchrony&lt;/strong&gt;, but there is also the other kind that works at the broader level which can be termed &lt;strong&gt;macro asynchrony&lt;/strong&gt;, and this is where Backbone.Events comes into the picture.&lt;/p&gt;
&lt;p&gt;Consider that you have a complex web application with several views and each component should be able to trigger a message or event to any other component asynchronously in order for the app to render and function properly. Consider an app with a &lt;strong&gt;loginView&lt;/strong&gt; that needs to trigger an alert that a user has just signed in. Now, keeping the separation of concerns, the best practice here would be that the loginView shouldn't try to render that part of the DOM and leave it to the other component: &lt;strong&gt;navbarView&lt;/strong&gt;. Now, how can our loginView be able to "tell" the navbarView asynchronously over the wire to display that alert? Both Promises and async/await are of no use here, and hence we need a macro-level all-purpose &lt;strong&gt;Event Bus&lt;/strong&gt;, similar to the one that Backbone.js provides us:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_920" align="alignnone" width="757"]&lt;img alt="backbone.events Model" class="size-full wp-image-920" height="278" src="/uploads/2018/07/backbone.events_model.png" width="757"&gt; backbone.events Model[/caption]&lt;/p&gt;
&lt;p&gt;In this case, our caller and callee are inside separate components and don't even know each other. And separation of concerns imply that they cannot even contact each other directly. Now, Backbone provides this useful trigger/listen mechanism called &lt;strong&gt;Backbone.Events&lt;/strong&gt; using which any object in your app can listen to the events triggered on any other object! In this case, the loginView triggers an event called "navbarView.alert" and thus "tells" the navbarView that it has to do something (in this case show an alert). This mechanism also supports passing of any kind of data along with the triggering of event (in this case the &lt;em&gt;message&lt;/em&gt; parameter).&lt;/p&gt;
&lt;p&gt;Thus, we can see that combining the power of all these asynchronous models, we can easily handle any level of complexity in our app, provided that our &lt;a href="https://prahladyeri.com/blog/2018/07/the-right-way-to-architect-single-page-web-applications.html"&gt;app itself is structured in the right way from the start&lt;/a&gt;.&lt;/p&gt;</content><category term="Backbone"></category><category term="JavaScript"></category></entry><entry><title>Alternative "Reddit like" Social Networking Sites for the Minimalists</title><link href="blog/2018/07/alternative-reddit-like-social-networking-sites-for-the-minimalists.html" rel="alternate"></link><published>2018-07-10T15:01:00+05:30</published><updated>2018-07-10T15:01:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-10:blog/2018/07/alternative-reddit-like-social-networking-sites-for-the-minimalists.html</id><summary type="html">&lt;p&gt;Minimalists are those netizens who prefer websites that mostly contain rich and relevant textual content (with maybe bits of images sprinkled here and here), but certainly not auto-playing videos, flashy animations, animated gifs and motion ads. Making an excruciatingly heavy and painful website by combining all these things not only …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Minimalists are those netizens who prefer websites that mostly contain rich and relevant textual content (with maybe bits of images sprinkled here and here), but certainly not auto-playing videos, flashy animations, animated gifs and motion ads. Making an excruciatingly heavy and painful website by combining all these things not only take a toll on the server's back end resources, but is also a step back in the advancement of the Internet, not forward, at least in my humble opinion.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alternative &amp;quot;Reddit Like&amp;quot; Social Networking Sites" class="alignnone wp-image-901 size-medium" height="199" src="/uploads/2018/07/imac-apple-mockup-app-38544-300x199.jpeg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;Its quite evident that we are the minority because all popularity metrics point towards non-minimalist social sites like Facebook, Twitter, Google Plus, etc. And to add to that agony, &lt;a href="https://www.reddit.com"&gt;Reddit&lt;/a&gt; has also decided to follow along the path of those other sites as we are being shunned to the &lt;a href="https://old.reddit.com"&gt;old Reddit&lt;/a&gt;. Old Reddit is not just being shunned as legacy, but also in the process of being dismantled. That's because any new visitor who visits a subreddit will always be shown the new interface by default (even if the subreddit owners/mods happened to have created it on old Reddit).&lt;/p&gt;
&lt;p&gt;Besides, the user is also being gently prodded on to embrace the new version by various measures. For example, the default profile page of the user is the new profile page (even when visiting old.reddit.com, yeah!) and the only way to switch back to the older version is a small hidden switch in the preferences section that you wouldn't know exists unless you go there and scroll to the absolute bottom of the page!&lt;/p&gt;
&lt;p&gt;[caption id="attachment_892" align="alignnone" width="1051"]&lt;img alt="Reddit Hidden Legacy Switch" class="size-full wp-image-892" height="463" src="/uploads/2018/07/reddit_hidden_legacy_switch.png" width="1051"&gt; Reddit Hidden Legacy Switch[/caption]&lt;/p&gt;
&lt;p&gt;On a similar tone, when you logout from Reddit in order to log back in (using a different alt which is quite common on Reddit), you'll suddenly find that you are back in the new version and the header link and everything else points to the www.reddit.com, and not old.reddit.com! You'll be surprised to find that even if you switched your profile back to the legacy mode, other Redditors who visit your profile will still see the new version there.&lt;/p&gt;
&lt;p&gt;In other words, Reddit is trying to send us a clear message: Fall in line with our new system or just get lost. And get lost we will, but the question is where? Certainly not Facebook, Twitter or Google Plus because that's not what a minimalist will want to use, even though they may have an account on one of these other sites just for being compatible with their non-minimalist friends, relatives, etc.&lt;/p&gt;
&lt;p&gt;In this article, I'm going to describe a few such social networking sites which are relatively minimalist, though all of them may not have the same charm as the good old Reddit.&lt;/p&gt;
&lt;p&gt;Firstly, lots of minimalist sites are either getting closed or turning into micro-niches that nobody except a certain section want to use. For instance, &lt;a href="https://en.wikipedia.org/wiki/Newsvine"&gt;News Vine&lt;/a&gt; shut down recently, it was a collaborative journalistic platform where users contributed all kinds of stories.&lt;/p&gt;
&lt;p&gt;I also used to like &lt;a href="https://voat.co/"&gt;Voat&lt;/a&gt; very much, but recently there have been &lt;a href="https://old.reddit.com/r/SubredditDrama/comments/3gerlv/is_voat_becoming_reddit_for_racists_or_is_that/"&gt;reports that Voat is turning into a meeting place for right wing supremacists and those who like to troll online users based on their caste/ehtnicity.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;On a similar note, &lt;a href="https://en.wikipedia.org/wiki/StumbleUpon"&gt;StumbleUpon&lt;/a&gt; was also recently shut down and transformed into something called Mix, I don't quite like the looks of the new design.&lt;/p&gt;
&lt;p&gt;However, there still seems to be some hope left as some minimalist sites do exist to fill this void:&lt;/p&gt;
&lt;h2&gt;I. &lt;a href="https://news.ycombinator.com/news"&gt;Hacker News&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;[caption id="" align="alignnone" width="596"]&lt;img alt="Hacker News" class="size-full" height="386" src="https://i1.wp.com/beebom.com/uploads/2015/08/Y-Combinator1.jpeg?w=596&amp;amp;ssl=1" width="596"&gt; Hacker News (Image Source: &lt;a href="https://beebom.com/reddit-alternatives/"&gt;https://beebom.com/reddit-alternatives/&lt;/a&gt;)[/caption]&lt;/p&gt;
&lt;p&gt;Though Hacker News is a niche site for the technology nice, it sill tops my list because it is almost as minimal as you could get. Its a purely textual content site with neither images nor CSS transitions and perhaps that's how most of the technologists like it. The content quality on this site is also highly vetted and top notch, and definitely better than many popular subreddits where politics comes into the mix every now and then as the mods try to sneak in their own propagandas in the subreddit content.&lt;/p&gt;
&lt;h2&gt;II. &lt;a href="https://slashdot.org/"&gt;Slashdot&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;[caption id="" align="alignnone" width="640"]&lt;img alt="Slashdot" class="size-full" height="346" src="https://i2.wp.com/beebom.com/uploads/2015/08/Slashdot-1024x553.jpeg?resize=640%2C346" width="640"&gt; Slashdot (Image Source: &lt;a href="https://beebom.com/reddit-alternatives/"&gt;https://beebom.com/reddit-alternatives/&lt;/a&gt;)[/caption]&lt;/p&gt;
&lt;p&gt;There are two reasons to include &lt;a href="https://en.wikipedia.org/wiki/Slashdot"&gt;Slashdot&lt;/a&gt;in the list. Firstly, its a minimalist site, and secondly, it is owned by BizX LLC, the same company who acquired SourceForge after the huge fiasco in Jan, 2016. If most media reports are to be believed, the new owners are doing a great job of rebuilding SourceForge from its old tarnished image. The site design is also much better than the heavy ones like Google Plus, Facebook and Quora, Slashdot is also very light on loading server resources (HTML/CSS/JS) which I like a lot. Sites like Slashdot who strive to improve the user experience and UI efficiency like this deserve all the users in the world, yet its a funny world where these other heavy sites get all the attention! So, whom I should blame if not the users who visits these sites?&lt;/p&gt;
&lt;h2&gt;III. &lt;a href="https://hubski.com/"&gt;Hubski&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;[caption id="" align="alignnone" width="552"]&lt;img alt="Hubski" class="size-full" height="309" src="https://d2.alternativeto.net/dist/s/1b468ae2-3c92-e111-8e48-0025902c7e73_1_full.png?format=jpg&amp;amp;width=1600&amp;amp;height=1600&amp;amp;mode=min&amp;amp;upscale=false" width="552"&gt; Hubski (Image Source: &lt;a href="https://alternativeto.net/software/hubski/"&gt;https://alternativeto.net/software/hubski/&lt;/a&gt;)[/caption]&lt;/p&gt;
&lt;p&gt;Hubski was something that was &lt;a href="https://en.wikipedia.org/wiki/Hubski"&gt;designed from the ground up to be a Reddit Alternative&lt;/a&gt;, so it won't disappoint you if you are looking for an alternative to Reddit. Hubski was started by Mark Katakowski as a clone of Hacker News, and the code is still in a Lisp dialect.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IV &lt;a href="https://boards.4chan.org"&gt;4chan&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[caption id="" align="alignnone" width="334"]&lt;img alt="4chan" class="size-full" height="298" src="https://upload.wikimedia.org/wikipedia/en/c/c8/4chan_main_page_2_january_2018.png" width="334"&gt; 4chan[/caption]&lt;/p&gt;
&lt;p&gt;4chan is also a minimalist site like Reddit, but geared more towards Internet activism groups like Anonymous. A redditor should feel comfortable with their discussion thread UI which reminds you a bit of the old PHP bulletin boards.&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://snapzu.com"&gt;V. Snapzu&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;[caption id="attachment_909" align="alignnone" width="584"]&lt;img alt="Snapzu" class="wp-image-909 size-large" height="276" src="/uploads/2018/07/snapzu.com_-1024x484.png" width="584"&gt; Snapzu[/caption]&lt;/p&gt;
&lt;p&gt;Snapzu is just like Reddit, only it has a more polished interface and they call their category pages "tribes" instead of subreddits, for instance &lt;a href="https://snapzu.com/t/technology"&gt;/t/technology&lt;/a&gt; is the technology tribe. However, you need to request an invite before joining, but apparently they dish them out pretty quickly!&lt;/p&gt;
&lt;h2&gt;&lt;a href="https://mastodon.social/"&gt;VI. Mastodon&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;[caption id="attachment_913" align="alignnone" width="584"]&lt;img alt="Mastodon" class="wp-image-913 size-large" height="271" src="/uploads/2018/07/mastodon-1024x475.png" width="584"&gt; Mastodon[/caption]&lt;/p&gt;
&lt;p&gt;Mastodon is yet another great site, not as minimal as reddit or slashdot, but much better than facebook and twitter. And the best thing is that its federated, so mastodon.social isn't the only instance, there are a &lt;a href="https://joinmastodon.org/"&gt;bunch of others&lt;/a&gt; too and they are all synced and federated in real time, whatever instance you be on!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.quora.com"&gt;&lt;strong&gt;VII. Quora&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[caption id="" align="alignnone" width="343"]&lt;img alt="Quora" class="size-full" height="289" src="https://upload.wikimedia.org/wikipedia/en/2/2f/Quora_screenshot.jpg" width="343"&gt; Quora (Image Source: Wikipedia)[/caption]&lt;/p&gt;
&lt;p&gt;Well, Quora isn't exactly minimal and I wasn't even going to include it in this list, but since we have so few (working) options left, Quora needs a place here at least temporarily. At least, its way too minimal than the likes of Facebook and Twitter!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://medium.com"&gt;&lt;strong&gt;VIII. Medium&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[caption id="" align="alignnone" width="302"]&lt;img alt="Medium" class="size-full" height="329" src="https://upload.wikimedia.org/wikipedia/en/f/f5/Medium_screenshot.png" width="302"&gt; Medium (Image Source: Wikipedia)[/caption]&lt;/p&gt;
&lt;p&gt;After I included Quora, I thought why not Medium. To be honest, sites like Quora and Medium fall on the grey end of a minimalist sites list and we are stuck with them only because of lack of options. Nevertheless, the content quality on Medium is quite good.&lt;/p&gt;
&lt;h2&gt;Update on 16th July, 2018&lt;/h2&gt;
&lt;p&gt;Today, I came across one more strong contestant in the race for Reddit alternatives, its called &lt;a href="https://raddle.me/"&gt;Raddle.me&lt;/a&gt;. It was built during September last year by some &lt;a href="https://motherboard.vice.com/en_us/article/zm3wbj/radical-leftists-built-their-own-reddit-after-it-banned-them"&gt;"radical leftists" who felt that Reddit had wrongly banned them&lt;/a&gt;. Raddle.me does have a leftist bias, just as Voat has a rightist bias, but the interface and looks are pretty much what a minimalist Redditor will appreciate. Also, the site is built using PHP (Symfony and Doctrine), unlike Reddit which is built using Python (Pylons framework).&lt;/p&gt;
&lt;p&gt;[caption id="attachment_948" align="alignnone" width="1366"]&lt;img alt="Raddle.me" class="size-full wp-image-948" height="641" src="/uploads/2018/07/raddleme.png" width="1366"&gt; Raddle.me[/caption]&lt;/p&gt;</content><category term="Reddit"></category><category term="Social Networking"></category></entry><entry><title>WordPress DIY: Adding Syntax Highlighting to your WordPress Blog Without using an External Plugin</title><link href="blog/2018/07/wordpress-diy-adding-syntax-highlighting-to-your-wordpress-blog-without-using-an-external-plugin.html" rel="alternate"></link><published>2018-07-10T12:47:00+05:30</published><updated>2018-07-10T12:47:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-10:blog/2018/07/wordpress-diy-adding-syntax-highlighting-to-your-wordpress-blog-without-using-an-external-plugin.html</id><summary type="html">&lt;p&gt;Just as my other articles in &lt;a href="https://prahladyeri.com/blog/tag/wordpress+diy"&gt;WordPress DIY&lt;/a&gt; series, this one also focuses on doing everything yourself by writing the code rather than using any external dependencies. There are two popular open source implementations of Syntax Highlighting JavaScript libraries: &lt;a href="https://github.com/google/code-prettify"&gt;Google's Prettify&lt;/a&gt; and &lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/"&gt;Alex Gorbatchev's Syntax Highlighter&lt;/a&gt;, and in this article …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just as my other articles in &lt;a href="https://prahladyeri.com/blog/tag/wordpress+diy"&gt;WordPress DIY&lt;/a&gt; series, this one also focuses on doing everything yourself by writing the code rather than using any external dependencies. There are two popular open source implementations of Syntax Highlighting JavaScript libraries: &lt;a href="https://github.com/google/code-prettify"&gt;Google's Prettify&lt;/a&gt; and &lt;a href="http://alexgorbatchev.com/SyntaxHighlighter/"&gt;Alex Gorbatchev's Syntax Highlighter&lt;/a&gt;, and in this article, we will use the former.&lt;!--more--&gt; Writing your own plugin for syntax highlighting is very straightforward if you know what you are doing. Just create a file named &lt;strong&gt;/wp-content/plugins/wp-prettify.php&lt;/strong&gt; in your WordPress installation and add the below code to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;
&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @package WP Prettify&lt;/span&gt;
&lt;span class="cm"&gt; * @version 0.1.0&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;Plugin Name: WP Prettify&lt;/span&gt;
&lt;span class="cm"&gt;Plugin URI: http://github.com/prahladyeri/wp-prettify&lt;/span&gt;
&lt;span class="cm"&gt;Description: Wordpress implementation of Google Prettify Syntax Highlighter&lt;/span&gt;
&lt;span class="cm"&gt;Author: Prahlad Yeri&lt;/span&gt;
&lt;span class="cm"&gt;Author URI: https://www.prahladyeri.com/&lt;/span&gt;
&lt;span class="cm"&gt;Version: 0.1.0&lt;/span&gt;
&lt;span class="cm"&gt;License: GPL version 2 or later - http://www.gnu.org/licenses/old-licenses/gpl-2.0.html&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;


&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add_syntax_highlighter() {&lt;/span&gt;
&lt;span class="nx"&gt;$text&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;EOD&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DOMContentLoaded&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pre&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;prettyprint&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;   &lt;span class="nx"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; prettyprint &amp;quot;&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;adding&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;class already exists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prettyprint&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prettyprinted&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;border&lt;/span&gt;: &lt;span class="kt"&gt;0px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;padding&lt;/span&gt;: &lt;span class="kt"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;: &lt;span class="kt"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/style&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;EOD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;$text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;add_syntax_highlighter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remember to enable the plugin by navigating to &lt;strong&gt;/wp-admin&lt;/strong&gt; before using it.&lt;/p&gt;
&lt;p&gt;This function first adds a &lt;strong&gt;prettyprint&lt;/strong&gt; class to all your \&amp;lt;pre&gt; tags to tell the Prettify library to highlight this block and thus making syntax highlighting painless on your part. The advantage of using Google's solution is that it automatically detects the programming or scripting language inside the block, and you don't have to use additional tag markup like &lt;strong&gt;"lang=php"&lt;/strong&gt; or something like that.&lt;/p&gt;
&lt;p&gt;The addition of CSS &lt;strong&gt;\&amp;lt;style&gt;&lt;/strong&gt; tag in the function is optional and not really needed. Its just my preference to hide the border and increase the padding and font size a bit.&lt;/p&gt;
&lt;p&gt;The demonstration of this self-written plugin is quite evident as this very site runs on this plugin and the above code block is highlighted using the Google's Prettify library. If you can use the Chrome or Firefox Developer tools to analyze that \&amp;lt;pre&gt; block, it will show you that a &lt;strong&gt;prettyprint&lt;/strong&gt; class has been added!&lt;/p&gt;
&lt;p&gt;So, go ahead and write this plugin if you are building a WordPress blog for yourself and want to do this in a DIY way. And let us know how it goes in comments below!&lt;/p&gt;</content><category term="DIY"></category><category term="PHP"></category><category term="Wordpress"></category></entry><entry><title>How to create a Server-less Google Drive client using only HTML and JavaScript</title><link href="blog/2018/07/how-to-create-a-server-less-google-drive-client-using-only-htmljavascript.html" rel="alternate"></link><published>2018-07-09T12:23:00+05:30</published><updated>2018-07-09T12:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-09:blog/2018/07/how-to-create-a-server-less-google-drive-client-using-only-htmljavascript.html</id><summary type="html">&lt;p&gt;A few days ago, I had to work on a project of this kind and the information and documentation available on this topic was quite bewildering. As a result, I decided to write this article in order to make everything available at one place.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Almost everyone knows about the &lt;a href="https://github.com/google/google-api-python-client"&gt;Google …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few days ago, I had to work on a project of this kind and the information and documentation available on this topic was quite bewildering. As a result, I decided to write this article in order to make everything available at one place.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Almost everyone knows about the &lt;a href="https://github.com/google/google-api-python-client"&gt;Google API Python Client&lt;/a&gt;(and similar others in Java, PHP, etc.) which can be accessed from the server, but few are aware that Google even supports a totally server-less implementation of a client using only client-side technology (HTML/JavaScript). The only caveat here is that your app won't get a permanent access token like the server side apps do, but instead, has a temporary access until your web page isn't closed. Here is how to go about doing it:&lt;/p&gt;
&lt;h2&gt;Step-1: Register your App by visiting the Google Cloud Console:&lt;/h2&gt;
&lt;p&gt;As usual, visit the &lt;a href="https://console.cloud.google.com/"&gt;Google Cloud Console&lt;/a&gt;and register your app first, enable the Google Drive API by visiting "APIs &amp;amp; Services"=&gt;"Dashboard", then click on "Credentials" to create an API Key, an OAuth credential and setup the authentication screen for your user. While setting credentials, remember to add your app's URL in authorized Redirect-URIs section. If you have multiple URLs for your app (like localhost for testing, www.YourSite.com for production, etc., then add them all to the list):&lt;/p&gt;
&lt;p&gt;[caption id="attachment_875" align="alignnone" width="690"]&lt;img alt="Credentials Configuration Redirect URIs" class="size-full wp-image-875" height="397" src="/uploads/2018/07/credentials_config_redirect_uri.png" width="690"&gt; Credentials Configuration: Redirect URIs[/caption]&lt;/p&gt;
&lt;h2&gt;Step-2: Setup the OAuth consent screen.&lt;/h2&gt;
&lt;p&gt;This is what your user will see when they visit your app and it redirects them to Google for getting permissions for Drive access. Click on the "OAuth consent screen" tab and configure it with your app's name, logo, etc.&lt;/p&gt;
&lt;h2&gt;Step-3: Add script references.&lt;/h2&gt;
&lt;p&gt;After you create the credentials and get your ClientID, API Key and secret key (not useful for our app, really), the next step is to start building the app. I usually prefer to keep the JavaScript logic in a separate file such as app.js instead of keeping it in the main index.html. Just add a script tag in your main index.html and add a reference to this app.js in which you'll write the Google Drive logic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/static/app.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I've kept the app.js in a sub-folder named /static, if yours is different, then adjust the path accordingly. You'll also need to add a reference to Google authentication library in order to perform the OAuth authentication:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="err"&gt;async&lt;/span&gt; &lt;span class="err"&gt;defer&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://apis.google.com/js/api.js&amp;quot;&lt;/span&gt; 
 &lt;span class="na"&gt;onload=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;this.onload=function(){};handleClientLoad()&amp;quot;&lt;/span&gt; 
 &lt;span class="na"&gt;onreadystatechange=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;if (this.readyState === &amp;#39;complete&amp;#39;) this.onload()&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, also add a reference to jQuery if you want to use it. In most apps, its usually a must!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;script&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Step-4: Build the app.&lt;/h2&gt;
&lt;p&gt;Now, in your app.js, first add global variables that you'll need throughout your app:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;var&lt;/span&gt; &lt;span class="nt"&gt;GoogleAuth&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;var&lt;/span&gt; &lt;span class="nt"&gt;SCOPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.googleapis.com/auth/drive&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;readonly&lt;/span&gt;
&lt;span class="nt"&gt;SCOPE&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; https://www.googleapis.com/auth/drive.install&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;SCOPE&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; https://www.googleapis.com/auth/drive.file&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;var&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="cp"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nt"&gt;array&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;store&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;list&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;files&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;user&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nt"&gt;s&lt;/span&gt; &lt;span class="nt"&gt;drive&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add the scopes as per your requirements, I had included &lt;strong&gt;auth/drive.install&lt;/strong&gt; and &lt;strong&gt;auth/drive.file&lt;/strong&gt; only because I had to provide an "open with this app" feature in the user's own google drive interface so that they may visit our app and run their files through it, and thus use it as a "file opener". If you don't need to provide such extended features and just want full access to the user's files, then the first one (&lt;strong&gt;auth/drive&lt;/strong&gt;) is sufficient.&lt;/p&gt;
&lt;p&gt;After that, write the entry point for our app in app.js. As per the script attribute, you'll be redirected here by the Google authentication library:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;* This is the entry-point that gapi calls.&lt;/span&gt;
&lt;span class="cm"&gt;* &lt;/span&gt;
&lt;span class="cm"&gt;* */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleClientLoad() {&lt;/span&gt;
 &lt;span class="c1"&gt;// Load the API&amp;#39;s client and auth2 modules.&lt;/span&gt;
 &lt;span class="c1"&gt;// Call the initClient function after the modules load.&lt;/span&gt;
 &lt;span class="nx"&gt;gapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;client:auth2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initClient&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;gapi.load()&lt;/strong&gt; loads the auth library and prepares your app for authentication, then signals the control to &lt;strong&gt;initClient()&lt;/strong&gt; function where you'll perform the actual authentication like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; &lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * starts the client authorization, most useful for debugging.&lt;/span&gt;
&lt;span class="cm"&gt; * &lt;/span&gt;
&lt;span class="cm"&gt; * */&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;initClient() {&lt;/span&gt;
    &lt;span class="c1"&gt;// Retrieve the discovery document for version 3 of Google Drive API.&lt;/span&gt;
    &lt;span class="c1"&gt;// In practice, your app can retrieve one or more discovery documents.&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;discoveryUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://www.googleapis.com/discovery/v1/apis/drive/v3/rest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// Initialize the gapi.client object, which app uses to make API requests.&lt;/span&gt;
    &lt;span class="c1"&gt;// Get API key and client ID from API Console.&lt;/span&gt;
    &lt;span class="c1"&gt;// &amp;#39;scope&amp;#39; field specifies space-delimited list of access scopes.&lt;/span&gt;
    &lt;span class="nx"&gt;gapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;apiKey&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;discoveryDocs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;discoveryUrl&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="nx"&gt;clientId&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;yyyyyyyyyy-yyyyyyyyyyyyyy.apps.googleusercontent.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;scope&lt;/span&gt;: &lt;span class="kt"&gt;SCOPE&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;init happened successfully.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;GoogleAuth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;auth2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAuthInstance&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;now binding updateSigninStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;GoogleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isSignedIn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;updateSigninStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Listen for sign-in state changes.&lt;/span&gt;

      &lt;span class="c1"&gt;// Listen for sign-in state changes.&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;now calling updateSigninStatus&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;updateSigninStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;GoogleAuth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isSignedIn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

      &lt;span class="c1"&gt;// Handle initial sign-in state. (Determine if user is already signed in.)&lt;/span&gt;
      &lt;span class="c1"&gt;//var user = GoogleAuth.currentUser.get();&lt;/span&gt;

      &lt;span class="c1"&gt;// Call handleAuthClick function when user clicks on&lt;/span&gt;
      &lt;span class="c1"&gt;//      &amp;quot;Sign In/Authorize&amp;quot; button.&lt;/span&gt;
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#sign-in-or-out-button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;handleAuthClick&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt; 
      &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#revoke-access-button&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;revokeAccess&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ERROR in gapi.init:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Remember to replace the long string of "xxxxxx..." with your own API Key, and the long string of "yyyyyy...." with your own Client ID)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gapi.client.init()&lt;/strong&gt; is an important function which does all the hard work of checking whether a user is authenticated, and if not, then redirect them to Google's servers, perform the authentication, and if successful, redirect them back to your server and inside the &lt;strong&gt;.then()&lt;/strong&gt; block in which you'll handle your applications logic (like displaying the logged-in user's name which you get using &lt;strong&gt;GoogleAuth.currentUser.get()&lt;/strong&gt;, update the logged-in status (toggle sign-in and sign-out buttons accordingly), etc:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gapi.client&lt;/strong&gt; is your global variable that could be used for doing all kinds of stuff. For example, this is how you can list the files available in the Google Drive's root folder of the user as links in your document:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;   &lt;span class="nt"&gt;gapi&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;drive&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;fileId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name,webContentLink&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;then&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;success&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;var&lt;/span&gt; &lt;span class="err"&gt;webContentLink&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;success.result.webContentLink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;var&lt;/span&gt; &lt;span class="err"&gt;fileName&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;success.result.name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;console.log(&amp;quot;SUCCESS!&lt;/span&gt; &lt;span class="err"&gt;name&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, webContentLink);&lt;/span&gt;
&lt;span class="s2"&gt;        console.log(&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;SUCCESS&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="n"&gt;webContentLink&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, webContentLink);&lt;/span&gt;
&lt;span class="s2"&gt;        $source = $(&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot; + webContentLink + &amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; + fileName + &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="err"&gt;$(&amp;#39;body&amp;#39;).append($source)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;function&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;fail&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;console.log(fail)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="err"&gt;console.log(&amp;#39;Error&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;+&lt;/span&gt; &lt;span class="err"&gt;fail.result.error.message)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;name&lt;/strong&gt; field represents the file name and &lt;strong&gt;webContentLink&lt;/strong&gt; is the actual link to the file in the user's drive, you can use it however in your app once you get it (like download it using the AJAX &lt;strong&gt;jquery.get()&lt;/strong&gt; method, etc.).&lt;/p&gt;</content><category term="HTML"></category><category term="JavaScript"></category></entry><entry><title>WordPress DIY: Adding Twitter Cards Meta to your blog Without using an External Plugin</title><link href="blog/2018/07/wordpress-diy-adding-twitter-cards-meta-to-your-blog.html" rel="alternate"></link><published>2018-07-08T11:46:00+05:30</published><updated>2018-07-08T11:46:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-08:blog/2018/07/wordpress-diy-adding-twitter-cards-meta-to-your-blog.html</id><summary type="html">&lt;p&gt;Just like my &lt;a href="https://prahladyeri.com/blog/2018/07/wordpress-diy-adding-google-analytics-script-to-your-blog.html"&gt;last article&lt;/a&gt;, we won't be focusing on using a third party plugin, but write our own plugin. I'm a minimalist and don't prefer to use layer-2 solutions for really trivial things that can easily be achieved by writing code.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Now, though trivial to implement, the twitter cards …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just like my &lt;a href="https://prahladyeri.com/blog/2018/07/wordpress-diy-adding-google-analytics-script-to-your-blog.html"&gt;last article&lt;/a&gt;, we won't be focusing on using a third party plugin, but write our own plugin. I'm a minimalist and don't prefer to use layer-2 solutions for really trivial things that can easily be achieved by writing code.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Now, though trivial to implement, the twitter cards support is a very important and useful thing for your blog. To understand why, consider the following example tweet from Python Software Foundation:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_857" align="alignnone" width="1366"]&lt;img alt="Links had no Twitter Card Meta" class="size-full wp-image-857" height="768" src="/uploads/2018/07/no_twitter_card.png" width="1366"&gt; Links had no Twitter Card Meta[/caption]&lt;/p&gt;
&lt;p&gt;As you can see, the posted links on this tweet from the domain djangoproject.com didn't expand into a preview because they didn't have twitter card meta tags in their pages. Unlike Facebook who expands all posted links, Twitter doesn't do that automatically, but only after parsing some meta tags which should be in their required format. Only after that, the tweets expand into a full preview like this:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_858" align="alignnone" width="1366"]&lt;img alt="Link had Twitter Meta" class="size-full wp-image-858" height="743" src="/uploads/2018/07/twitter_card.png" width="1366"&gt; Link had Twitter Card Meta[/caption]&lt;/p&gt;
&lt;p&gt;So as the owner of a WordPress blog, you'd be certainly interested in having the tweets containing links to your own site expand into these previews, right? So, let's go about doing it.&lt;/p&gt;
&lt;p&gt;Essentially, your web page should contain the following meta tags that twitter parses in order to come up with a preview:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;twitter:card&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;summary&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;twitter:site&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@prahladyeri&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;twitter:creator&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;@prahladyeri&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;twitter:url&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://prahladyeri.com/blog/2018/06/people-migrating-from-github-to-gitlab-should-learn-about-these-details-first.html&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;twitter:title&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;People migrating from Github to Gitlab should learn about these details first&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;twitter:description&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;After &amp;lt;a href=&amp;amp;quot;https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html&amp;amp;quot;&amp;gt;Microsoft&amp;amp;#039;s recent acquisition of Github&amp;lt;/a&amp;gt;, a mass exodus has kind of begun and many small and large projects are moving their code bases to the much hyped &amp;lt;a href=&amp;amp;quot;https://gitlab.com/&amp;amp;quot;&amp;gt;Gitlab&amp;lt;/a&amp;gt; in a hurry, and these include both open and closed source projects. However, before migrating to Gitlab, they should take a pause and learn something about Gitlab and consider evaluating other alternatives too.&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;twitter:image&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://secure.gravatar.com/avatar/3f253507b82dd33f352c08f649caaa54?rating=PG&amp;amp;size=75&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;All these meta tags have different meanings. For example, &lt;strong&gt;twitter:url&lt;/strong&gt; is for the canonical URL of your page, &lt;strong&gt;twitter:title&lt;/strong&gt; is for the title that should be displayed in the preview, etc.&lt;/p&gt;
&lt;p&gt;Now, let's add a simple PHP plugin file that automatically adds these tags in all the pages of our WordPress blog. Firstly, create a text file called &lt;strong&gt;"/wp-content/plugins/custom_headers.php"&lt;/strong&gt; in your WordPress installation folder (no need to create if you had done already by following the last article).&lt;/p&gt;
&lt;p&gt;After that, just add the below function and call it using &lt;strong&gt;add_action()&lt;/strong&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add_twitter_card_header() {&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;twitter&lt;/span&gt; &lt;span class="nx"&gt;cards&lt;/span&gt; &lt;span class="nx"&gt;hack&lt;/span&gt;
    &lt;span class="nx"&gt;global&lt;/span&gt; &lt;span class="nx"&gt;$post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;is_single&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;is_page&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;$twitter_url&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_permalink&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;$twitter_title&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_the_title&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_extended&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;post_content&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;$attch_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_post_thumbnail_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$post&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;ID&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;$twitter_thumbs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wp_get_attachment_image_src&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$attch_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;full&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;$twitter_thumb&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$twitter_thumbs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;$twitter_thumb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;$twitter_thumb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://secure.gravatar.com/avatar/3f253507b82dd33f352c08f649caaa54?rating=PG&amp;amp;size=75&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;?&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;twitter:card&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;summary&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;twitter:site&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;@prahladyeri&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;twitter:creator&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;@prahladyeri&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;twitter:url&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php echo $twitter_url; ?&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;twitter:title&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php echo $twitter_title; ?&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;twitter:description&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php echo esc_html($content[&amp;#39;main&amp;#39;]); ?&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;meta&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;twitter:image&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;lt;?php echo $twitter_thumb; ?&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;add_twitter_card_header&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This simple block of code will pick up all required things such as the post's title content excerpt, etc. and supply them to twitter via the meta tags. Few important things you need to remember:&lt;/p&gt;
&lt;p&gt;1. Firstly, update the \$twitter_thumb variable in the following block with your own gravatar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(!$&lt;/span&gt;&lt;span class="nt"&gt;twitter_thumb&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;$twitter_thumb&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gravatar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;avatar&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;f253507b82dd33f352c08f649caaa54&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="n"&gt;rating&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PG&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="k"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will show the gravatar by default if you haven't set a featured image in your post.&lt;/p&gt;
&lt;p&gt;2. You'll need to add the &lt;strong&gt;"Read More"&lt;/strong&gt; meta tag in all your posts, otherwise &lt;strong&gt;\$content['main']&lt;/strong&gt; will return the whole thing instead of just the excerpt.&lt;/p&gt;
&lt;p&gt;Once you do this and publish your post, head over to the &lt;a href="https://cards-dev.twitter.com/validator"&gt;Twitter Cards Validator Service&lt;/a&gt; and test your link. Its as easy as that!&lt;/p&gt;</content><category term="DIY"></category><category term="PHP"></category><category term="Wordpress"></category></entry><entry><title>Wordpress DIY: Adding Google Analytics Script to your Blog Without using an External Plugin</title><link href="blog/2018/07/wordpress-diy-adding-google-analytics-script-to-your-blog.html" rel="alternate"></link><published>2018-07-07T12:36:00+05:30</published><updated>2018-07-07T12:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-07:blog/2018/07/wordpress-diy-adding-google-analytics-script-to-your-blog.html</id><summary type="html">&lt;p&gt;Adding a custom script element to your Wordpress blog is really straightforward if you know what you are doing and there isn't any need to install a third-party plugin for this.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Now, for something like spam protection (Akismet) or adding contact forms (Contact Form Seven), its quite understandable, but if …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Adding a custom script element to your Wordpress blog is really straightforward if you know what you are doing and there isn't any need to install a third-party plugin for this.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Now, for something like spam protection (Akismet) or adding contact forms (Contact Form Seven), its quite understandable, but if you take the approach of adding third party plugins for every little plus and minus operation (such as adding a Google Analytics script), then its neither good for the maintenance nor security of your Wordpress blog.&lt;/p&gt;
&lt;p&gt;In this article, I'm going to explain how to create a simple custom plugin for your Wordpress blog that you'll hand-code yourself. The custom plugin will be quite generic and can be later used for adding other elements too such as maybe twitter card attributes, etc.&lt;/p&gt;
&lt;p&gt;Create the following PHP Plugin file in the code editor of your choice and save it as &lt;strong&gt;/wp-content/plugins/custom_headers.php&lt;/strong&gt; in your Wordpress installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;?&lt;/span&gt;&lt;span class="nx"&gt;php&lt;/span&gt; 
&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * @package Custom Headers&lt;/span&gt;
&lt;span class="cm"&gt; * @version 0.1.0&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt;Plugin Name: Custom Headers&lt;/span&gt;
&lt;span class="cm"&gt;Plugin URI: http://github.com/prahladyeri/custom-headers/&lt;/span&gt;
&lt;span class="cm"&gt;Description: Add a bunch of custom headers before the head tag.&lt;/span&gt;
&lt;span class="cm"&gt;Author: Prahlad Yeri&lt;/span&gt;
&lt;span class="cm"&gt;Version: 0.1.0&lt;/span&gt;
&lt;span class="cm"&gt;Author URI: https://www.prahladyeri.com/&lt;/span&gt;
&lt;span class="cm"&gt;*/&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add_analytics_header() {&lt;/span&gt;
&lt;span class="nx"&gt;$analytics&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;EOD&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;--&lt;/span&gt; &lt;span class="nx"&gt;Global&lt;/span&gt; &lt;span class="nx"&gt;site&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;Google&lt;/span&gt; &lt;span class="nx"&gt;Analytics&lt;/span&gt; &lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://www.googletagmanager.com/gtag/js?id=UA-XXXXXXX-X&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;&lt;span class="nx"&gt;dataLayer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;);}&lt;/span&gt;
  &lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="nx"&gt;gtag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;config&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;UA-XXXXXXX-X&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nx"&gt;EOD&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="nx"&gt;$analytics&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;wp_head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;add_analytics_header&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just remember to update the package meta stuff (Plugin Name, Author, etc.) as it suits you and put your own Analytics ID in place of UA-XXXXXXX-X.&lt;/p&gt;
&lt;p&gt;Its as simple as that, your plugin is ready! Just enable this plugin by going to Plugins-&gt;Installed Plugins in your Wordpress admin panel.&lt;/p&gt;</content><category term="DIY"></category><category term="PHP"></category><category term="Wordpress"></category></entry><entry><title>The Right Way to Architect Single Page Web Applications</title><link href="blog/2018/07/the-right-way-to-architect-single-page-web-applications.html" rel="alternate"></link><published>2018-07-06T15:54:00+05:30</published><updated>2018-07-06T15:54:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-06:blog/2018/07/the-right-way-to-architect-single-page-web-applications.html</id><summary type="html">&lt;p&gt;Lets face it, Web Apps are a complex and complicated beast, both on the front end and back end. The reason we had to come up with so many frameworks and libraries (angular/backbone/react/vue/marionette/require.js/etc.) is that the whole process is quite difficult and convoluted …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Lets face it, Web Apps are a complex and complicated beast, both on the front end and back end. The reason we had to come up with so many frameworks and libraries (angular/backbone/react/vue/marionette/require.js/etc.) is that the whole process is quite difficult and convoluted.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Once your app starts to scale in complexity, even the best of ideas and best practices in this field cannot prevent your app code from becoming a spaghetti of JavaScript and jQuery callbacks and DOM manipulation functions. Turning into a mess is essentially the nature of JavaScript when left to its own mechanism (event callback model and high asynchrony do ensure that). If you only use jQuery to architect your app, this is what it'll soon end up becoming:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_816" align="alignnone" width="956"]&lt;img alt="The Spaghetti Way" class="size-full wp-image-816" height="254" src="/uploads/2018/07/spaghetti-way.png" width="956"&gt; The Spaghetti Way[/caption]&lt;/p&gt;
&lt;p&gt;Once your app.js ends up with millions of these jQuery functions, it will soon become beyond understanding and sanity even for you as the author of the code. And that's exactly why we need to understand this complexity and architect some structure and foundation in our apps.&lt;/p&gt;
&lt;p&gt;One way of handling this complexity is the easy way - just delegate this whole thing to another complex beast of an opinionated framework such as angular or vue, and work with simple abstractions like angular views and controllers. This strategy does work to an extent (and you do get some mental sense of achievement too) but only as long as your app is limited in functionality and doesn't scale in size and complexity. The problem with opinionated frameworks is that they are opinionated - they work only as long as your app is pigeonholed and fits in their own way of typically doing things, but the moment you step outside and want to do something that doesn't confirm to that way (like rendering a complex DOM element or work with a difficult third-party UI library), then you are hit with a wall - unless you are prepared to venture too deeply into that framework and learn advanced stuff (like creating complex directives or providers in angular). But if you had to resort to that at the end, then why use an opinionated framework at all!&lt;/p&gt;
&lt;p&gt;[caption id="attachment_818" align="alignnone" width="1089"]&lt;img alt="The Opinionated Framework Way" class="size-full wp-image-818" height="400" src="/uploads/2018/07/opinionated-way.png" width="1089"&gt; The Opinionated Framework Way[/caption]&lt;/p&gt;
&lt;p&gt;As you can see in above diagram, using an opinionated framework is like driving a car with automatic gear system. You cannot control the speed or acceleration, nor can you synchronize the clutch action, its the black box of the automatic gear that does it for you. But unlike this simple gearbox analogy where speed and clutch synchrony are the only two variables, your web app has lots of variables, so the chances of going wrong and getting stuck with this approach drastically increases as your web app starts to scale in complexity. Manually doing things using the Backbone way may appear to be difficult or complex initially, but that's a much better way than trading off that complexity for an opinionated black-box framework about who's inner workings you don't understand anything at all.&lt;/p&gt;
&lt;p&gt;The first step towards building a single page app should be deciding what your app is going to do and how its going to do it. Every app is different in features, functionality and work flow, hence it pays to use an uber-light framework such as Backbone instead of any heavy and opinionated ones. Backbone in the frameworks world is pretty much like what jQuery is in the libraries world, it doesn't do much on its own besides giving you methods and objects for creating a layer of structure and organization (just as jQuery doesn't do much on its own besides adding a sugar-syntax wrapper for native DOM manipulation functions of JavaScript).&lt;/p&gt;
&lt;p&gt;Now, because of this exact flexibility and freedom, there is no one correct way to build Backbone apps. Backbone is heavy in philosophy and light in implementation, and the philosophy being simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Separation of concerns (models, views and other components should be kept separate).&lt;/li&gt;
&lt;li&gt;Separation of roles (Organizers and implementors should do their own thing, one shouldn't step into the shoes of others).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Personally, I think that if you follow only these two principles sincerely and stick to them, then you can handle whatever amount complexity life throws at your app. Of course, to architect such an app is an art in itself and you may not get it right the first time. The architecture itself may even need to evolve with time and complexity as your app grows and scales. One global event coordinator (or organizer) can be enough initially, but later on, you may have to add a DOM coordinator for handling DOM events, a data coordinator for handling connections to the database objects, etc. as you scale.&lt;/p&gt;
&lt;p&gt;Here is a basic example architecture that you can probably use for an app of low to medium complexity:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_831" align="alignnone" width="884"]&lt;img alt="The Backbone Way" class="size-full wp-image-831" height="536" src="/uploads/2018/07/backbone-way1.png" width="884"&gt; The Backbone Way[/caption]&lt;/p&gt;
&lt;p&gt;And &lt;a href="https://github.com/prahladyeri/experimental-backbone"&gt;this is an example implementation&lt;/a&gt; which I'm developing as a side project. Of course, the app doesn't do much presently besides user management and routing to dummy pages,&lt;/p&gt;
&lt;p&gt;Of course, this isn't the only Backbone way to build apps, but I think its a good one for a start. The primary problem you'll face if you stick to doing things your own way and not use an opinionated framework is that of organization. You need an organizer/coordinator object to co-ordinate with various components of your app and keep them in sync with each other and this is where the Backbone.Events API provided by the framework shines. The Backbone.View object also plays a great part in ensuring the separation of DOM manipulation code from rest of your app, and along with the underscore template library, it becomes a power combination for rendering DOM! With underscore templates, you can actually use javascript functions and variables inside a template, not just clumsy tags like ng-something!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{.default .prettyprint .prettyprinted}
&amp;lt;% if(modal['buttons']) { %&amp;gt;
  &amp;lt;div class="ui-button-container"&amp;gt;
    &amp;lt;% _(model['buttons']).each(function(button) { %&amp;gt;
      &amp;lt;a class="ui-button ui-button-pill &amp;lt;%= button.extra_class %&amp;gt; " href="&amp;lt;%= button.href %&amp;gt;"&amp;gt;
        &amp;lt;span class="label"&amp;gt;
          &amp;lt;span class="section"&amp;gt;&amp;lt;%= button.label %&amp;gt;&amp;lt;/span&amp;gt; 
        &amp;lt;/span&amp;gt;
      &amp;lt;/a&amp;gt;
    &amp;lt;% }) %&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;% } %&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Of course, its not a very good practice to mix javascript with templates, but it just shows the power and flexibility of using backbone+underscore compared to other vendor frameworks.&lt;/p&gt;
&lt;p&gt;Ultimately, it all comes down to your preference, you can use angular or vue or react if you really want to. However, always understand the reason why you are hooking to a third party framework. If it is just for escaping the complexity of your app, then no amount of framework or libraries in the world are going to help you. Passing on the complexity to a black box like angular or vue is just a band-aid solution that will fall apart the moment you scale in complexity and you'll get stuck by the limitations of the framework. At that point, you'll have to make one of these two decisions:&lt;/p&gt;
&lt;p&gt;1. Abandon the framework and do everything right from scratch using the manual way of Backbone.&lt;/p&gt;
&lt;p&gt;2. Understand the framework internals too deeply and customize it to achieve what you want (but then what was the point of using this framework in the first place?)&lt;/p&gt;
&lt;p&gt;Ultimately, its your decision to choose a framework. Consider it wisely after weighing in all the pros and cons. Best of luck!&lt;/p&gt;</content><category term="JavaScript"></category><category term="Web Development"></category></entry><entry><title>What problem is React/JSX solving in your App?</title><link href="blog/2018/07/what-problem-is-react-jsx-solving.html" rel="alternate"></link><published>2018-07-05T17:06:00+05:30</published><updated>2018-07-05T17:06:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-05:blog/2018/07/what-problem-is-react-jsx-solving.html</id><summary type="html">&lt;p&gt;Framework wars and debates are very much a thing these days, be it Angular vs Backbone or Angular vs React, but the real debate isn't about these frameworks. The real debate essentially comes down to which is the most efficient way of structuring your app and more importantly, rendering and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Framework wars and debates are very much a thing these days, be it Angular vs Backbone or Angular vs React, but the real debate isn't about these frameworks. The real debate essentially comes down to which is the most efficient way of structuring your app and more importantly, rendering and managing your DOM.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Whilst the traditional jQuery/Backbone way is to render the DOM directly using methods like \$(component).html("DOM Code"), React considers it an anti-pattern and recommends the way of virtual DOM - a concept where you don't render the DOM directly as it is, but keep a virtual copy of it and render only the differential which is essentially &lt;em&gt;patching&lt;/em&gt; the DOM.&lt;/p&gt;
&lt;p&gt;&lt;img alt="JavaScript Frameworks" class="alignnone size-full wp-image-812" height="426" src="/uploads/2018/07/js-frameworks.jpeg" width="640"&gt;&lt;/p&gt;
&lt;p&gt;One thing that comes to mind is that more than an improvement over the former approach, you are basically trading off CPU overhead for lesser memory usage. The former jQuery approach is more &lt;strong&gt;memory intensive&lt;/strong&gt; as the browser needs to keep large amount of DOM structural code in memory until its rendered (yeah, it gets pretty large in a non-trivial app with lots of widgets that may need to be rendered in a complex array of patterns). However, what exactly are we gaining by using the JSX virtual DOM method? The JSX approach is just as much &lt;strong&gt;CPU intensive&lt;/strong&gt; as the jQuery approach is RAM intensive because it takes just as many CPU cycles to compute the differential and come up with a "patch" version of the DOM. In fact, the trade-off may be even worse considering that React is more of a library overhead than jQuery which is just a light "write less do more" wrapper over JavaScript DOM manipulation functions.&lt;/p&gt;
&lt;p&gt;The real question we should be asking ourselves is why do we keep looking for that holy-grail JavaScript framework every now and then? Yesterday it was angularjs, today its React and tomorrow it will be vue.js. Instead of running after the shiny new framework, why not sit down and see what you are doing wrong with the present tools you have. After all, these tools are industry proven and they still exist for a reason.&lt;/p&gt;
&lt;p&gt;I think most of the issues with using jQuery come from incorrect usage patterns than any problems associated with actual rendering. Consider the following often used pattern for rendering view blocks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$.get(&amp;quot;partials/navbarTemplate.html&amp;quot;, function(data){
  $(&amp;quot;#div-navbar&amp;quot;).html(data); //render a template
  ..
});
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This coding pattern is typically abhorred by most React experts as they feel that rendering a whole bunch of html code (data argument in this case) is an anti pattern as the browser has to repeatedly render a lot of boiler-plate DOM unnecessarily. However, that's only true if you do this often times and repeatedly call this function. If you use a good architectural pattern for structuring your app (like the one provided by Backbone.js), you can render this same DOM in a very idempotent way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;app.NavbarView = Backbone.View.extend({
    el: &amp;quot;#div-navbar&amp;quot;,
    initialize: function() {
        var temp = this;
        $.get(&amp;quot;partials/navbarTemplate.html&amp;quot;, function(e){
            temp.template = _.template(e, {});
        });
    },
    render: function() {
        this.$el.html(this.template());
    },

});
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In above code, we are still using jQuery.get, but in a more organized and structured way. Firstly, we call jQuery.get only in the initialization of the view to get the template and store it in the cache, so the network overhead isn't involved each time we need to use a template. Furthermore, backbone itself caches and stores the block element to be rendered (this.\$el), so that we don't have to trouble the browser with other areas of the DOM where rendering isn't required. Finally, we just call the underscore template and render the element:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;this.$el.html(this.template());
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, this could be probably further optimized by using jQuery.empty().append() instead of jQuery.html() if you want to tweak the last drop of performance!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;this.$el.empty().html(this.template());
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, I don't think this kind of premature optimization is really needed unless you are building a really complex app and even then this isn't required in about 90% of the cases, the browsers have become considerably fast in recent years, at least in the area of DOM rendering.&lt;/p&gt;
&lt;p&gt;And this is exactly why I think that using virtual DOM libraries like React is an anti-pattern. You are essentially stepping into the shoes of the browser, isn't it? If the kind of partial patching implemented by React is really efficient, wouldn't the browsers be doing it themselves? Maybe they will take some of the best ideas from React and JSX, and implement it themselves in the coming future, but why should &lt;em&gt;you&lt;/em&gt; (as a programmer) be bothered with that is what I don't understand.&lt;/p&gt;
&lt;p&gt;This whole debate about frameworks is pretty much centered on separation of concerns essentially (models, views and controllers/organizers should all be cleanly separated) and to some extent, React is going against that separation by doing what the browser is supposed to do.&lt;/p&gt;</content><category term="Backbone"></category><category term="JavaScript"></category><category term="React"></category></entry><entry><title>Open Source vs Free Software is a bit like Socialist vs Communist</title><link href="blog/2018/07/open-source-vs-free-software-is-a-bit-like-socialist-vs-communist.html" rel="alternate"></link><published>2018-07-03T16:57:00+05:30</published><updated>2018-07-03T16:57:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-07-03:blog/2018/07/open-source-vs-free-software-is-a-bit-like-socialist-vs-communist.html</id><summary type="html">&lt;p&gt;Socialism and Communism have a lot in common, both ideologies aim to bring an equilibrium and welfare in the society by removing the income inequality between the rich and the poor. However, how they both go about doing their business is what makes the difference between sky and earth. Whilst …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Socialism and Communism have a lot in common, both ideologies aim to bring an equilibrium and welfare in the society by removing the income inequality between the rich and the poor. However, how they both go about doing their business is what makes the difference between sky and earth. Whilst Communism does advocate the use of &lt;strong&gt;force&lt;/strong&gt; to achieve its aim, Socialism does not and that's the major difference of spirit between them. If you remove this force element, you'll in fact find that they are both pretty much the same thing with only technical differences here and there.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pexels-photo-273691" class="alignnone wp-image-903 size-medium" height="199" src="/uploads/2018/07/pexels-photo-273691-300x199.jpeg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;Coming to the world of software, its a similar case when it comes to GPL (free software or copyleft) and non-GPL (open source or liberal) variety of FOSS licenses. The &lt;a href="https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt"&gt;GNU GPL&lt;/a&gt; forces their ideology upon the user of the software by expressly restricting him/her to the kind of use cases permitted on the said software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt; To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This restriction or force factor is what makes GPL or LGPL less desirable than the other more liberal (also called "open source") licenses, just as the communist ideology is less desirable than socialist ideology by most people.&lt;/p&gt;
&lt;p&gt;On the other hand, consider a liberal open source license such as the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT license&lt;/a&gt;. This license doesn't force anything on how the software may be used by the user (except that the license header itself carrying the name of the author should be passed around with any distributed copies):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;They may use it in any kind of use cases they please, even include it in a closed source or proprietary software if they want. Similar is the case with other open source licenses such as the &lt;a href="https://opensource.org/licenses/BSD-3-Clause"&gt;BSD Modified license&lt;/a&gt;or the &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2 license&lt;/a&gt;. None of these licenses force their users into any kind of restrictions, which is probably why they are more popular and used than the copyleft variety of licenses today.&lt;/p&gt;
&lt;p&gt;Finally, coming to the point of contrast between the copyleft and open source licenses, you'll find that they are all ultimately trying to achieve more or less the same goal, though some would strive for an excellence methodology in software development while others would term it as a struggle for users' freedom depending on what viewpoint you choose to look at it.&lt;/p&gt;
&lt;p&gt;Now, the reasons for GPL restrictions and &lt;a href="https://www.fsf.org/"&gt;their ideology&lt;/a&gt; are quite understandable, but the way they go about implementing it is certainly not ideal from a practical standpoint. &lt;a href="https://stallman.org/"&gt;Stallman's approach&lt;/a&gt; of making copyleft software unusable when linked with non-GPL or proprietary code is like a child's tit-for-tat attitude. Just as proprietary software companies won't let you use their software without a license and make it unapproachable to those who don't have it, Stallman wants to make the GPL world unapproachable to the proprietary companies by making this restriction on mixing GPL with proprietary code. In a perfect world (consisting of mostly power users who would rather visit support forums and do their own builds than use proprietary software), this may have worked wonders to Stallman's cause, but unfortunately we don't live in such a perfect world!&lt;/p&gt;
&lt;p&gt;On the other hand, the open source or liberal licenses that don't put any restrictions on its usage serve the purpose of everyone and so everyone is happy and thrives in this world. Power users are happy because they no longer have to use privacy invasive and/or bloated proprietary software as they can compile their own builds or even visit support forums or issue trackers of various open source projects if required. On the other hand, proprietary software companies are also happy as they get to use the fruits (source code) of open source contributors without spending anything on their part. Of course, taking the moral cognizance of these fruits, many of them also do tend to contribute back by either financially supporting other open source projects or releasing their in-house developed source code as open source to the world at large. There are several examples of these such as Microsoft's &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;, Adobe's code editor called &lt;a href="http://brackets.io/"&gt;Brackets.io&lt;/a&gt;, Apple's &lt;a href="https://developer.apple.com/swift/"&gt;Swift&lt;/a&gt;, etc. Now, consider that in a Richard Stallman's "pureland GPL" world, we wouldn't have all these contributions back from the proprietary companies!&lt;/p&gt;</content><category term="Libre Software"></category><category term="Open Source"></category></entry><entry><title>Why GPL isn't working - the Freedom vs Convenience Debate</title><link href="blog/2018/06/why-gpl-isnt-working-the-freedom-vs-convenience-debate.html" rel="alternate"></link><published>2018-06-29T15:02:00+05:30</published><updated>2018-06-29T15:02:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-06-29:blog/2018/06/why-gpl-isnt-working-the-freedom-vs-convenience-debate.html</id><summary type="html">&lt;p&gt;What distinguishes &lt;strong&gt;GPL&lt;/strong&gt; from other freedom licenses is their &lt;a href="https://en.wikipedia.org/wiki/GNU_General_Public_License"&gt;premise&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The GNU General Public License (GNU GPL or GPL) is a widely used &lt;a href="https://en.wikipedia.org/wiki/Free_software_license" title="Free software license"&gt;free software license&lt;/a&gt;, which &lt;strong&gt;guarantees&lt;/strong&gt; &lt;a href="https://en.wikipedia.org/wiki/End_user" title="End user"&gt;end users&lt;/a&gt; the &lt;strong&gt;freedom to run, study, share and modify the software&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;

&lt;p&gt;The GPL or &lt;em&gt;copyleft&lt;/em&gt; strives for the freedom of the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;What distinguishes &lt;strong&gt;GPL&lt;/strong&gt; from other freedom licenses is their &lt;a href="https://en.wikipedia.org/wiki/GNU_General_Public_License"&gt;premise&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The GNU General Public License (GNU GPL or GPL) is a widely used &lt;a href="https://en.wikipedia.org/wiki/Free_software_license" title="Free software license"&gt;free software license&lt;/a&gt;, which &lt;strong&gt;guarantees&lt;/strong&gt; &lt;a href="https://en.wikipedia.org/wiki/End_user" title="End user"&gt;end users&lt;/a&gt; the &lt;strong&gt;freedom to run, study, share and modify the software&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--more--&gt;

&lt;p&gt;The GPL or &lt;em&gt;copyleft&lt;/em&gt; strives for the freedom of the plebians of the community, and guarantees them absolute freedom on the source code of a software to not just view it, but also run and modify it, and most importantly, to share it with whoever they want.&lt;/p&gt;
&lt;p&gt;But in the real world, the plebians don't want freedom, they want functionality and convenience. If a closed-source solution gives them the convenience to do a task with least efforts, they are happily going to embrace that solution despite knowing that both their privacy and freedom is at stake by using that solution. The proof of this fact is usage and popularity metrics of many such apps. For example, almost everyone knows about the &lt;a href="https://en.wikipedia.org/wiki/Facebook%E2%80%93Cambridge_Analytica_data_scandal"&gt;Facebook-Cambridge Analytica privacy scandal&lt;/a&gt; that happened recently, and yet how many people switched to open and freedom respecting platforms like &lt;a href="https://mastodon.social/"&gt;Mastodon&lt;/a&gt; and &lt;a href="https://www.gnu.org/s/social/"&gt;GNU/Social&lt;/a&gt; after that? Ask your friends about them and there is a good chance that 9 out of 10 would not have even heard about platforms like Mastodon and GNU/Social.&lt;/p&gt;
&lt;p&gt;Its the same situation with messengers too. For instance, &lt;a href="https://jitsi.org/"&gt;Jitsi&lt;/a&gt; is a freedom respecting messenger software and yet people use only &lt;strong&gt;Skype&lt;/strong&gt; and &lt;strong&gt;WhatsApp&lt;/strong&gt; for messaging. Not only are Skype and WhatsApp closed-source applications, their &lt;a href="https://lifehacker.com/stop-using-whatsapp-if-you-care-about-your-privacy-1825719172"&gt;problems with privacy and security&lt;/a&gt; are also well known.&lt;/p&gt;
&lt;p&gt;The only reason attributable to this situation is lethargy and laziness - people just don't want to step into the shoes of power-users or even try and learn a new tool. And as for those power-users, they do occasionally experiment with freedom respecting software, but can't make a permanent switch because of compatibility - you can't convince your entire friend circle to switch to Jitsi and Mastodon overnight, can you? If you press too much, then they'll cut off the friendship and isolate you. And though you may end up with some freedom respecting messenger software, there will be no friends left to message if you go that route.&lt;/p&gt;
&lt;p&gt;Going forward, freedom friendliness is going to be a very important attribute while choosing a software or even a hardware for us netizens, and the reason is the &lt;em&gt;ongoing concentration of technological power in the hands of a few&lt;/em&gt;. Its no secret that &lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;large tech companies are eating smaller startups&lt;/a&gt; since last several years. If history is any evidence, this concentration doesn't result in a very healthy ecosystem. If we let only a few players like Microsoft, Apple, Google and Amazon to dominate the entire digital world, then we all know that the result is not going to be good, especially for us plebians.&lt;/p&gt;
&lt;p&gt;A healthy dose of competition should prevail in the ecosystem, only that can ensure that everybody thrives. We need more and more alternatives for Youtubes, Skypes, Facebooks and the Twitters of the world, and more importantly, people should start using them. However difficult it might be, stick with it for a while - search for popular plugins, raise bug reports on the project issue tracker, participate in user forums, contact the developers and your local open source meetups, walk that extra mile and you'll find that you've got more than a solution to your problem!&lt;/p&gt;
&lt;p&gt;Ultimately, our freedom is in our hands as a community or collective bunch of people. Its up to us whether we take control back into our own hands or let the technological powers dominate us.&lt;/p&gt;</content><category term="Open Source"></category></entry><entry><title>Webpack Project is sitting on a vulnerability, avoid it at all costs!</title><link href="blog/2018/06/webpack-project-is-sitting-on-a-vulnerability-avoid-it-at-all-costs.html" rel="alternate"></link><published>2018-06-28T19:09:00+05:30</published><updated>2018-06-28T19:09:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-06-28:blog/2018/06/webpack-project-is-sitting-on-a-vulnerability-avoid-it-at-all-costs.html</id><summary type="html">&lt;p&gt;The other day, I was going through this &lt;a href="https://medium.com/p/73fac4bc5068"&gt;medium post&lt;/a&gt; which describes the kind of chaos and insecurity currently plaguing the JavaScript world, and the &lt;em&gt;numero uno&lt;/em&gt; reason for that is the astronomical number of npm packages.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;When you usually install a non-trivial library or application through a package manager …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The other day, I was going through this &lt;a href="https://medium.com/p/73fac4bc5068"&gt;medium post&lt;/a&gt; which describes the kind of chaos and insecurity currently plaguing the JavaScript world, and the &lt;em&gt;numero uno&lt;/em&gt; reason for that is the astronomical number of npm packages.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;When you usually install a non-trivial library or application through a package manager, the expectation is that the number of dependencies should be as less as possible. This not only helps you in managing the disk space (very important for cloud hosting), but also makes a manageable code audit possible. For instance, the Python's Flask package (which is a considerably large web framework, a lot more complex than Webpack which is just a JavaScript bundler) has the &lt;a href="https://github.com/pallets/flask/blob/master/setup.py"&gt;following four dependencies&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; install_requires=[
 &amp;#39;Werkzeug&amp;gt;=0.14&amp;#39;,
 &amp;#39;Jinja2&amp;gt;=2.10&amp;#39;,
 &amp;#39;itsdangerous&amp;gt;=0.24&amp;#39;,
 &amp;#39;click&amp;gt;=5.1&amp;#39;,
],
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the other hand, this trivial Webpack package on NPM has &lt;a href="https://www.npmjs.com/package/webpack"&gt;25 dependencies on various 3rd party packages&lt;/a&gt;!!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@webassemblyjs/ast
 @webassemblyjs/helper-module-context
 @webassemblyjs/wasm-edit
 @webassemblyjs/wasm-opt
 @webassemblyjs/wasm-parser
 acorn
 acorn-dynamic-import
 ajv
 ajv-keywords
 chrome-trace-event
 enhanced-resolve
 eslint-scope
 json-parse-better-errors
 loader-runner
 loader-utils
 memory-fs
 micromatch
 mkdirp
 neo-async
 node-libs-browser
 schema-utils
 tapable
 uglifyjs-webpack-plugin
 watchpack
 webpack-sources
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, your worry hasn't even started yet, your real worry starts when you realize that the other super-trivial package mentioned in that article called &lt;strong&gt;&lt;a href="https://www.npmjs.com/package/is-odd"&gt;is-odd&lt;/a&gt;&lt;/strong&gt;  has a whopping statistics of &lt;strong&gt;1.4 million&lt;/strong&gt; downloads per week:&lt;/p&gt;
&lt;p&gt;&lt;img alt="is odd" class="alignnone size-full wp-image-699" height="445" src="/uploads/2018/06/is-odd.png" width="453"&gt;&lt;/p&gt;
&lt;p&gt;Now, any programmer worth his salt will know that its a &lt;a href="https://stackoverflow.com/questions/6211613/testing-whether-a-value-is-odd-or-even"&gt;one line coding effort&lt;/a&gt; to determine whether a given number is odd or even, even in JavaScript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isEven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isOdd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, our master programmer who developed this "&lt;em&gt;is-odd as a service&lt;/em&gt;" not only goes ahead and registers whole new npm packages called is-odd and is-even, but also makes a lot of his other packages depend on it. Can you even begin to imagine what kind of bureaucratic politician you have to be in order to do that!&lt;/p&gt;
&lt;p&gt;Now, this in itself couldn't have caused any problem, the real issue here is that the highly reputed and popular &lt;strong&gt;Webpack&lt;/strong&gt; project is also using one of his packages (for doing a trivial regular expression check on a string) and the dependency chain is such that the following four packages are also pulled in whenever you install &lt;strong&gt;Webpack&lt;/strong&gt; from npm since Webpack depends on them (and this is what explains is-odd's 1.4 million weekly download figure):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;is-odd -&amp;gt; nanomatch -&amp;gt; micromatch -&amp;gt; webpack&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now, even a CS undergraduate should be able to see the management nightmare, not only of burdening your hard disk space of these additional packages whenever you &lt;strong&gt;npm install webpack&lt;/strong&gt;, but also the security nightmares associated with it. In future, if the developer of &lt;strong&gt;is-odd&lt;/strong&gt; package clubbed some malware in his code and propagated it throughout the node-ecosystem, can you even begin to imagine the disaster its going to cause on your production machines? I agree that this applies to other packaging systems like &lt;strong&gt;pip&lt;/strong&gt; and &lt;strong&gt;composer&lt;/strong&gt; too, but problem here is that the number of npm packages is too large and too unmanageable.&lt;/p&gt;
&lt;p&gt;And to top it, the developers in the ecosystem are paying no heed to this, they think this is something to be proud of and worthy of chest thumping. They should try to understand that DRY (Don't Repeat Yourself) becomes a self-harming pattern beyond a certain extent, especially when you start releasing packages like is-odd and is-even. They get argumentative and counter you with a militant defense when you try to explain this point to them. For instance, I raised &lt;a href="https://github.com/webpack/webpack/issues/7591"&gt;an issue on Webpack's Github repository a few days ago&lt;/a&gt; for this exact problem (&lt;strong&gt;remove dependency from micromatch package&lt;/strong&gt;) and they simply closed it down giving some hilarious arguments. Their arguments are really interesting, but beyond sanity for someone who values security and maintainability of production applications.&lt;/p&gt;</content><category term="Open Source"></category><category term="JavaScript"></category></entry><entry><title>Smyte is no more - The latest episode in the acquisition saga of Tech Giants</title><link href="blog/2018/06/smyte-the-latest-victim-in-the-acquisition-saga-of-tech-giants.html" rel="alternate"></link><published>2018-06-22T20:25:00+05:30</published><updated>2018-06-22T20:25:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-06-22:blog/2018/06/smyte-the-latest-victim-in-the-acquisition-saga-of-tech-giants.html</id><summary type="html">&lt;p&gt;Not even a month has been passed since Microsoft gave a big surprise to the world at large and the open source community by &lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;acquiring Github Inc.&lt;/a&gt; a few days ago, and there has been &lt;a href="https://techcrunch.com/2018/06/21/twitter-acquires-anti-abuse-technology-provider-smyte/"&gt;another acquisition&lt;/a&gt; yesterday. This time, Twitter Inc. bought the well known online service &lt;a href="https://smyte.com/"&gt;Smyte&lt;/a&gt;. Smyte …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Not even a month has been passed since Microsoft gave a big surprise to the world at large and the open source community by &lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;acquiring Github Inc.&lt;/a&gt; a few days ago, and there has been &lt;a href="https://techcrunch.com/2018/06/21/twitter-acquires-anti-abuse-technology-provider-smyte/"&gt;another acquisition&lt;/a&gt; yesterday. This time, Twitter Inc. bought the well known online service &lt;a href="https://smyte.com/"&gt;Smyte&lt;/a&gt;. Smyte was an online provider of anti-abuse technology services, i.e. things like AI algorithms for identifying online trolling, etc. Many customers were totally dependent on this provider's API which suddenly disappeared off the radar after Twitter Inc. acquired them yesterday.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;A whole lot of customers and other depending services were affected because of this &lt;a href="https://twitter.com/seldo/status/1009873821141118976?s=09"&gt;including npm&lt;/a&gt;, the popular Node.js package manager. As usual, &lt;a href="https://old.reddit.com/r/sysadmin/comments/8swr1e/reminder_that_external_dependencies_can_shut_down/"&gt;Reddit&lt;/a&gt; was one of the first places where people turned up to know what's going on and update their statuses. As one of the comments quite intelligently notes, this is a very good lesson on this modern web development way that involves depending on a zillion external services and leaving your application open to the whims of acquisitions and centralization of technology powers:&lt;/p&gt;
&lt;p&gt;::: {.reddit-embed data-embed-media="www.redditmedia.com" data-embed-parent="false" data-embed-live="true" data-embed-uuid="5bebab31-c06c-4d2c-bbd0-d938f9f97409" data-embed-created="2018-06-22T14:47:54.034Z"}
&lt;a href="https://old.reddit.com/r/sysadmin/comments/8swr1e/reminder_that_external_dependencies_can_shut_down/e13j9tx/"&gt;Comment&lt;/a&gt; from discussion &lt;a href="https://old.reddit.com/r/sysadmin/comments/8swr1e/reminder_that_external_dependencies_can_shut_down/"&gt;Reminder that external dependencies can shut down without notice&lt;/a&gt;.
:::&lt;/p&gt;
&lt;p&gt;
&lt;script async src="https://www.redditstatic.com/comment-embed.js"&gt;&lt;/script&gt;
&lt;/p&gt;

&lt;p&gt;Similarly, Twitter was also filled today with tweets of complains from existing Smyte customers who have suddenly stopped receiving any communication from their service provider:&lt;/p&gt;
&lt;p&gt;https://twitter.com/arthens/status/1009925187364458496&lt;/p&gt;
&lt;p&gt;Jeremy Ashkenas, the inventor of famous Backbone.js and Underscore.js JavaScript libraries expressed his feelings in a very sarcastic tweet:&lt;/p&gt;
&lt;p&gt;https://twitter.com/jashkenas/status/1010014139320680449&lt;/p&gt;
&lt;p&gt;I don't know what was Twitter's intention before acquiring Smyte, but the way this is going on, this has to end in only one of the two ways:&lt;/p&gt;
&lt;p&gt;1. Either developers take lessons from these incidents and stop depending so much on layer-2 solutions and external dependencies.&lt;/p&gt;
&lt;p&gt;2. Technology giants become a bit more empathetic to the needs of smaller businesses and understand that just acquiring other services isn't a solution to the innovation problem.&lt;/p&gt;</content><category term="Open Source"></category><category term="Twitter"></category></entry><entry><title>People migrating from Github to Gitlab should learn about these details first</title><link href="blog/2018/06/people-migrating-from-github-to-gitlab-should-learn-about-these-details-first.html" rel="alternate"></link><published>2018-06-11T14:37:00+05:30</published><updated>2018-06-11T14:37:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-06-11:blog/2018/06/people-migrating-from-github-to-gitlab-should-learn-about-these-details-first.html</id><summary type="html">&lt;p&gt;After &lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;Microsoft's recent acquisition of Github&lt;/a&gt;, a mass exodus has kind of begun and many small and large projects are moving their code bases to the much hyped &lt;a href="https://gitlab.com/"&gt;Gitlab&lt;/a&gt; in a hurry, and these include both open and closed source projects. However, before migrating to Gitlab, they should take a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After &lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;Microsoft's recent acquisition of Github&lt;/a&gt;, a mass exodus has kind of begun and many small and large projects are moving their code bases to the much hyped &lt;a href="https://gitlab.com/"&gt;Gitlab&lt;/a&gt; in a hurry, and these include both open and closed source projects. However, before migrating to Gitlab, they should take a pause and learn something about Gitlab and consider evaluating other alternatives too.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;[caption id="attachment_644" align="alignnone" width="692"]&lt;img alt="Gitlab Stack" class="size-full wp-image-644" height="605" src="/uploads/2018/06/gitlab_stack.png" width="692"&gt; Gitlab Stack[/caption]&lt;/p&gt;
&lt;p&gt;According to above &lt;a href="https://stackshare.io/gitlab/gitlab"&gt;StackShare.io chart&lt;/a&gt;, Gitlab basically runs on Microsoft Azure cloud hosting facility. So, if you are leaving Github in order to escape the clutches of Microsoft, then you are headed to a totally wrong place! Microsoft is exactly the place where your source code will reside in this case, only difference is that instead of controlling it directly (as in the case of Github), Microsoft will be controlling your code only technically.&lt;/p&gt;
&lt;p&gt;I know, some of you will be saying that you are self-hosting an open source copy of Gitlab and not actually moving to &lt;a href="https://gitlab.com"&gt;Gitlab.com&lt;/a&gt;. In that case, please have a look at another item in that stack, namely Rails (RoR or Ruby on Rails framework).&lt;/p&gt;
&lt;p&gt;Though Rails is a great framework that developers enjoy to code with, its a performance hog when it comes to actually running on production! There is a reason why &lt;a href="https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/"&gt;Twitter ditched Rails&lt;/a&gt; in favor of Node.js instead of fixing the interpreter like Facebook did with PHP. Apart from Rails being a performance hog, consider that a git hosting facility is not a simple CRUD app. Its very difficult to do advanced things like CI/CD right in a framework like Rails and the effect is showing. It may work out initially, but once your code base starts to increase and your integrations start to scale, you'll hit the RoR scaling limit sooner or later, like &lt;a href="https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process"&gt;many others have&lt;/a&gt;. Its not uncommon for Gitlab to eat gigabytes of your RAM or consume 100% CPU. So, if you are trying to host Gitlab in a small Digital Ocean droplet or Amazon AWS Micro instance, you can just forget about it!&lt;/p&gt;
&lt;p&gt;Or, you can sit back and evaluate your options, it really depends on what you basically want. If you just want a free git hosting facility and don't want to self-host, there is already Github. If you don't like Microsoft, then you have Bitbucket, SourceForge, &lt;a href="http://salsa.debian.org/"&gt;Debian Salsa&lt;/a&gt; and others too apart from Gitlab, so consider those options too before blindly deciding on Gitlab and falling for their marketing trap.&lt;/p&gt;
&lt;p&gt;On the other hand, if you are ready to self-host and have a smaller budget (just for an AWS Micro or Digital Ocean droplet, for instance), then you can use one of the several open source and light-weight git hosting software like &lt;a href="https://try.gogs.io/"&gt;gogs&lt;/a&gt;, &lt;a href="https://try.gitea.io/"&gt;gitea&lt;/a&gt;, &lt;a href="https://github.com/phacility/phabricator"&gt;phabricator&lt;/a&gt; and many others and self-host.&lt;/p&gt;
&lt;p&gt;Finally, if you have a budget for hosting Gitlab on a larger instance (like AWS Large instance or 2GB droplet from Digital Ocean), then the first question I'd ask you is why not just stick to paid hosting plans of Github (or Gitlab/Bitbucket if you don't like Microsoft). That will be a lot cheaper and lenient on your pockets than self hosting a copy of Gitlab on a larger instance.&lt;/p&gt;
&lt;p&gt;Whatever route you end up choosing, it should be a calmly taken logical decision after due consideration to all facts, not in this Github acquisition frenzy. All the best.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackshare.io/gitlab/gitlab"&gt;https://stackshare.io/gitlab/gitlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com"&gt;https://gitlab.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/"&gt;https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process"&gt;https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=10235446"&gt;https://news.ycombinator.com/item?id=10235446&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/osldev-blog/our-first-eight-months-with-gitlab-2f447af92e50"&gt;https://medium.com/osldev-blog/our-first-eight-months-with-gitlab-2f447af92e50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://salsa.debian.org/"&gt;http://salsa.debian.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://try.gogs.io/"&gt;https://try.gogs.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://try.gitea.io/"&gt;https://try.gitea.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phacility/phabricator"&gt;https://github.com/phacility/phabricator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Git"></category><category term="Github"></category><category term="Gitlab"></category><category term="Microsoft"></category><category term="Open Source"></category></entry><entry><title>Microsoft's Github Acquisition - An Unbiased Perspective</title><link href="blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html" rel="alternate"></link><published>2018-06-08T17:04:00+05:30</published><updated>2018-06-08T17:04:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-06-08:blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html</id><summary type="html">&lt;p&gt;As someone who has worked on Microsoft tooling since the days of Foxpro 2.6 to Visual Studio 2010 in IT career, and yet ditched them all for PHP, Python and open source years later, I think I am qualified to offer a somewhat neutral or objective perspective on this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As someone who has worked on Microsoft tooling since the days of Foxpro 2.6 to Visual Studio 2010 in IT career, and yet ditched them all for PHP, Python and open source years later, I think I am qualified to offer a somewhat neutral or objective perspective on this acquisition.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;When this news was &lt;strong&gt;&lt;a href="https://www.businessinsider.in/Microsoft-has-been-talking-about-buying-GitHub-a-startup-at-the-center-of-the-software-world-last-valued-at-2-billion/articleshow/64420905.cms"&gt;first announced on last Friday&lt;/a&gt;&lt;/strong&gt;, I was naturally puzzled and so were a lot of other developers and not without reasons. The way this was initially announced without any clarification or their plans about what they were going to do with the hosting facility in future, speculations were bound to be raised and people were bound to be pissed off, especially given Microsoft's history of being "not so friendly" with open source and "not so good" with some acquisitions.&lt;/p&gt;
&lt;p&gt;When it comes to open source, the Linux subreddit is the place where developers pour their hearts out and &lt;a href="https://www.reddit.com/r/linux/comments/8nukfa/microsoft_and_github_have_held_acquisition_talks/"&gt;this particular thread&lt;/a&gt; quite summed up  their initial knee-jerk reaction. As the most upvoted comment says:&lt;/p&gt;
&lt;p&gt;::: {.usertext-body .may-blank-within .md-container}
::: {.md}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;its like Microsoft is obsessed with generating as much frustration in the world as possible
:::
:::&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Other reactions were also quite similar:&lt;/p&gt;
&lt;p&gt;::: {.usertext-body .may-blank-within .md-container}
::: {.md}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I LOL'ed.&lt;/p&gt;
&lt;p&gt;First, Sourceforge started to install malware on the open source projects. So everyone run to Github. Now, Github might get owned by Microsoft. Not to mention Github is 100% closed source. &lt;strong&gt;Gitlab&lt;/strong&gt; looks good every day. There are other open source git solution too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/"&gt;&lt;strong&gt;GitLab&lt;/strong&gt;&lt;/a&gt;, the top open source competitor to Github soon became the most discussed alternative (apparently, their marketing team did their bit too with the perfect timing!). And so, a mass exodus of projects soon began, which not only became the most discussed topic on reddit, but also caught a lot of media attention too:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reuters.com/article/us-github-microsoft-gitlab/gitlab-gains-developers-after-microsoft-buys-rival-github-idUSKCN1J12BR"&gt;GitLab gains developers after Microsoft buys rival GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just within a couple of days from this announcement, some &lt;a href="https://motherboard.vice.com/en_us/article/ywen8x/13000-projects-ditched-github-for-gitlab-monday-morning"&gt;13,000 projects had already migrated to Gitlab&lt;/a&gt; which included some prominent names. Naturally, it was time now for Microsoft to do some damage control. But if their PR team was any wiser, they should have already anticipated this and this damage control move should have been done at the outset as the first thing. How could they not expect this backlash considering Microsoft's past history with open source (however distant it may be)?&lt;/p&gt;
&lt;p&gt;The first move came when Satya Nadella, the Microsoft CEO gave an interview to CNBC on Monday (4th June):&lt;/p&gt;
&lt;p&gt;[embed]https://www.youtube.com/watch?v=m164XggdRGA[/embed]&lt;/p&gt;
&lt;p&gt;One of the most important things Satya said in the interview was that Microsoft is a &lt;strong&gt;&lt;em&gt;developer tooling&lt;/em&gt;* &lt;/strong&gt;company at core*** (let's ignore Windows and Office for a moment!). However, most developers still had concerns, they wanted to know how this high level strategy of being open source developer friendly will turn out to be in practice.&lt;/p&gt;
&lt;p&gt;Most importantly, they needed an assurance that their daily driver for source control isn't going to be integrated and hijacked by other Microsoft products like Skype, Linkedin or even a Passport account. And that assurance came yesterday from &lt;a href="https://en.wikipedia.org/wiki/Nat_Friedman"&gt;Nat Friedman&lt;/a&gt;, the future CEO of Github &lt;a href="https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/"&gt;in his Reddit AMA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Firstly, the fact that Github Inc. was going in the hands of an open source veteran who had contributed to GNOME and MONO projects in the past was itself quite reassuring. At least, Github isn't going to be controlled by a typical corporate honcho who has nothing but shareholders' interests in mind! Nat assured most redditors that Github is going to stay as it is, its developer focus is not going to be shifted, nor is it going to be integrated with any other products. And most importantly, they will never require a Microsoft account to login to Github, rather, their other products might consider allowing a Github user to authenticate to their systems in future:&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/e0a5e3r/&lt;/p&gt;
&lt;p&gt;Nat also goes on to further assure redditors in the AMA that they will always remain a "developer first" company, and are keen to learn a lot from Github from this acquisition. Rather than impose their own work culture on Github, they'll be taking lessons from Github and try and be like them:&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/e0a6eh1/&lt;/p&gt;
&lt;p&gt;All in all, this damage control or whatever Microsoft has done seems to have done the magic at least for the moment. People and projects seem to have stopped their exodus to Gitlab, though its difficult to say what could happen in the long term.
:::
:::&lt;/p&gt;</content><category term="Github"></category><category term="Gitlab"></category><category term="Linux"></category><category term="Microsoft"></category></entry><entry><title>How to use Bash+rsync to automate your periodical backups on Linux</title><link href="blog/2018/03/how-to-use-bashrsync-to-automate-your-periodical-backups-on-linux.html" rel="alternate"></link><published>2018-03-04T13:05:00+05:30</published><updated>2018-03-04T13:05:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-03-04:blog/2018/03/how-to-use-bashrsync-to-automate-your-periodical-backups-on-linux.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt; is all about simplicity. Simple and time-tested tools like &lt;code&gt;iptables&lt;/code&gt;, &lt;code&gt;netstat&lt;/code&gt; and &lt;code&gt;rsync&lt;/code&gt; can be called for help for basic tasks instead of untrusted third-party tools as happens in case of Windows. If you are a desktop user, then taking frequent backups of your data to a pen-drive or …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt; is all about simplicity. Simple and time-tested tools like &lt;code&gt;iptables&lt;/code&gt;, &lt;code&gt;netstat&lt;/code&gt; and &lt;code&gt;rsync&lt;/code&gt; can be called for help for basic tasks instead of untrusted third-party tools as happens in case of Windows. If you are a desktop user, then taking frequent backups of your data to a pen-drive or external disk is a typical problem to solve.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;In this article, I'll show how I solved this problem using a combination of &lt;strong&gt;bash scripting&lt;/strong&gt; and &lt;strong&gt;rsync&lt;/strong&gt;, the basic tooling available on any linux distro these days, be it Ubuntu, Debian or Fedora.&lt;/p&gt;
&lt;p&gt;One of the things you may want to do is determine what folder(s) you want to backup to which device. You may want to copy the source code folder only to your pen drive and your images and documents to only external drive, for instance. Here is where identifying the disk label through bash comes in handy in the backup script:&lt;/p&gt;
&lt;p&gt;``` {.brush: .bash}
if [ -d "/media/prahlad/DATA128" ]; then
    device_name="DATA128"
    folder_name="/media/prahlad/DATA128"
elif [ -d "/media/prahlad/extHD" ]; then
    device_name="extHD"
    folder_name="/media/prahlad/extHD"
else
    echo "No Drive Found"
    exit
fi&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;In the above example, **DATA128** is a pen-drive and **extHD** is an external hard-drive and the above script determines which disk is inserted in the USB drive. You can then use the **\$folder\_name** bash variable to dynamically copy to that device instead of hard-coding that path unnecessarily. You can also use **\$device\_name** bash variable to include or skip specific folders when running the rsync command:

``` {.brush: .bash}
rsync -va /home/prahlad/source &amp;quot;$folder_name/source&amp;quot;

if [ &amp;quot;$device_name&amp;quot; = &amp;quot;extHD&amp;quot; ]; then
 rsync -va /home/prahlad/Pictures &amp;quot;$folder_name/home/Pictures&amp;quot;
 rsync -va /home/prahlad/Documents &amp;quot;$folder_name/home/Documents&amp;quot;
fi
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;strong&gt;rsync&lt;/strong&gt; command itself is also versatile enough to do a lot of things which are not possible using a simple copy-paste-replace using a file manager. For instance, the "a" or "--archive" option intelligently archives (copies) files while skipping identical ones based on checksum or modification date automatically. Further, the "--delete" option deletes files which are present on the destination backup device, but not on the source device which is typically the case when you want to backup your data. Run "man rsync" to see the full range of options exposed by this wonderful command.&lt;/p&gt;
&lt;p&gt;Finally, another advantage of using a script for backup automation is that you can implement custom actions through the script. For example, compressing the mozilla firefox user folder before taking its backup:&lt;/p&gt;
&lt;p&gt;``` {.brush: .bash}
echo "backing up firefox..."
tar czf ~/firefox-backup.tar.gz ~/.mozilla/firefox/
rsync -va ~/firefox-backup.tar.gz "$folder_name/home/firefox-backup.tar.gz"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Below is a typical example of how you might implement a script to automate backup of your home folder and set this as a cron job to run say weekly or fortnightly:

``` {.brush: .bash}
#!/bin/sh

if [ -d &amp;quot;/media/prahlad/DATA128&amp;quot; ]; then
 device_name=&amp;quot;DATA128&amp;quot;
 folder_name=&amp;quot;/media/prahlad/DATA128&amp;quot;
elif [ -d &amp;quot;/media/prahlad/extHD&amp;quot; ]; then
 device_name=&amp;quot;extHD&amp;quot;
 folder_name=&amp;quot;/media/prahlad/extHD&amp;quot;
else
 echo &amp;quot;No Drive Found&amp;quot;
 exit
fi

echo &amp;quot;Device: $device_name&amp;quot;
echo &amp;quot;Folder: $folder_name&amp;quot;

#start copying 

#home
rsync -va ~/.bashrc &amp;quot;$folder_name/home/&amp;quot; --delete
rsync -va ~/.profile &amp;quot;$folder_name/home/&amp;quot; --delete
rsync -va ~/Downloads/ &amp;quot;$folder_name/home/Downloads/&amp;quot; --delete
rsync -va ~/Documents/ &amp;quot;$folder_name/home/Documents/&amp;quot; --delete
rsync -va ~/Pictures/ &amp;quot;$folder_name/home/Pictures/&amp;quot; --delete
rsync -va ~/.ssh/ &amp;quot;$folder_name/home/.ssh/&amp;quot; --delete
rsync -va ~/.gnupg/ &amp;quot;$folder_name/home/.gnupg/&amp;quot; --delete
rsync -va ~/.thunderbird/ &amp;quot;$folder_name/home/.thunderbird/&amp;quot; --delete
rsync -va ~/.mozilla/ &amp;quot;$folder_name/home/.mozilla/&amp;quot; --delete

echo &amp;quot;Done&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can customize the above script by adding custom actions or if conditions to skip or include specific folders based on the device label. If you know of any other techniques for backup automation on linux, then please let us know through comments.&lt;/p&gt;</content><category term="Backup"></category><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>Its high time we find alternatives to centralized platforms like Youtube, Patreon and Twitter</title><link href="blog/2018/01/its-high-time-we-find-alt-to-centralized-platforms-like-youtube-patreon-and-twitter.html" rel="alternate"></link><published>2018-01-27T07:39:00+05:30</published><updated>2018-01-27T07:39:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2018-01-27:blog/2018/01/its-high-time-we-find-alt-to-centralized-platforms-like-youtube-patreon-and-twitter.html</id><summary type="html">&lt;p&gt;The other day, I was listening to this &lt;a href="http://www.jupiterbroadcasting.com/120622/peer-pressure-lup-227/#comments"&gt;Linux Unplugged podcast&lt;/a&gt; when I realized to what extent we have been locked in by the so-called "platforms" already.&lt;/p&gt;
&lt;p&gt;Only few days ago, Google started blocking some of Amazon's videos on Youtube only because Amazon refused to sell Nest Cams and Chromecasts …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The other day, I was listening to this &lt;a href="http://www.jupiterbroadcasting.com/120622/peer-pressure-lup-227/#comments"&gt;Linux Unplugged podcast&lt;/a&gt; when I realized to what extent we have been locked in by the so-called "platforms" already.&lt;/p&gt;
&lt;p&gt;Only few days ago, Google started blocking some of Amazon's videos on Youtube only because Amazon refused to sell Nest Cams and Chromecasts on their website among other things.&lt;!--more--&gt; Similarly, if you have been following &lt;a href="https://www.youtube.com/user/BryanLunduke/videos"&gt;Bryan Lunduke's Youtube channel&lt;/a&gt; on Linux, you may have heard him complaining about Google trying to censor his monetization of any content that relates to "Linux".&lt;/p&gt;
&lt;p&gt;Similarly, you may have heard stories about Twitter and Facebook too about how they sometimes actively try to censor content that doesn't match up to their political agenda.&lt;/p&gt;
&lt;p&gt;In all these cases, its the common individual who is made to suffer. In the good old days of 1990s, it was Microsoft who used to give a tough time to open source and libre folks using things like Internet Explorer and OEM deals to stop Linux, but these days, that role has been taken over by these platforms who are slowly trying to become walled gardens in their own rights, to which they can control access.&lt;/p&gt;
&lt;p&gt;As the famous saying goes, "Power corrupts and absolute power corrupts absolutely". If we let these platforms continue their monopolies, it won't take long for them to do more sinister things that will hamper free speech and people's freedom. As free-thinking individuals, its our duty to find, use and support open source alternatives to these platforms. Of course, there are many open source projects who are helping us with that, all we have to do is support them in whatever way we we can. But at the very least, we can start by using these services:&lt;/p&gt;
&lt;h1&gt;Open Source Twitter Replacement&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://joinmastodon.org/"&gt;&lt;strong&gt;Mastodon&lt;/strong&gt;&lt;/a&gt;: Mastodon is a decentralized version of Twitter. Which means that unlike Twitter (which has a single platform called Twitter.com), Mastodon is decentralized across multiple nodes, you can join any of them (or even start your own!). All nodes are federated of course, which means irrespective of which node you sign up on, you can see all the content, and connect with anybody on the Mastodon network. You can give it a try by signing up on &lt;a href="https://mastodon.social/"&gt;Mastodon.social&lt;/a&gt;, a popular node that I've been using since quite a while.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://matrix.org/"&gt;Matrix&lt;/a&gt;&lt;/strong&gt;: Matrix is an "open network for decentralized communication". Though I haven't used it personally, it seems to be a decentralized social platform along similar lines as Mastodon (Let me know in comments if you've used it).&lt;/p&gt;
&lt;p&gt;A distinct advantage of decentralized platforms like Mastodon and Matrix is that there is no giant corporation to censor your free speech, or collect private data on you. The decentralized nodes are run by people like you and me, so they are like the Linux who is standing up against all the walled platforms.&lt;/p&gt;
&lt;h1&gt;Open Source Patreon Replacement&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://en.liberapay.com/"&gt;&lt;strong&gt;Liberapay&lt;/strong&gt;&lt;/a&gt;: Liberapay is a freedom friendly implementation which can act as a replacement for Patreon, a popular platform for open source contributors to get donations from their patrons. Patreon has been behaving quite odd lately (increase in transaction fees, network problems, etc.), hence Liberapay deserves a mention as an alternative.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dash.org/"&gt;&lt;strong&gt;Dash&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;:&lt;/strong&gt; Dash is a crypto currency platform that might also help in switching over from Patreon. Its built along similar lines to the Bitcoin, but has two mining layers instead of one. Using the Dash platform isn't necessarily important, the point here is that a crypto currency can be used instead of regular ways of funding for open source projects, alternatives like Bitcoin, Litecoin, etc. can also be used of course.&lt;/p&gt;
&lt;h1&gt;Open Source YouTube Replacement&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Chocobozzz/PeerTube"&gt;&lt;strong&gt;PeerTube&lt;/strong&gt;&lt;/a&gt;&lt;strong&gt;:&lt;/strong&gt; PeerTube uses &lt;a href="https://github.com/webtorrent/webtorrent"&gt;WebTorrent&lt;/a&gt;, a JavaScript (browser accessible) version of the Bittorrent client to make peer-to-peer video streaming possible using the Bittorrent protocol. In other words, it is an "open platform" version of YouTube, a chance to escape its walled garden.&lt;/p&gt;
&lt;p&gt;Feel free to add more open platforms in comments if you know about them.&lt;/p&gt;</content><category term="Twitter"></category><category term="Youtube"></category><category term="Open Source"></category></entry><entry><title>Tux Drive - A Command Line Tool to Access Google Drive from Linux</title><link href="blog/2017/09/introducing-tuxdrive-a-command-line-tool-to-access-google-drive-from-linux.html" rel="alternate"></link><published>2017-09-20T00:03:00+05:30</published><updated>2017-09-20T00:03:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-09-20:blog/2017/09/introducing-tuxdrive-a-command-line-tool-to-access-google-drive-from-linux.html</id><summary type="html">&lt;p&gt;One of the most boring things we need to perform in life is using the &lt;a href="https://drive.google.com/drive/"&gt;Google Drive&lt;/a&gt;. On one hand, so useful is this tool provided by Google (so many cloud GBs for free, yay!). But on the other hand, the web interface to access those files is not quite …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the most boring things we need to perform in life is using the &lt;a href="https://drive.google.com/drive/"&gt;Google Drive&lt;/a&gt;. On one hand, so useful is this tool provided by Google (so many cloud GBs for free, yay!). But on the other hand, the web interface to access those files is not quite as intuitive, especially so for power users, and certainly so for linux users!&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Unlike the good old FTP/SFTP where you could just run some geeky commands in a terminal (or use a super-intuitive GUI like FileZilla to just drag and drop files), the Google Drive web interface results in a crippled work flow. To top it, we don't even have a desktop client like the Windows folks do.&lt;/p&gt;
&lt;h1&gt;Tux Drive&lt;/h1&gt;
&lt;p&gt;To solve this problem, I have written a console based python program called &lt;a href="https://github.com/prahladyeri/tuxdrive"&gt;&lt;strong&gt;tuxdrive&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[caption id="" align="alignnone" width="687"]&lt;img alt="Tux Drive running on Ubuntu 16.04 LTS" height="302" src="https://raw.githubusercontent.com/prahladyeri/tuxdrive/master/screenshot.png" width="687"&gt; Tux Drive running on Ubuntu 16.04 LTS[/caption]&lt;/p&gt;
&lt;p&gt;Its nowhere as comprehensive as FTP/SFTP in flexibility (yet), but it does some basic things like &lt;strong&gt;&lt;em&gt;ls (or dir)&lt;/em&gt;&lt;/strong&gt; to list remote files and directories on your drive, &lt;strong&gt;&lt;em&gt;get file_name&lt;/em&gt;&lt;/strong&gt; to download a file, &lt;strong&gt;&lt;em&gt;cd remote_dir&lt;/em&gt;&lt;/strong&gt; to change the drive directory, etc.&lt;/p&gt;
&lt;p&gt;Here is the entire list of vocabulary that &lt;strong&gt;tuxdrive&lt;/strong&gt; is currently acquainted with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{.brush: .bash}
 help (or ?): Shows this help facility.
 dir (or ls): Lists all files and folders on drive.
 !dir (or !ls): Lists all files and folders in current directory.
 get (or pull) &amp;lt;item&amp;gt;: Pulls the named file/folder from drive to current working directory.
 put (or push) &amp;lt;item&amp;gt;: Pushes the named file/folder from current working directory to drive.
 rm &amp;lt;item&amp;gt;: Delete the named file/folder on remote path.
 pwd: Print working directory (remote/drive).
 cd: Change working directory (remote/drive).
 lpwd: Print working directory (local).
 lcd: Change working directory (local).
 rdcache: Show remote directory mapping of id and folder paths.
 rfcache: Show remote files mapping of id and folder paths.
 mkdir: Create a directory on remote path.
 exit: Exits this program.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Instructions to download and run &lt;strong&gt;tuxdrive&lt;/strong&gt; can be found on the &lt;a href="https://github.com/prahladyeri/tuxdrive"&gt;project github&lt;/a&gt;. I sincerely hope this tool becomes useful to as many users as possible. If something good comes out of this, I'll think about integrating dropbox too into this in future.&lt;/p&gt;
&lt;p&gt;Have a Good Day.&lt;/p&gt;</content><category term="Google Drive"></category><category term="Linux"></category><category term="Python"></category></entry><entry><title>Some tips to lighten your Ubuntu Desktop and make it Faster</title><link href="blog/2017/09/how-to-trim-your-new-ubuntu-installation-of-extra-fat-and-make-it-faster.html" rel="alternate"></link><published>2017-09-19T13:11:00+05:30</published><updated>2017-09-19T13:11:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-09-19:blog/2017/09/how-to-trim-your-new-ubuntu-installation-of-extra-fat-and-make-it-faster.html</id><summary type="html">&lt;p&gt;The usual advice you get when seeking a more resource conserving distro is to use a lighter spin-off such as Xubuntu, Lubuntu, or a Debian with Openbox, etc. However, not many people know that even a "heavy" distro such as Ubuntu 16.04 LTS with the default Unity Desktop could …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The usual advice you get when seeking a more resource conserving distro is to use a lighter spin-off such as Xubuntu, Lubuntu, or a Debian with Openbox, etc. However, not many people know that even a "heavy" distro such as Ubuntu 16.04 LTS with the default Unity Desktop could be made much lighter by uninstalling some stuff and removing others from the startup. Lets see how it can be achieved:&lt;!--more--&gt;&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;1.Remove unwanted items from Startup Applications.&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;When you go to the Ubuntu Dash and start the "&lt;strong&gt;Startup Applications&lt;/strong&gt;" dialog, it doesn't show you the whole picture. There are still many "hidden apps" that silently start in the background without you knowing it. In order for all these hidden apps to be displayed in that dialog, you'll have to run the following command in the terminal once:&lt;/p&gt;
&lt;p&gt;``` {.brush: .bash}
sudo sed -i 's/NoDisplay=true/NoDisplay=false/g' /etc/xdg/autostart/*.desktop&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Once you run this and then open the &amp;quot;Startup Applications&amp;quot; dialog, you&amp;#39;ll be able to see the hidden apps too:

\[caption id=&amp;quot;attachment\_505&amp;quot; align=&amp;quot;alignnone&amp;quot; width=&amp;quot;600&amp;quot;\][![Startup Applications (Ubuntu)](/uploads/2017/09/startup_applications.png){.size-full .wp-image-505 width=&amp;quot;600&amp;quot; height=&amp;quot;478&amp;quot;}](/uploads/2017/09/startup_applications.png) Startup Applications (Ubuntu)\[/caption\]

From this dialog, you can disable an app from starting up by &amp;quot;unchecking&amp;quot; it. The most important that I typically uncheck on a new installation are **Backup Monitor** and **Desktop Sharing**. It doesn&amp;#39;t make sense to have such a huge backup schizophrenia on a non-production desktop computer, so I wonder why the Backup Monitor is enabled in the first place. About 99% of sysadmins either perform a manual backup periodically, or write an automation script use something like **rsync** which is specifically designed for the job.

**Desktop Sharing** is an equally unnecessary tool to have been enabled by default on a linux desktop. This ain&amp;#39;t the Windows world where people use Remote Desktop clients to connect to other PCs on the same network. Again, around 99% of linux folks use **ssh** to connect to remote machines. But that doesn&amp;#39;t mean that you have to keep ssh server enabled by default either. Desktop Sharing should be an opt-in feature in any case and a user who specifically needs it can enable it when needed.

**2. Remove unnecessary background services such as cups and avahi-daemon. **
-----------------------------------------------------------------------------

On a fresh Ubuntu 16.04 installation, run **sudo netstat -antpe** and you&amp;#39;ll see the rarely used **cupsd** daemon (*common unix printing service*) running on a free TCP port leeching your memory and network resources. Similarly, run **sudo netstat -anupe** to scan for UDP ports and you&amp;#39;ll similarly see the cups browser daemon (**cups-browsed**) and the avahi daemon (**avahi-daemon**) services.

Again, use of printers has become less and less especially since the oncoming of digital age and Internet revolution. Hell, even companies have been encouraging email communication these days in a bid to avoid paper work and save trees, my bank sends me an email statement since last two years instead of a postal envelope to my address, and here we are - one of the top linux distributions running a printer service by default! Again, please make it an opt-in feature, those who need it will have enough sense to type **sudo apt install cups**. Until that happens, the rest of the folks can do the following:

``` {.brush: .bash}
sudo systemctl disable cupsd.service

sudo systemctl disable cups-browsed.service
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We are not uninstalling it, just disabling the service just in case. And before you say that &lt;em&gt;cups&lt;/em&gt; is needed for PDF exports from browsers, then no, the latest versions of firefox and chrome come with their own PDF extensions and don't depend on this service anymore.&lt;/p&gt;
&lt;p&gt;As for the other service (avahi-daemon), it really doesn't make any sense as &lt;strong&gt;avahi&lt;/strong&gt; is the linux implementation of Apple's proprietary protocols for peer-to-peer communication between their iDevices. Now, who in their right mind would be using Ubuntu on their PC/Laptop and still use an Apple product like iPhone or MacBook? The two just don't play well together as Apple products are a closed system and doesn't allow much interaction with anything else without going through a lot of hoops. A user who can handle a linux distribution such as Ubuntu can easily handle something like Android which interacts well with a linux system (since Android itself is based on the linux kernel).&lt;/p&gt;
&lt;p&gt;Again, for the extremely rare folks who do have such a setup, let them install it themselves. For others, to disable the avahi-daemon, just:&lt;/p&gt;
&lt;p&gt;``` {.brush: .bash}
sudo systemctl disable avahi-daemon&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;**3. Disable HUD (if you don&amp;#39;t use it).**&lt;/span&gt;
&lt;span class="gh"&gt;-----------------------------------------&lt;/span&gt;

One of the reasons why Xubuntu has such a low memory footprint (\~200 MB at idle) is that it doesn&amp;#39;t come with memory leeching services such as the HUD. For example, on my laptop, HUD service eats a good 30MB of RAM which is too much for a service that I don&amp;#39;t even use. As [described in this post](https://askubuntu.com/a/218073/49938), you can disable the HUD service from the terminal as follows:

on 32bit systems

&lt;span class="s"&gt;``` {.brush: .bash}&lt;/span&gt;
&lt;span class="s"&gt;sudo chmod -x /usr/lib/indicator-appmenu/hud-service&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;on 64bit systems&lt;/p&gt;
&lt;p&gt;``` {.brush: .bash}
sudo chmod -x /usr/lib/x86_64-linux-gnu/hud/hud-service&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;**4. Disable evolution processes (if you use Thunderbird or anything else instead).**&lt;/span&gt;
&lt;span class="gh"&gt;-------------------------------------------------------------------------------------&lt;/span&gt;

Evolution processes(such as &lt;span class="gs"&gt;**evolution-calendar-factory**&lt;/span&gt; and &lt;span class="gs"&gt;**evolution-addressbook-factory**&lt;/span&gt;) are huge memory leechers and a big drain on your resources. If you just start the System Monitor and search for &amp;quot;evolution&amp;quot;, then you&amp;#39;ll find 4-5 different processes that will be totally consuming a good 120MB of your RAM! Now, for someone who doesn&amp;#39;t even use the evolution email client or any of these services, why should they be there in the first place? But unfortunately, you cannot just remove (uninstall) these packages using &lt;span class="ge"&gt;*apt*&lt;/span&gt;. Trying to &lt;span class="gs"&gt;**remove evolution-data-server**&lt;/span&gt; will break your system as they have made it a core part of the desktop. What you can do instead (if you really want to claim back that RAM) is a workaround [suggested in this post](https://askubuntu.com/a/816353/49938). Simply rename the folders as follows (or use the other hack mentioned in the answer):

&lt;span class="s"&gt;``` {.brush: .bash}&lt;/span&gt;
&lt;span class="s"&gt;sudo mv /usr/lib/evolution-data-server /usr/lib/evolution-data-server-disabled&lt;/span&gt;
&lt;span class="s"&gt;sudo mv /usr/lib/evolution /usr/lib/evolution-disabled&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;&lt;strong&gt;5. Remove GNOME software center (only if you don't use it):&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;This piece of junk takes a good 70-80MB on any typical Ubuntu installation. For managing software, I personally find the good old &lt;strong&gt;apt install&lt;/strong&gt; way to be much more intuitive than the GNOME software center. For those rare cases when you absolutely need a GUI, the &lt;strong&gt;synaptic package manager&lt;/strong&gt; works absolutely fine and works without taking a constant toll on your resources.&lt;/p&gt;
&lt;p&gt;As described in &lt;a href="https://askubuntu.com/a/783075/49938"&gt;this answer&lt;/a&gt;, all it takes to safely remove GNOME software center it from your system is:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{.brush: .bash}
sudo apt purge gnome-software&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;After trimming the programs and services as mentioned above, your system should become nearly as light-weight as those other lighter distros like Xubuntu/Lubuntu/etc. and you'll still be able to enjoy and work with a richer and better user interface.&lt;/p&gt;
&lt;p&gt;On my own laptop, I was able to reduce the idle memory consumption from \~550MB to \~300MB which is as close as it gets to Ubuntu MATE!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sources:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/questions/210387/how-can-i-disable-hud-service"&gt;https://askubuntu.com/questions/210387/how-can-i-disable-hud-service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://askubuntu.com/a/816353/49938"&gt;https://askubuntu.com/a/816353/49938&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Linux"></category><category term="Ubuntu"></category><category term="Xubuntu"></category></entry><entry><title>Ubuntu 17.10 (Artful Aardvark) - An Objective Review</title><link href="blog/2017/09/ubuntu-17-10-artful-aardvark-an-objective-review.html" rel="alternate"></link><published>2017-09-16T18:29:00+05:30</published><updated>2017-09-16T18:29:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-09-16:blog/2017/09/ubuntu-17-10-artful-aardvark-an-objective-review.html</id><summary type="html">&lt;p&gt;Today, I installed the &lt;a href="http://cdimage.ubuntu.com/daily-live/current/"&gt;Daily Build&lt;/a&gt; of the upcoming Ubuntu 17.10 in VirtualBox and gave it a try. This was supposed to be the first one that replaced &lt;strong&gt;Unity Desktop&lt;/strong&gt; with &lt;strong&gt;GNOME&lt;/strong&gt;. After having used 16.04 LTS for a long time, I felt that this version is quite …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today, I installed the &lt;a href="http://cdimage.ubuntu.com/daily-live/current/"&gt;Daily Build&lt;/a&gt; of the upcoming Ubuntu 17.10 in VirtualBox and gave it a try. This was supposed to be the first one that replaced &lt;strong&gt;Unity Desktop&lt;/strong&gt; with &lt;strong&gt;GNOME&lt;/strong&gt;. After having used 16.04 LTS for a long time, I felt that this version is quite stable but still lacking in some respects from what I consider to be a &lt;em&gt;proper&lt;/em&gt; Ubuntu OS. Below are my observations:&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;[caption id="attachment_466" align="alignnone" width="640"]&lt;a href="/uploads/2017/09/artful.png"&gt;&lt;img alt="Ubuntu 17.10 (Artful Aardwork)" class="wp-image-466 size-large" height="361" src="/uploads/2017/09/artful-1024x578.png" width="640"&gt;&lt;/a&gt; &lt;strong&gt;Ubuntu 17.10 (Artful Aardwark)&lt;/strong&gt;[/caption]&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Slightly Higher Memory Consumption in Idle Mode:&lt;/strong&gt; One of the first things I've observed is that Artful eats a bigger chunk of memory than its predecessors. The 16.04 LTS typically consumes in the range of 400-450 MB at rest, whereas Artful consumed a good 639 MB which is slightly higher. The gnome process itself accounted for more than 300 MB at rest, which is a bit higher when compared to the original GNOME Desktop. Maybe, they'll fix this in the final release version.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Shortcuts Dialog Missing:&lt;/strong&gt; In the Unity Desktop, I very much depend on the "Shortcuts Dialog" which is a dialog that pops up when you long press the &lt;strong&gt;Super&lt;/strong&gt; key on the Desktop:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_467" align="alignnone" width="942"]&lt;a href="/uploads/2017/09/keyboard_shortcuts_dialog.png"&gt;&lt;img alt="Ubuntu Keyboard Shortcuts Dialog" class="wp-image-467 size-full" height="600" src="/uploads/2017/09/keyboard_shortcuts_dialog.png" width="942"&gt;&lt;/a&gt; Unity Keyboard Shortcuts Dialog[/caption]&lt;/p&gt;
&lt;p&gt;As you can see, this gives a good overview of various shortcut keys and comes in very handy for many Ubuntu users. Perhaps, the devs have forgotten to add this feature when they transitioned Ubuntu to the GNOME desktop.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Many Shortcuts Missing:&lt;/strong&gt; There are many actual shortcuts too which are missing in this version. One of the important ones for example is &lt;strong&gt;HUD&lt;/strong&gt; which is a quite well known feature. Another one is the &lt;strong&gt;"Super+Tab"&lt;/strong&gt; shortcut which allows you to cycle through the dock menu in Unity.&lt;/p&gt;
&lt;p&gt;[caption id="attachment_468" align="alignnone" width="108"]&lt;a href="/uploads/2017/09/dock.png"&gt;&lt;img alt="Ubuntu Dock" class="size-full wp-image-468" height="356" src="/uploads/2017/09/dock.png" width="108"&gt;&lt;/a&gt; Ubuntu Dock[/caption]&lt;/p&gt;
&lt;p&gt;Again, this important shortcut is missing which contributes much to the usability of a typical Ubuntu user. Maybe, this is all right from a GNOME user's perspective but we are talking about Ubuntu here and not Ubuntu-GNOME, so the features of the former should have a priority and not the latter. If this turns out to be just another clone of Ubuntu-GNOME, then what's the use of having Ubuntu, people can already use the Ubuntu-GNOME Desktop for that.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Stable Performance:&lt;/strong&gt; Other than the points described above, Ubuntu 17.10 seems ready for the prime time. But having said that, I haven't come across any drastic feature addition to 16.04 LTS yet, so I'm not going to switch just yet. If &lt;strong&gt;Wayland&lt;/strong&gt; improves over the years and  makes a drastic improvement in performance (as they had originally promised), then lets see! Until then, its just wait and watch.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="Linux"></category><category term="Ubuntu"></category></entry><entry><title>How to Import Disqus comments into Wordpress</title><link href="blog/2017/09/demystifying-comments-migration-from-disqus-to-wordpress.html" rel="alternate"></link><published>2017-09-07T02:01:00+05:30</published><updated>2017-09-07T02:01:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-09-07:blog/2017/09/demystifying-comments-migration-from-disqus-to-wordpress.html</id><summary type="html">&lt;p&gt;Some time ago, I had switched from a self-hosted wordpress blog to a statically generated (Jekyll) blog hosted on Github Pages. For a commenting system, Disqus was quite an easy choice at that time since it was zero hassle for us site owners, and Disqus did all the heavy lifting …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some time ago, I had switched from a self-hosted wordpress blog to a statically generated (Jekyll) blog hosted on Github Pages. For a commenting system, Disqus was quite an easy choice at that time since it was zero hassle for us site owners, and Disqus did all the heavy lifting from filtering the comments to storing and displaying them.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/2017/09/pexels-photo-262508.jpg"&gt;&lt;img alt="Blog" class="size-full wp-image-372" height="197" src="/uploads/2017/09/pexels-photo-262508.jpg" width="297"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But as time went on, I started realizing that implementing a static blog was not quite the right thing. Firstly, there were &lt;a href="https://en.wikipedia.org/wiki/Disqus#Criticism_and_privacy_concerns"&gt;privacy issues&lt;/a&gt; around Disqus because of which many readers of my blog were discouraged from commenting. Secondly, the concept of a "static site" itself felt quite constraining to me as I couldn't implement things like contact form or a questionnaire to interact with my viewers. As a result, I decided to switch back to a plain old self-hosted wordpress blog.&lt;/p&gt;
&lt;p&gt;Now, importing the posts was quite straightforward using the Jekyll generated RSS feed link that was pretty straightforward to use. In case you don't have it in your Jekyll blog, its very easy to write one using liquid template. Just create a file named &lt;strong&gt;rss.xml&lt;/strong&gt; in your root folder with below contents:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;rss&lt;/span&gt; &lt;span class="na"&gt;version=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;2.0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;xmlns:atom=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2005/Atom&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;channel&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;site.name&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;xml_escape&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt; - Articles&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;description&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;site.description&lt;/span&gt; &lt;span class="cp"&gt;%}{{&lt;/span&gt; &lt;span class="nv"&gt;site.description&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;xml_escape&lt;/span&gt; &lt;span class="cp"&gt;}}{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;link&amp;gt;&lt;/span&gt;
 &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;site.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
 &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;post&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;site.posts&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
 &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="nv"&gt;post.link&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;post.title&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;xml_escape&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;description&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;post.content&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;xml_escape&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;pubDate&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;post.date&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nf"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;%a, %d %b %Y %H:%M:%S %z&amp;quot;&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/pubDate&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;link&amp;gt;&lt;/span&gt;
 &lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;site.url&lt;/span&gt; &lt;span class="cp"&gt;}}{{&lt;/span&gt; &lt;span class="nv"&gt;post.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/link&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;guid&lt;/span&gt; &lt;span class="na"&gt;isPermaLink=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;true&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;site.url&lt;/span&gt; &lt;span class="cp"&gt;}}{{&lt;/span&gt; &lt;span class="nv"&gt;post.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/guid&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
 &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endunless&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
 &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/channel&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/rss&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once you generate the blog, you can import all posts into your wordpress by referring to the &lt;strong&gt;/rss.xml&lt;/strong&gt; url on your existing Jekyll blog.&lt;/p&gt;
&lt;p&gt;However, the bigger issue here was importing the Disqus comments, becuase while Disqus does allow you to &lt;a href="https://help.disqus.com/customer/portal/articles/472149-comments-export"&gt;export a dump of your site comments&lt;/a&gt;, their XML format is pretty weird and isn't the standard one used by wordpress and other blogging systems, as a result of which there aren't too many ready tools for importing comments from this format to any other system.&lt;/p&gt;
&lt;p&gt;As a result, I had to write my own Wordpress importer tool. Since I did not want to go through the hassle of learning to create an "admin plugin" with all the bells and whistles, I decided to write a simple PHP console script to import the XML as mentioned &lt;a href="https://wordpress.stackexchange.com/a/76466/52396"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All I needed were two scripts: A parser script to parse the XML output of Disqus comments dump, and secondly, a wordpress handler that loops through these comments and imports them one by one by matching the post's url attribute and running &lt;strong&gt;wp_new_comment()&lt;/strong&gt; to insert the comment (you can also use the older &lt;strong&gt;wp_insert_comment()&lt;/strong&gt;, but its not the recommended way according to the wordpress codex).&lt;/p&gt;
&lt;p&gt;Below is the source code for both these files. First one, &lt;strong&gt;console.php&lt;/strong&gt; is the wordpress handler that you need to run, passing the path of the Disqus comments dump file. And &lt;strong&gt;disqus_parse.php&lt;/strong&gt; is the parser which is called internally by console.php. You need to copy these two files anywhere inside your WP folder structure (I copied them to &lt;strong&gt;/wp-content/plugins/test/&lt;/strong&gt; folder), and run the console.php from the command line:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;console.php:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/prahladyeri/e22e4e232416ff841be670601b396c62"&gt;https://gist.github.com/prahladyeri/e22e4e232416ff841be670601b396c62&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;disqus_parse.php&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/prahladyeri/d1e19d8a6d0c7ff23fe3e15f9050b6d3"&gt;https://gist.github.com/prahladyeri/d1e19d8a6d0c7ff23fe3e15f9050b6d3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally, just keep one thing in mind before running the console.php. Your wordpress system might throw an exception in case it detects too many comments being inserted in a loop. To suppress that exception, you need to add the following line of code to the end of your theme's &lt;strong&gt;functions.php&lt;/strong&gt; to disable the comment flood filter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;add_filter(&amp;#39;comment_flood_filter&amp;#39;, &amp;#39;__return_false&amp;#39;);
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, remember to comment that line once you are done importing the comments. Also, let me know through the comments below how your migration went.&lt;/p&gt;</content><category term="Blogging"></category><category term="Disqus"></category><category term="Wordpress"></category></entry><entry><title>The Reviewer's Duty and the Tragedy of the commons</title><link href="blog/2017/08/reviewers-duty-and-tragedy-of-commons.html" rel="alternate"></link><published>2017-08-31T04:21:00+05:30</published><updated>2017-08-31T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-08-31:blog/2017/08/reviewers-duty-and-tragedy-of-commons.html</id><summary type="html">&lt;p&gt;In Economics, there is a concept called &lt;a href="https://en.wikipedia.org/wiki/Tragedy_of_the_commons"&gt;Tragedy of the Commons&lt;/a&gt; which simplistically means that when left to their own mechanism, individuals acting out of their own self interest sometimes behave in a manner which is against the common interest of all.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reviewer's Duty" src="/uploads/old/stock/finger-769300_small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Some popular examples of this are air and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In Economics, there is a concept called &lt;a href="https://en.wikipedia.org/wiki/Tragedy_of_the_commons"&gt;Tragedy of the Commons&lt;/a&gt; which simplistically means that when left to their own mechanism, individuals acting out of their own self interest sometimes behave in a manner which is against the common interest of all.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reviewer's Duty" src="/uploads/old/stock/finger-769300_small.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Some popular examples of this are air and water pollution. Companies that manufacture chemicals or other substances don’t bother much about pollution as it isn’t in their immediate best interest, at least in the short term. But they fail to realize that in the long term, the pollution is going to affect them too along with the sustainability of every individual on earth.&lt;/p&gt;
&lt;p&gt;But for things like air and water pollution, there are regulatory bodies that keep a check on the polluters. Now, you might be wondering how on earth does the tragedy of commons have anything to do with internet reviews?&lt;/p&gt;
&lt;p&gt;Welcome to the 21st century where the entire world is moving towards a global village ideal, and its no secret that actions of one individual affect others too in the digital realm. For example, its popularly known in SEO circles that &lt;strong&gt;Links&lt;/strong&gt; are the very currency and life-blood on the Internet. If you link to someone on your website, you provide them lots of traffic by recommending to your own site visitors. Not only that, the number of incoming links to a url very much affects the search engine results for that url too. For e-commerce and other sites whose income depends directly on the incoming web traffic to an extent, a link refferal is very much akin to a boon, isn’t it?&lt;/p&gt;
&lt;p&gt;A similar currency which is getting a lot of importance lately is &lt;strong&gt;online reviews&lt;/strong&gt;. Like links, reviews affect the e-commerce sites and businesses too, but they help even more towards the common good of all consumers of those businesses - both current and potential.&lt;/p&gt;
&lt;p&gt;In the good old 18th century, “word of mouth” publicity was the way reviews and reputations used to work. Life was simple and the most people had to know for making both ends meet was about the grocery shop next door, or the vegetable market near the village centre. Reviews and reputations were something implicit in such a localized market, nobody needed to ask for them.&lt;/p&gt;
&lt;p&gt;The “word of mouth” technique works even to this day upto a certain extent, but life is more complicated today with the oncoming of digital. All varieties of simple and complicated products are available on shopping portals and the only thing that can guide you with decision-making in this chaos is reviews. With e-commerce growth projected at around &lt;a href="https://www.statista.com/statistics/379046/worldwide-retail-e-commerce-sales/"&gt;2.29 trillion USD&lt;/a&gt; by the end of this year alone, the importance of honest and sincere reviews become even more important, both for the digital and offline consumer.&lt;/p&gt;
&lt;p&gt;But there is a major problem with how the review system presently works. As I mentioned in the beginning, the economic concept of &lt;em&gt;common good&lt;/em&gt; applies here. Firstly, almost everyone goes an extra mile to write a negative review about a product, but they don’t bother to write a positive review as they are “too happy with the product to bother”. This results in a very skewed review pattern of a product. Its a well-known thing that some defects happen in almost all products, but the ratio is important: whether ten defects were found in ten products sold, or a thousand products sold makes a world of difference. But since most of our positive reviewers just didn’t mention that thing, we may never know the difference and hold both the products (with a handful of bad reviews) in equally bad light.&lt;/p&gt;
&lt;p&gt;As a “happy user” of a good product, bothering to switch on your laptop and write a review might be a bit painful, but each time you receive a good product, just remember that it might have as well turned out to be bad. And it might have happened just because someone else didn’t bother to write a wonderful review about an even better option that you missed on the portal! So, remember that &lt;em&gt;common good&lt;/em&gt; and do your utmost duty as a good netizen: Get up and write an honest review of almost everything that you have ever purchased.&lt;/p&gt;
&lt;p&gt;And reviews aren’t just important for e-commerce sites, its important for offline world as well. When you visit a restaurant, hospital or even a grocery shop, its very easy to find that on Google and write a review about it. If you visit a hospital or clinic and observed a serious neglience while receiving a treatment, your review can potentially help save someone’s life. Don’t ever think that what difference is your lone review going to make, if each one thinks like that, then we as consumers will keep getting taken for rides.&lt;/p&gt;
&lt;p&gt;Another reason for writing honest reviews for real consumers, is review manipulation and paid-reviews by many e-commerce sellers. The concept of paid reviews is no secret, many e-commerce sellers pay people to write fake reviews on amazon, google, etc. Taking the short-term profit route and ignoring the long-term consequences on common good, those poor folks write those incorrect reviews. The only way to thwart these manipulators is that each and every one of the &lt;em&gt;actual genuine consumer&lt;/em&gt; writes a review too. The handful of manipulated reviews will get lost in the ocean of genuine reviews, and paid reviews will stop happening for good.&lt;/p&gt;
&lt;p&gt;Don’t ever think that there are already thousands of good reviews on a product, why should I write another one. As I said, all these thousands are very much required to counteract the paid reviews. Think of reviews as votes that you cast in an election. How important it is to elect a good candidate for the common good of the people is something that you already know. So, the next time you feel lethargic or lazy to write a good review, remember the &lt;em&gt;common good&lt;/em&gt; which will cause your good karma to return back to you with 200% interest!&lt;/p&gt;</content><category term="Business"></category><category term="Reviews"></category></entry><entry><title>How to install Debian+LXDE on ANY Android Tablet</title><link href="blog/2017/07/install-debian-lxde-on-tablet.html" rel="alternate"></link><published>2017-07-05T04:21:00+05:30</published><updated>2017-07-05T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-07-05:blog/2017/07/install-debian-lxde-on-tablet.html</id><summary type="html">&lt;p&gt;Running a linux distro on android devices is a hot topic these days, and why not? After all, android is already based on linux kernel, but a pretty much locked-down and dumbed-down version of it. The OEM doesn’t give you root and in most cases, not even an open …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Running a linux distro on android devices is a hot topic these days, and why not? After all, android is already based on linux kernel, but a pretty much locked-down and dumbed-down version of it. The OEM doesn’t give you root and in most cases, not even an open source bootloader or kernel.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;That way, its good for maybe the most average user who doesn’t care about the OS and just want to use their phones. But for a power user, that’s not enough.&lt;/p&gt;
&lt;p&gt;[caption id="attachment_553" align="alignnone"]&lt;a href="/uploads/2017/07/debian_xfce_tablet.jpg"&gt;&lt;img alt="Debian (LXDE) running on Xiaomi MiPad" class="size-full wp-image-553" src="/uploads/2017/07/debian_xfce_tablet.jpg"&gt;&lt;/a&gt; Debian (LXDE) running on Xiaomi MiPad Tablet[/caption]&lt;/p&gt;
&lt;p&gt;The so called apps available in the Play Store don’t allow you to utilize the full power of your linux device. A power user always wants to have the power of a full linux distro (such as Debian or Ubuntu or Fedora) on his/her device.&lt;/p&gt;
&lt;p&gt;For a long time, I researched for the best way to install a linux distro on a tablet, preferably one that didn’t involve rooting or partitioning the device. The &lt;a href="https://wiki.debian.org/ChrootOnAndroid"&gt;debian guide&lt;/a&gt; lists down several methods and apps to do this such as Linux Deploy, GNURoot, Termux, etc. Out of them, the least risky and one that supports most android devices (including my KitKat tablet) is &lt;a href="https://play.google.com/store/apps/details?id=com.gnuroot.debian"&gt;GNURoot-Debian&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you install this app on your tablet, it creates a self-contained &lt;code class="highlighter-rouge"&gt;chroot&lt;/code&gt; install of debian using a tool called &lt;a href="https://wiki.archlinux.org/index.php/Proot"&gt;Proot&lt;/a&gt;. Once that is done, all you need to do is open up the app terminal and just start using it:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;apt-get update
apt-get install tmux vim gcc python python3 python3-pip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;Of course, these are just some of the packages that I’ve installed, you can do whatever you want with your linux installation. The only limitation is regarding multiple user logins. By default, the app will login you as &lt;code class="highlighter-rouge"&gt;root&lt;/code&gt; and while you can create additional users using &lt;code class="highlighter-rouge"&gt;useradd&lt;/code&gt; command, don’t expect things like &lt;code class="highlighter-rouge"&gt;setuid&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;setgid&lt;/code&gt; to work. The only way to switch user is using the &lt;code class="highlighter-rouge"&gt;su - yourLogin&lt;/code&gt; command (whilst the &lt;code class="highlighter-rouge"&gt;login&lt;/code&gt; command should work too in theory, I’m having a few problems with it presently, it might need some fixing in /etc/pam.d/* configuration files).&lt;/p&gt;
&lt;p&gt;Further, if you have good amount of RAM on your tablet, you may consider using a desktop environment along with your headless installation (LXDE is recommended as it performs best on minimal resources). In order to do that, you’ll need two things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=x.org.server&amp;amp;hl=en"&gt;XServer-XSDL app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LXDE/XFCE desktop installed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The former is used to interact with the headless XServer installation of your debian and provide you a graphical desktop environment. For the latter, you’ll have to just &lt;code class="highlighter-rouge"&gt;apt-get install lxde&lt;/code&gt; (or lxde-core depending on your choice). Then, in order to use the desktop any time on your tablet:&lt;/p&gt;
&lt;p&gt;1) Open XServer-XSDL app, follow the instructions until you reach a blue screen.&lt;/p&gt;
&lt;p&gt;2) Go to the debian installation and run:\
export DISPLAY=:0 PULSE_SERVER=tcp:127.0.0.1:4712\
startlxde &amp;amp;&lt;/p&gt;
&lt;p&gt;3) Go back to XServer-XSDL app to interact with the desktop.&lt;/p&gt;
&lt;p&gt;If all goes well, you should be able to see an lxde desktop like the one shown in the above screen. Coupled with the keyboard case and a bunch of great linux apps (such as vim, emacs, geany, inkscape, eclipse, etc.), you should be able to convert your mobile tablet into a great development machine on wheels.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.xda-developers.com/guide-installing-and-running-a-gnulinux-environment-on-any-android-device/"&gt;https://www.xda-developers.com/guide-installing-and-running-a-gnulinux-environment-on-any-android-device/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.debian.org/ChrootOnAndroid"&gt;https://wiki.debian.org/ChrootOnAndroid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.gnuroot.debian"&gt;https://play.google.com/store/apps/details?id=com.gnuroot.debian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=x.org.server&amp;amp;hl=en"&gt;https://play.google.com/store/apps/details?id=x.org.server&amp;amp;hl=en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/Proot"&gt;https://wiki.archlinux.org/index.php/Proot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Android"></category><category term="Debian"></category><category term="LXDE"></category></entry><entry><title>Flask Recipe - RESTful CRUD using sqlalchemy</title><link href="blog/2017/06/flask-recipe-restful-crud-using-sqlalchemy.html" rel="alternate"></link><published>2017-06-25T04:21:00+05:30</published><updated>2017-06-25T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-06-25:blog/2017/06/flask-recipe-restful-crud-using-sqlalchemy.html</id><summary type="html">&lt;p&gt;RESTful apps are a thing these days. When your application’s userbase gets quite large and the client could vary from a laptop to an android device to an iOS device, it pays to keep the backend code separate and use the server only for making RESTful calls using HTTP …&lt;/p&gt;</summary><content type="html">&lt;p&gt;RESTful apps are a thing these days. When your application’s userbase gets quite large and the client could vary from a laptop to an android device to an iOS device, it pays to keep the backend code separate and use the server only for making RESTful calls using HTTP methods that pertain to basic OLTP transactions: SELECT, INSERT, UPDATE and DELETE.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Popular third-party apps like &lt;a href="https://en.wikipedia.org/wiki/Firebase#Realtime_Database"&gt;Firebase&lt;/a&gt; essentially provide you this same thing - A REST based front to a database that could be accessed online using simple HTTP methods. But in this tutorial, we will learn how to create such a backend ourselves using Python’s &lt;code class="highlighter-rouge"&gt;flask&lt;/code&gt; framework and &lt;code class="highlighter-rouge"&gt;sqlalchemy&lt;/code&gt;, a light-weight but powerful ORM library that can access ANY database using its flexible &lt;em&gt;sql expression language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="RESTful CRUD App" src="/uploads/old/restful-crud.png"&gt;&lt;/p&gt;
&lt;p&gt;Rather than using firebase, if you develop your own implementation of your back-end, not only will it help you learn and become a better programmer, but also give you a flexible solution that you can scale and change as per your needs. Its also much cheaper to host your own solution on Amazon EC2 (or Lambda) compared to other costlier alternatives.&lt;/p&gt;
&lt;p&gt;Contrary to popular thinking, its not very difficult to create a database agnostic backend such as the one represented in the above diagram. With a minimal and powerful web framework such as &lt;code class="highlighter-rouge"&gt;flask&lt;/code&gt;, combined with the power of &lt;code class="highlighter-rouge"&gt;sqlalchemy&lt;/code&gt;, you can get up and running within minutes. In fact, I’ve developed a prototype version called &lt;a href="https://github.com/prahladyeri/tiddly"&gt;Tiddly&lt;/a&gt; that essentially does the same thing as above using just 172 lines of Python code. You can refer to that github repository for reference as we proceed through this tutorial, or directly start using it. But make sure you install the following dependencies before running it:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    pip install flask
    pip install sqlalchemy

&lt;/figure&gt;

&lt;p&gt;The first step towards creating the app is creating your database models. Once you’ve done the brainstorming and decided what tables and fields you are going to need, you can create a &lt;code class="highlighter-rouge"&gt;models.py&lt;/code&gt; source file with something like this:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    import sqlalchemy
    from sqlalchemy import create_engine
    from sqlalchemy import Column, String, Integer
    from sqlalchemy.orm import sessionmaker
    from sqlalchemy.ext.declarative import declarative_base

    #TODO: Change as needed:
    engine = create_engine("sqlite:///tiddly.db", echo=True)
    Base = declarative_base()

    Session = sessionmaker(bind=engine)
    dbsession = Session()

    class User(Base):
        __tablename__ = "user"
        id = Column(Integer, primary_key=True)
        email = Column(String)
        password = Column(String)
        name = Column(String)
        def repr(self):
            return "&lt;User(name=%s, email=%s, )&gt;" % (name, email)

    class Dual(Base):
        __tablename__ = "dual"
        id = Column(Integer, primary_key=True)
        text = Column(String)
        def repr(self):
            return "&lt;Dual(id=%s, text=%s, )&gt;" % (id, text)

&lt;/figure&gt;

&lt;p&gt;I’m using sqlite database for example here, but you can use any one of your choice. A &lt;code class="highlighter-rouge"&gt;user&lt;/code&gt; table is a pretty basic one in almost every app as it is used for authentication. Apart from that, I’ve also created a &lt;code class="highlighter-rouge"&gt;dual&lt;/code&gt; table just to play around with.&lt;/p&gt;
&lt;p&gt;After that, create the second file &lt;code class="highlighter-rouge"&gt;app.py&lt;/code&gt; that contains our application code. Define the following import statements along with your models as they will come very handy:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    import flask
    from flask import request, jsonify, session
    import sqlalchemy
    from sqlalchemy import inspect, desc
    import json
    import models
    from models import engine, dbsession

&lt;/figure&gt;

&lt;p&gt;Now, the only thing that remains to be done is the plumbing the &lt;code class="highlighter-rouge"&gt;HTTP&lt;/code&gt; methods to their respective database operations. You can either create a separate view function for each one or use a single one for all of them. In this example, I’m using a single function for simplicity.&lt;/p&gt;
&lt;figure class="highlight"&gt;
    @app.route("/&lt;table_name&gt;", methods=["POST", "PUT", "DELETE", "FETCH"])
    def fetch(table_name):
        print("verb: %s, tablename: %s" % (request.method, table_name))
        if request.method == "POST" or request.method == "PUT":
            data = request.get_json(force=True)
            print("data:", data)
            try:
                TableClass = models.get_class_by_tablename(table_name)
                if TableClass == None: raise Exception("Table not found: %s" % table_name)
                if request.method == "POST": #insert data
                    object = TableClass(**data)
                    dbsession.add(object)
                    dbsession.commit()
                else: #update data
                    object = dbsession.query(TableClass).filter_by(**{"id":id}).first()
                    if object == None: raise Exception("No data found.")
                    #object.update(**data)
                    for key in data.keys():
                        setattr(object, key, data[key])
                    #dbsession.add(object)
                    dbsession.commit()
                return jsonify({
                    "status": "success",
                    "id": object.id,
                    })
            except Exception as e:
                return jsonify({
                    "status": "error",
                    "error": str(e),
                    })
        elif request.method == "DELETE":
            try:
                TableClass = models.get_class_by_tablename(table_name)
                if TableClass == None: raise Exception("Table not found: %s" % table_name)
                object = dbsession.query(TableClass).filter_by(**{"id":id}).first()
                if object == None: raise Exception("No data found.")
                dbsession.delete(object)
                dbsession.commit()
                return jsonify({
                    "status": "success",
                    "id": object.id,
                    })
            except Exception as e:
                return jsonify({
                    "status": "error",
                    "error": str(e),
                    })
        elif request.method == "FETCH":
            try:
                data = request.get_json(force=True)
                data = json.loads(data)
                print("data: ", data)
                print("data-type: ", type(data))
                TableClass = models.get_class_by_tablename(table_name)
                if TableClass == None: raise Exception("Table not found: %s" % table_name)

                query = dbsession.query(TableClass).filter_by(**data['where'])
                if 'orderby' in data:
                    for cname in data['orderby'].split(','):
                        reverse = False
                        if cname.endswith(' desc'):
                            reverse = True
                            cname = cname[:-5]
                        elif cname.endswith(' asc'):
                            cname = cname[:-4]
                        print("cname: ", cname)
                        column = getattr(TableClass, cname)
                        if reverse: column = desc(column)
                        query = query.order_by(column)
                if 'limit' in data:
                    query = query.limit(data['limit'])
                    query = query.offset(data['offset'])
                object = query.all()
                data = [object_as_dict(t) for t in object]
                return jsonify({
                    "status": "success", 
                    "data": data
                    })
            except Exception as e:
                return jsonify({
                    "status": "error",
                    "error": str(e),
                    })
        else:
            return jsonify({
                "status": "error", "error": "Unrecognized verb.",
                })

&lt;/figure&gt;

&lt;p&gt;I’ve used a non-standard HTTP method, &lt;code class="highlighter-rouge"&gt;FETCH&lt;/code&gt; for the &lt;code class="highlighter-rouge"&gt;SELECT&lt;/code&gt; action. That’s because if you use the &lt;code class="highlighter-rouge"&gt;GET&lt;/code&gt; method, you aren’t allowed to actually post data (as in actual posting, don’t confuse with &lt;code class="highlighter-rouge"&gt;POST&lt;/code&gt; method) as per the HTTP specification. The other methods, viz &lt;code class="highlighter-rouge"&gt;POST&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;PUT&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;DELETE&lt;/code&gt; are self-apparent and they stand for &lt;code class="highlighter-rouge"&gt;INSERT&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;UPDATE&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;DELETE&lt;/code&gt; actions respectively.&lt;/p&gt;
&lt;p&gt;As you can see, the app makes good use of the sql expression language of sqlalchemy to dynamically query any kind of data, not only using the usual &lt;code class="highlighter-rouge"&gt;where&lt;/code&gt; clause, but also using ordering and pagination (limit/offset) parameters:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    if 'orderby' in data:
        for cname in data['orderby'].split(','):
            reverse = False
            if cname.endswith(' desc'):
                reverse = True
                cname = cname[:-5]
            elif cname.endswith(' asc'):
                cname = cname[:-4]
            print("cname: ", cname)
            column = getattr(TableClass, cname)
            if reverse: column = desc(column)
            query = query.order_by(column)
    if 'limit' in data:
        query = query.limit(data['limit'])
        query = query.offset(data['offset'])

&lt;/figure&gt;

&lt;p&gt;The front-end sends whatever it needs to the back-end using JSON format and the result is also in JSON. For example, the following JSON when posted to &lt;code class="highlighter-rouge"&gt;/user&lt;/code&gt; endpoint using &lt;code class="highlighter-rouge"&gt;FETCH&lt;/code&gt; method, returns the record from user table where &lt;code class="highlighter-rouge"&gt;name&lt;/code&gt; field matches &lt;code class="highlighter-rouge"&gt;admin&lt;/code&gt; and orders the results by email in descending order.&lt;/p&gt;
&lt;figure class="highlight"&gt;
    {"where": {"name":"admin"}, "orderby": "email desc"}

&lt;/figure&gt;

&lt;p&gt;Adding the &lt;code class="highlighter-rouge"&gt;limit&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;offset&lt;/code&gt; clauses to the same can help the front-end with pagination.&lt;/p&gt;
&lt;figure class="highlight"&gt;
    {"where": {"name":"admin"}, "orderby": "email desc", "limit":2, "offset": 2}

&lt;/figure&gt;

&lt;p&gt;Its also pretty trivial to implement user authentication with this design. I haven’t done it in this example for simplicity, but you can find it in the &lt;a href="https://github.com/prahladyeri/tiddly"&gt;github code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All code in this tutorial and on github is &lt;code class="highlighter-rouge"&gt;MIT&lt;/code&gt; licensed and free to use. So, enjoy coding, build your own RESTful CRUD app, and let me know how it goes via comments below!&lt;/p&gt;</content><category term="Flask"></category><category term="Python"></category><category term="SQLAlchemy"></category></entry><entry><title>How to create a Google Drive App in PHP</title><link href="blog/2017/01/how-to-create-google-drive-app-php.html" rel="alternate"></link><published>2017-01-02T04:21:00+05:30</published><updated>2017-01-02T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2017-01-02:blog/2017/01/how-to-create-google-drive-app-php.html</id><summary type="html">&lt;p&gt;This is the second article in the drive series for web programmers that aims to explain how to use the Google Drive API in your web applications to access files/folders on behalf of your logged-in users.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;One of the basic tasks here is to authenticate to google and access …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the second article in the drive series for web programmers that aims to explain how to use the Google Drive API in your web applications to access files/folders on behalf of your logged-in users.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;One of the basic tasks here is to authenticate to google and access the drive on the user’s behalf once they grant permission to your app. This method of authentication is called &lt;a href="https://en.wikipedia.org/wiki/OAuth"&gt;OAuth&lt;/a&gt; and is very much needed for implementing the drive api.&lt;/p&gt;
&lt;p&gt;However, a good documentation to implement this in a backend app, especially a php app is very much lacking. The so called &lt;a href="https://developers.google.com/drive/v3/web/quickstart/php"&gt;quickstart for drive api&lt;/a&gt; and the web based example &lt;a href="https://developers.google.com/api-client-library/php/auth/web-app"&gt;here&lt;/a&gt; show some example code, but what a lot of beginner programmers need is a step-by-step tutorial of how to go about doing it.&lt;/p&gt;
&lt;h3&gt;I: Register a google app by visiting the &lt;a href="https://console.developers.google.com/"&gt;Google API console&lt;/a&gt;:&lt;/h3&gt;
&lt;p&gt;The way the latest version (V3) of drive API works is only through OAuth. It means you cannot put a password or API key inside your code and access the drive files. You need to register your backend app and generate OAuth credentials for the app, so that it can access the drive on the user’s behalf once the user grants permission to the app. So the first step is going to the &lt;a href="https://console.developers.google.com/"&gt;Google API console&lt;/a&gt;, registering the app itself and generating OAuth credentials. The registration process is pretty straightforward, we just select “Create Project” from the dropdown and give a nice name for the project such as &lt;code class="highlighter-rouge"&gt;Drive Example App&lt;/code&gt; in our case.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Register Google App" src="/uploads/old/google-apis/drive_api_steps.png"&gt;&lt;/p&gt;
&lt;h3 id="ii-configure-the-credentials-and-download-the-client_idjson-file"&gt;II: Configure the credentials and download the client_id.json file:&lt;/h3&gt;
&lt;p&gt;This is the credential file that validates to Google who you are (as a developer) and also your app that acts on your behalf. Download and save it as &lt;code class="highlighter-rouge"&gt;client_id.json&lt;/code&gt; in the same directory as your app.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configure Credentials" src="/uploads/old/google-apis/configuration_steps_generic1.png"&gt;&lt;/p&gt;
&lt;h3&gt;III: Write your back-end app:&lt;/h3&gt;
&lt;p&gt;First of all, you have to add the dependency of google-api php library to your project. If you are using composer, all you need to do is add this package to the composer.json:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;quot;require&amp;quot;: {
  &amp;quot;google/apiclient&amp;quot;: &amp;quot;^2.0&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;If you don’t use composer, you can just download the latest version of library from &lt;a href="https://github.com/google/google-api-php-client"&gt;their repo&lt;/a&gt;, and just &lt;code class="highlighter-rouge"&gt;require_once&lt;/code&gt; it in your code like this:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;require_once &amp;#39;/path/to/google-api-php-client/vendor/autoload.php&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;You can follow this pattern for any kind of php project, be it based on Symfony, Laravel, CodeIgniter or even a pure php project. But this tutorial and code example is based on a pure php project.&lt;/p&gt;
&lt;p&gt;The first thing to do now is to handle the home page url (index.php).&lt;/p&gt;
&lt;figure class="highlight"&gt;
    $client = new Google_Client();
    $client-&gt;setAuthConfig('client_id.json');
    $client-&gt;addScope(Google_Service_Drive::DRIVE);

    if (file_exists("credentials.json")) {
        $access_token = (file_get_contents("credentials.json"));
        $client-&gt;setAccessToken($access_token);
        //Refresh the token if it's expired.
        if ($client-&gt;isAccessTokenExpired()) {
            $client-&gt;fetchAccessTokenWithRefreshToken($client-&gt;getRefreshToken());
            file_put_contents($credentialsPath, json_encode($client-&gt;getAccessToken()));
        }
        $drive_service = new Google_Service_Drive($client);
        $files_list = $drive_service-&gt;files-&gt;listFiles(array())-&gt;getFiles(); 
        echo json_encode($files_list);
    } else {
      $redirect_uri = 'http://' . $_SERVER['HTTP_HOST'] . '/oauth2callback.php';
      header('Location: ' . filter_var($redirect_uri, FILTER_SANITIZE_URL));
    }

&lt;/figure&gt;

&lt;p&gt;We first check whether we have the drive access credentials for the user locally stored in a file called credentials.json (not to be confused with client_id.json we downloaded earlier which is for developer credentials). Again, we are assuming a single user scenario here. If your drive app needs to authenticate with multiple users, you’ll have to store separate credentials.json for each logged-in user in the database, and access that through a session or something.&lt;/p&gt;
&lt;p&gt;Further, if credentials aren’t found locally, we direct them to &lt;code class="highlighter-rouge"&gt;/oauth2callback.php&lt;/code&gt;, so google will authenticate them and send us the token for accessing the drive, and after that, we will put that token into the local file, credentials.json and redirect the user back to the index.php. Finally, we call the &lt;code class="highlighter-rouge"&gt;listFiles()&lt;/code&gt; method that displays the list of all files and folders in that user’s drive. Here is the code for &lt;code class="highlighter-rouge"&gt;oauth2callback.php&lt;/code&gt;:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    $client = new Google_Client();
    $client-&gt;setAuthConfigFile('client_id.json');
    $client-&gt;setRedirectUri('http://' . $_SERVER['HTTP_HOST'] . '/oauth2callback.php');
    $client-&gt;addScope(Google_Service_Drive::DRIVE); //::DRIVE_METADATA_READONLY

    if (! isset($_GET['code'])) {
      $auth_url = $client-&gt;createAuthUrl();
      header('Location: ' . filter_var($auth_url, FILTER_SANITIZE_URL));
    } else {
      $client-&gt;authenticate($_GET['code']);
      $access_token = $client-&gt;getAccessToken();
      file_put_contents("credentials.json", json_encode($access_token));

      $redirect_uri = 'http://' . $_SERVER['HTTP_HOST'] . '/';
      header('Location: ' . filter_var($redirect_uri, FILTER_SANITIZE_URL));
    }

&lt;/figure&gt;

&lt;p&gt;Once you have the credentials locally (in the form of &lt;code class="highlighter-rouge"&gt;credentials.json&lt;/code&gt;), you can just use it to access the drive API. Thus, the result of this whole exercise is that only on first page load is the user redirected to google site to authenticate themselves. Once the app has the access token (credentials.json), its no longer required, the drive can be accessed directly by the app from then on. If all goes well, you should be able to see a screen such as this when you test this example app for the first time:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google OAuth Screen" src="/uploads/old/google-apis/oauth_screen_generic.png"&gt;&lt;/p&gt;
&lt;p&gt;I’ll leave the more comprehensive use of this API as an exercise to the reader who wants to develop a more fully featured app out of this. Click the below link to download the source for this example implementation from the Github repo:&lt;/p&gt;
&lt;p&gt;&lt;a class="btn btn-md btn-success" href="https://github.com/prahladyeri/php-drive-example/"&gt; php_drive_example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Note:&lt;/p&gt;
&lt;p&gt;If you are getting an SSL certificate error while testing this on Windows, have a look at &lt;a href="http://stackoverflow.com/questions/29822686/curl-error-60-ssl-certificate-unable-to-get-local-issuer-certificate"&gt;this&lt;/a&gt;.&lt;/p&gt;</content><category term="Google Drive"></category><category term="PHP"></category></entry><entry><title>How to create a Google Drive App in Flask</title><link href="blog/2016/12/how-to-create-google-drive-app-python-flask.html" rel="alternate"></link><published>2016-12-29T04:21:00+05:30</published><updated>2016-12-29T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-12-29:blog/2016/12/how-to-create-google-drive-app-python-flask.html</id><summary type="html">&lt;p&gt;This is the first in a series of articles for web programmers that explain in detail about using the Google Drive API in your web applications to access files/folders on behalf of the users of your application. In my last project, I had to develop a python flask app …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the first in a series of articles for web programmers that explain in detail about using the Google Drive API in your web applications to access files/folders on behalf of the users of your application. In my last project, I had to develop a python flask app for my users that required to access the files stored in their google drive account.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;The major challenge for me was to authenticate to google and access the drive on the user’s behalf once they grant permission to my app. This method of authentication is called &lt;a href="https://en.wikipedia.org/wiki/OAuth"&gt;OAuth&lt;/a&gt; and is very much needed for implementing the drive api.&lt;/p&gt;
&lt;p&gt;However, a good documentation to implement this in a backend app, especially a python web-based app is very much lacking. The so called &lt;a href="https://developers.google.com/drive/v3/web/quickstart/python"&gt;quickstart for drive api&lt;/a&gt; shows some example code, but what I needed was a step-by-step tutorial of how to go about doing it. Since I couldn’t find any such tutorial online, I thought about writing one myself.&lt;/p&gt;
&lt;h3&gt;I: Register a google app by visiting the &lt;a href="https://console.developers.google.com/"&gt;Google API console&lt;/a&gt;:&lt;/h3&gt;
&lt;p&gt;The way the latest version (V3) of drive API works is only through OAuth. It means you cannot put a password or API key inside your code and access the drive files. You need to register your backend app and generate OAuth credentials for the app, so that it can access the drive on the user’s behalf once the user grants permission to the app. So the first step is going to the &lt;a href="https://console.developers.google.com/"&gt;Google API console&lt;/a&gt;, registering the app itself and generating OAuth credentials. The registration process is pretty straightforward, you just select “Create Project” from the dropdown and give a nice name for your project such as &lt;code class="highlighter-rouge"&gt;Flask Drive Example App&lt;/code&gt; in our case.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Register Google App" src="/uploads/old/google-apis/drive_api_steps.png"&gt;&lt;/p&gt;
&lt;h3 id="ii-configure-the-credentials-and-download-the-client_idjson-file"&gt;II: Configure the credentials and download the client_id.json file:&lt;/h3&gt;
&lt;p&gt;This is the credential file that validates to Google who you are (as a developer) and also your app that acts on your behalf. Download and save it as &lt;code class="highlighter-rouge"&gt;client_id.json&lt;/code&gt; in the same directory as the flask app.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configure Credentials" src="/uploads/old/google-apis/configuration_steps.png"&gt;&lt;/p&gt;
&lt;h3&gt;III: Write your back-end app:&lt;/h3&gt;
&lt;p&gt;The most important thing to know before building your app is to install these dependencies:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install flask google-api-python-client
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;You can replace flask with django, pylons or any other framework you use, but this tutorial and code example is based on flask. The principle of accessing the drive api should still apply, so you should be able to make use of this code.&lt;/p&gt;
&lt;p&gt;The first thing to do is create a flask object and handle the home page url. It could in fact be any other url in your app, but in this example, I’ve used the home page url (/) to do the OAuth authentication on behalf of the logged in user.&lt;/p&gt;
&lt;figure class="highlight"&gt;
    app = flask.Flask(__name__)

    @app.route('/')
    def index():
        credentials = get_credentials()
        if credentials == False:
            return flask.redirect(flask.url_for('oauth2callback'))
        elif credentials.access_token_expired:
            return flask.redirect(flask.url_for('oauth2callback'))
        else:
            print('now calling fetch')
            all_files = fetch("'root' in parents and mimeType = 'application/vnd.google-apps.folder'", sort='modifiedTime desc')
            s = ""
            for file in all_files:
                s += "%s, %s&lt;br&gt;" % (file['name'],file['id'])
            return s

&lt;/figure&gt;

&lt;p&gt;We first check whether we have the drive access credentials for the user locally stored in a file. This is done by the &lt;code class="highlighter-rouge"&gt;get_credentials()&lt;/code&gt; function that checks the local access token file credentials.json (not to be confused with client_id.json we downloaded earlier which is for developer credentials). Again, we are assuming a single user scenario here. If your drive app needs to authenticate with multiple users, you’ll have to store separate credentials.json for each logged-in user in the database, and access that through a session or something.&lt;/p&gt;
&lt;p&gt;Further, if credentials aren’t found locally or have expired, we direct them to &lt;code class="highlighter-rouge"&gt;/oauth2callback&lt;/code&gt;, so google will authenticate them and send us the token for accessing the drive, post which, we will put that token into the local file, credentials.json and redirect the user back to this index site. Finally, if the credentials are valid, we call the &lt;code class="highlighter-rouge"&gt;fetch()&lt;/code&gt; function that displays the list of all root folders in that user’s drive along with their IDs. Here is the code for &lt;code class="highlighter-rouge"&gt;oauth2callback&lt;/code&gt;:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    @app.route('/oauth2callback')
    def oauth2callback():
        flow = client.flow_from_clientsecrets('client_id.json',
                scope='https://www.googleapis.com/auth/drive',
                redirect_uri=flask.url_for('oauth2callback', _external=True)) # access drive api using developer credentials
        flow.params['include_granted_scopes'] = 'true'
        if 'code' not in flask.request.args:
            auth_uri = flow.step1_get_authorize_url()
            return flask.redirect(auth_uri)
        else:
            auth_code = flask.request.args.get('code')
            credentials = flow.step2_exchange(auth_code)
            open('credentials.json','w').write(credentials.to_json()) # write access token to credentials.json locally
            return flask.redirect(flask.url_for('index'))

&lt;/figure&gt;

&lt;p&gt;Once you have the credentials locally (in the form of &lt;code class="highlighter-rouge"&gt;credentials.json&lt;/code&gt;), you can just use it to access the drive API. Thus, the result of this whole exercise is that only on first page load is the user redirected to google site to authenticate themselves. Once the app has the access token (credentials.json), its no longer required, the result is displayed directly on the page from then on. If all goes well, you should be able to see a screen such as this when you test this example app for the first time:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Google OAuth Screen" src="/uploads/old/google-apis/oauth_screen.png"&gt;&lt;/p&gt;
&lt;p&gt;I’ve also included the functions to download and upload files to the drive as they will be very useful:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    def download_file(file_id, output_file):
        credentials = get_credentials()
        http = credentials.authorize(httplib2.Http())
        service = discovery.build('drive', 'v3', http=http)
        #file_id = '0BwwA4oUTeiV1UVNwOHItT0xfa2M'
        request = service.files().export_media(fileId=file_id,mimeType='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
        #request = service.files().get_media(fileId=file_id)

        fh = open(output_file,'wb') #io.BytesIO()
        downloader = MediaIoBaseDownload(fh, request)
        done = False
        while done is False:
            status, done = downloader.next_chunk()
            #print ("Download %d%%." % int(status.progress() * 100))
        fh.close()
        #return fh

    def update_file(file_id, local_file):
        credentials = get_credentials()
        http = credentials.authorize(httplib2.Http())
        service = discovery.build('drive', 'v3', http=http)
        # First retrieve the file from the API.
        file = service.files().get(fileId=file_id).execute()
        # File's new content.
        media_body = MediaFileUpload(local_file, resumable=True)
        # Send the request to the API.
        updated_file = service.files().update(
            fileId=file_id,
            #body=file,
            #newRevision=True,
            media_body=media_body).execute()

&lt;/figure&gt;

&lt;hr&gt;
&lt;p&gt;I’ll leave the more comprehensive use of these functions as an exercise to the reader who wants to develop a more fully featured app out of this. Click the below link to download the &lt;code class="highlighter-rouge"&gt;flask_drive_example.py&lt;/code&gt; script for this example implementation from the Github gist:&lt;/p&gt;
&lt;p&gt;&lt;a class="btn btn-md btn-success" href="https://gist.githubusercontent.com/prahladyeri/0b92b9ca837a0f5474c732876220db78"&gt; flask_drive_example.py&lt;/a&gt;&lt;/p&gt;</content><category term="Flask"></category><category term="Google Drive"></category><category term="Python"></category></entry><entry><title>How to create a screencast in Xubuntu using ffmpeg</title><link href="blog/2016/07/how-to-create-screencast-xubuntu.html" rel="alternate"></link><published>2016-07-19T04:21:00+05:30</published><updated>2016-07-19T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-07-19:blog/2016/07/how-to-create-screencast-xubuntu.html</id><summary type="html">&lt;p&gt;In this article, I’m going to describe how to create a desktop screencast recording with or without audio in Xubuntu 16.04. With little changes, however, it should work on other distros too.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;The first thing to do is to ensure that your headphone microphone is enabled in Xubuntu …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this article, I’m going to describe how to create a desktop screencast recording with or without audio in Xubuntu 16.04. With little changes, however, it should work on other distros too.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;The first thing to do is to ensure that your headphone microphone is enabled in Xubuntu audio settings. For some reasons, Xubuntu doesn’t seem to do this by default. Just click that tray icon top-right corner and click on &lt;code class="highlighter-rouge"&gt;Sound Settings&lt;/code&gt;. Then click on &lt;code class="highlighter-rouge"&gt;Input Devices&lt;/code&gt; tab and select &lt;code class="highlighter-rouge"&gt;Headset Microphone&lt;/code&gt; or something from the list, and unmute the device by clicking the grey color audio icon:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Xubuntu Mic Unmute" src="/uploads/old/xubuntu_mic_unmute.png"&gt;&lt;/p&gt;
&lt;p&gt;And of course, you’ll need &lt;code class="highlighter-rouge"&gt;ffmpeg&lt;/code&gt; to do this, its a small command line audio utility in linux. Its only a &lt;code class="highlighter-rouge"&gt;sudo apt-get&lt;/code&gt; away in case you don’t have it already. After that, all you have to do is run this command:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ffmpeg -video_size 1024x767 -framerate 25 -f x11grab -i :0.0+0,0 -f alsa -ac 2 -i default output.mkv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;To stop the screen recording, just press &lt;code class="highlighter-rouge"&gt;Ctrl+C&lt;/code&gt;. This command uses the &lt;code class="highlighter-rouge"&gt;alsa&lt;/code&gt; module to record audio. The &lt;code class="highlighter-rouge"&gt;-ac 2&lt;/code&gt; parameter specifies the audio channel (stereo as opposed to mono). If you want, you can also specify an audio sampling rate using &lt;code class="highlighter-rouge"&gt;-ar&lt;/code&gt; option which is usually 44100 by default. The &lt;code class="highlighter-rouge"&gt;-i default&lt;/code&gt; refers to the default available audio device. It usually works, but in case it doesn’t, you can specify the exact input device you want to use. In order to do that, run this command:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;arecord -L
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;And you will get an output such as this one:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dmix&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;CARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DEV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;HDA&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ALC3234&lt;/span&gt; &lt;span class="n"&gt;Analog&lt;/span&gt;
    &lt;span class="n"&gt;Direct&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;mixing&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
&lt;span class="n"&gt;dsnoop&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;CARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DEV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;HDA&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ALC3234&lt;/span&gt; &lt;span class="n"&gt;Analog&lt;/span&gt;
    &lt;span class="n"&gt;Direct&lt;/span&gt; &lt;span class="n"&gt;sample&lt;/span&gt; &lt;span class="n"&gt;snooping&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt;
&lt;span class="n"&gt;hw&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;CARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DEV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;HDA&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ALC3234&lt;/span&gt; &lt;span class="n"&gt;Analog&lt;/span&gt;
    &lt;span class="n"&gt;Direct&lt;/span&gt; &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="n"&gt;without&lt;/span&gt; &lt;span class="n"&gt;any&lt;/span&gt; &lt;span class="n"&gt;conversions&lt;/span&gt;
&lt;span class="n"&gt;plughw&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;CARD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;DEV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="n"&gt;HDA&lt;/span&gt; &lt;span class="n"&gt;Intel&lt;/span&gt; &lt;span class="n"&gt;PCH&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ALC3234&lt;/span&gt; &lt;span class="n"&gt;Analog&lt;/span&gt;
    &lt;span class="n"&gt;Hardware&lt;/span&gt; &lt;span class="n"&gt;device&lt;/span&gt; &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;software&lt;/span&gt; &lt;span class="n"&gt;conversions&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;In the above, you can see the plugged-in available sound card at the end. So you can take that device and specify it in this way instead of the &lt;code class="highlighter-rouge"&gt;default&lt;/code&gt; device:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ffmpeg -video_size 1024x767 -framerate 25 -f x11grab -i :0.0+0,0 -f alsa -ac 2 -i plughw:CARD=PCH,DEV=0 output.mkv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;If you don’t want audio in the screencast, however, then omit the alsa module and just run this instead:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ffmpeg -video_size 1024x767 -framerate 25 -f x11grab -i :0.0+0,0 output.mkv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;I’ve used other screencasting software in Linux before such as the &lt;code class="highlighter-rouge"&gt;RecordMyDesktop&lt;/code&gt; tool and the built-in &lt;code class="highlighter-rouge"&gt;Ctrl+Shift+Alt+R&lt;/code&gt; screencasting in GNOME. But this method of using &lt;code class="highlighter-rouge"&gt;ffmpeg&lt;/code&gt; was what I found to be the most speedy and configurable. Try it and do let me know how your screencasting goes!&lt;/p&gt;</content><category term="Linux"></category><category term="Xubuntu"></category></entry><entry><title>How to Unbrick and revive a totally lifeless Xiaomi Mi-Pad</title><link href="blog/2016/07/how-to-unbrick-lifeless-xiaomi-mi-pad.html" rel="alternate"></link><published>2016-07-13T04:21:00+05:30</published><updated>2016-07-13T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-07-13:blog/2016/07/how-to-unbrick-lifeless-xiaomi-mi-pad.html</id><summary type="html">&lt;p&gt;Last week, my brand new Xiaomi Mi-Pad arrived via Flipkart and no sooner did I have it in my hands, I started installing useful apps like Greenify, ES File Explorer, etc. Two days went by and I was disappointed to learn that it doesn’t support a USB Dongle (Data …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last week, my brand new Xiaomi Mi-Pad arrived via Flipkart and no sooner did I have it in my hands, I started installing useful apps like Greenify, ES File Explorer, etc. Two days went by and I was disappointed to learn that it doesn’t support a USB Dongle (Data Card) which is a very common method of Internet access in India. The only way I could have it was to root the tablet. And it was while rooting using SuperSU app that I foolishly selected a wrong click and ended up bricking my brand new tablet.&lt;!--more--&gt;&lt;/p&gt;
&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;It was a &lt;em&gt;hard brick&lt;/em&gt;, meaning my tablet showed no signs of life when switched on or connected to a PC through a USB cable. Had it been a &lt;em&gt;soft brick&lt;/em&gt;, meaning that I were able to boot to MIUI Recovery by pressing Power+UpVolume or to FastBoot Recovery by pressing Power+DnVolume button, it would have been easy to recover. But my tablet was totally dead. Even after charging for next 6 hours, all it did was light up a black LED screen for a second or two and then vanished for any combination of those buttons.&lt;/p&gt;
&lt;p&gt;The problem was that the wrong click that I made had caused the tablet bootloader to be corrupted. And in the android world, if the bootloader is lost, then your device is literally as useful as a brick! Unlike 8086 PCs, android tablets don’t have a hard-wired BIOS to recover things from, the bootloader is as good as the BIOS.&lt;/p&gt;
&lt;h2&gt;The Research&lt;/h2&gt;
&lt;p&gt;Now obviously, I was disappointed and annoyed. After spending ₹10,999 on a brand new tablet, this was not what I was hoping for. Getting service from a Xiaomi service center was not an option as they are very rare in India. Besides, OEMs hardly provide warranty/support to people who try and root their devices, do they? So naturally, I had to myself find a way out of this. My research finally led me to a post by a Russian hacker who had successfully revived the tablet from this very situation. In this article, I’ll note down exactly what steps I had taken to revive it and hope that someone might find it useful.&lt;/p&gt;
&lt;h2&gt;The Solution&lt;/h2&gt;
&lt;p&gt;Though the solution is easy and straight-forward, there are some tricky areas where you might run into trouble. If you don’t have the confidence to open up an electronic device using a screwdriver or flash a stock ROM, just say quits and if possible, ask help from someone you know who is used to do it. Basically, the process involves this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the back-cover by separating it from the screen (fingernails or a sharp object will do) and unscrew the plastic panel that covers the top area of the motherboard.&lt;/li&gt;
&lt;li&gt;Disconnect the battery by slowly pulling the power belt (using a flat-head screwdriver or any sharp object).&lt;/li&gt;
&lt;li&gt;Connect the USB cable to Mi-Pad end (but not the PC end).&lt;/li&gt;
&lt;li&gt;Create a short circuit between the two tiny pads inside the MicroSD card slot using a metal object or wire.&lt;/li&gt;
&lt;li&gt;Connect the USB cable to the PC end.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If done properly, the PC will detect a &lt;em&gt;Nvidia Boot Recovery for Mobile&lt;/em&gt; USB device and then you can flash your stock ROM using Xiaomi’s flashing software, Mi Flash Tool, thus putting the life back into your tablet.&lt;/p&gt;
&lt;h2&gt;The Magic&lt;/h2&gt;
&lt;p&gt;The most tricky and magical aspect of this whole process is the short-circuiting in step four. Firstly, it is not easily diagnosable. The Nvidia USB driver is in fact detected by the PC even if you don’t create the short-circuit (but the battery needs to be disconnected of course), but then it will disappear instantly and you won’t get the time to flash your stock ROM. For some unknown laws of electricity (or maybe the laws coded inside this Nvidia driver), the short-circuit may not work instantly the first time. You’ll create the short-circuit, connect to the USB port and hear the Windows beep sound for USB connection, but moments later you will hear another beep of disconnection. If that happens, you’ll have to disconnect the USB cable and repeat from step-4: Create the short-circuit again and reconnect to the USB port - I had to do this about 50 times before the connection was stable enough for me to flash the ROM.&lt;/p&gt;
&lt;p&gt;Some forum posts advice you to plug in the power belt at exactly the same time as the USB connection is detected in the PC. However, I’ve found that its not true. Not once did I put the power belt back in the whole process until the ROM had been flashed completely.&lt;/p&gt;
&lt;h2&gt;The Weapon&lt;/h2&gt;
&lt;p&gt;You can use any metallic object to create the short circuit, even a tiny wire could be used. The important thing is that those two minuscule pads inside the MicroSD slot are connected by a metal. Personally, I used this tiny pin that came with the booklet along with the Mi-Pad itself!&lt;/p&gt;
&lt;p&gt;&lt;img alt="Short circuit on the two pads inside the MicroSD slot" class="size-large" src="/uploads/old/short.jpg"&gt;&lt;/p&gt;
&lt;p&gt;All I did was place that pin inside the MicroSD slot, so it created a bridge on top of those two pads, and supported the pin using any available object (in this case a screwdriver).&lt;/p&gt;
&lt;p&gt;You’ll also need a 2.0mm screwdriver to open the back-panel above the motherboard. Please remember that opening those screws are going to void your warranty (which is going to happen in any case since you either tried to root or used the &lt;code class="highlighter-rouge"&gt;dd&lt;/code&gt; command to rewrite partitions in order to reach this stage!).&lt;/p&gt;
&lt;p&gt;On your Windows PC, you need the following installed:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Latest version of Mi Flash Tool (Can be downloaded &lt;a href="http://xiaomitips.com/download/miui-rom-flashing-tool/"&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Latest version of Mi Phone Manager PC Suite for the Nvidia drivers (Can be downloaded &lt;a href="http://en.miui.com/thread-92720-1-1.html"&gt;here&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Alternatively, you can download the whole bundled software from &lt;a href="https://androidmtk.com/download-xiaomi-mi-flash-tool"&gt;here&lt;/a&gt; that comes with Mi Flash Tool, NVidia Drivers and ADB Drivers too.&lt;/p&gt;
&lt;p&gt;You’ll also need to download the latest MIUI stock ROM for Mi-Pad from &lt;a href="http://en.miui.com/download-229.html"&gt;here&lt;/a&gt; and extract somewhere on your PC to flash it later.&lt;/p&gt;
&lt;p&gt;Once your short-circuit works and the connection stays stable, waste no more time. Just fire up the Mi Flash tool and select the path to the ROM image you just extracted and click the flash button. Once the flash is successful, assemble back your Mi-Pad and on pressing the power button, you should see this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="MI-Pad Recovered" src="/uploads/old/MIUI.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Keep a cool mind and do it, it can be done! If you can’t do it, try and find a mobile repair shop nearby or catch a tech enthusiast in your circle who can do it.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://xiaomi.eu/community/threads/mipad-is-dead-brick.25162/page-3#post-228543"&gt;Post by original Russian Hacker (BogNik) who did it first&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://xiaomitips.com/download/miui-rom-flashing-tool/"&gt;Latest Mi Flash Tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.miui.com/thread-92720-1-1.html"&gt;Latest Mi Phone Manager PC Suite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://androidmtk.com/download-xiaomi-mi-flash-tool"&gt;Latest Bundled Software - Flash Tool with Nvidia and ADB Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.miui.com/download-229.html"&gt;Latest MIUI stock ROM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Android"></category><category term="Hardware"></category><category term="Xiaomi"></category></entry><entry><title>Was buying LinkedIn a good decision by Microsoft?</title><link href="blog/2016/06/was-buying-linkedin-a-good-decision-by-microsoft.html" rel="alternate"></link><published>2016-06-29T04:21:00+05:30</published><updated>2016-06-29T04:21:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-06-29:blog/2016/06/was-buying-linkedin-a-good-decision-by-microsoft.html</id><summary type="html">&lt;p&gt;A few days ago, on 13th of June, Microsoft bought LinkedIn for around \$26 billion at \$196 a share. So, was this buying a good decision? Even before thinking about that, lets try to understand why was LinkedIn sold to Microsoft in the first place. After all, a company proclaiming …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A few days ago, on 13th of June, Microsoft bought LinkedIn for around \$26 billion at \$196 a share. So, was this buying a good decision? Even before thinking about that, lets try to understand why was LinkedIn sold to Microsoft in the first place. After all, a company proclaiming to remain an independent entity doesn’t liquidate itself all of a sudden.&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;LinkedIn’s community was dwindling&lt;/h3&gt;
&lt;p&gt;The primary asset of any company working on ad-revenue model is its &lt;em&gt;community&lt;/em&gt;. Community creates interesting content and readers read and share that content and thus the ad-revenue model works. In case of Facebook, its the timeline content that the friends network keeps generating (and to some extent, also the Facebook groups which generate some intellectual discussions). In case of Twitter, its the tweet feed, for Reddit, its the subreddits where Redditors post links and comments and so on.&lt;/p&gt;
&lt;p&gt;LinkedIn’s position was very uncomfortable with regard to this community factor. Their only interesting content was (and still is) the resumes that individual users post. However, that factor alone is not enough to keep the audience engaged for a lot of time in order for the ad-revenue model to work. Sure enough, they also have this thing called “LinkedIn Groups” which was a very good content stream earlier. I remember that I used to have great intellectual discussions on the VB.NET group somewhere around 2011. But LinkedIn seems to have neglected this content stream over the years which has cost them their community. Nowadays, these groups are full of distracting ads, promotions and other useless content:&lt;/p&gt;
&lt;p&gt;&lt;img alt="LinkedIn Groups" class="size-large" src="/uploads/old/LinkedIn_Groups.png"&gt;\
&lt;em&gt;Courtesy: LinkedIn&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the groups are not at all interesting any more. If LinkedIn had paid some attention to this content stream earlier and ensured its continuity by way of moderation and quality control (like Reddit, Voat, Facebook, et al do), it was quite possible that their ad-revenue may not have fallen at all and they may not have even faced the need to get acquired by Microsoft! Which brings us to the next point.&lt;/p&gt;
&lt;h3&gt;LinkedIn’s ad business was slowing down&lt;/h3&gt;
&lt;p&gt;As a &lt;a href="http://www.recode.net/2016/6/13/11920416/linkedin-acquisition-microsoft-reasons"&gt;lot of analysts now say&lt;/a&gt; that LinkedIn’s ad business was slowing down which was a natural outcome of their lack of paying attention to the community factor that was mentioned above. As the linked source says:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;When LinkedIn reported Q4 earnings earlier in February, one of the concerns was that its ad business grew just 20 percent for the quarter year over year; that compared to growth of 56 percent in the same quarter the year before. Research firm eMarketer predicted LinkedIn’s U.S. digital ad revenue would fall from 35 percent growth in 2015 to less than 10 percent growth this year.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The problem here was that there was no &lt;em&gt;wow&lt;/em&gt; factor with LinkedIn that could have kept the readers glued to the content. And as we all know, unless readers are kept glued to the content, ad-revenue naturally dwindles!&lt;/p&gt;
&lt;h3&gt;LinkedIn’s growth was a concern&lt;/h3&gt;
&lt;p&gt;Like I said, LinkedIn worked primarily on ad-revenue model. Their so-called premium subscription model worked to an extent, but the most that could do is pay off your hosting fees and other small bills. You can’t bank on subscription model to pay off your salaries and other bills, especially when you are as large a company as LinkedIn. Barring that, there was no scope for growth, though if the LinkedIn management was any creative, they could have used their existing large social network in multiple ways to increase growth (ways that now Microsoft will have to implement in order to salvage its LinkedIn Investment):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Moderation and Quality Control of Forums: This is actually a no-brainer and doesn’t even cost a lot. As I said, LinkedIn Groups had a great potential to grow, all LinkedIn had to do was ask volunteers for moderating the groups! Reddit mods and admins, for example, are resourceful folks who gladly contribute their time freely to manage and administer the subreddit content. If LinkedIn had done this much earlier, their ad-revenue would have spiraled up with good quality content of the forums.&lt;/li&gt;
&lt;li&gt;Value Added Services: The premium subscription wasn’t that big a deal, all it offered to subscribers was the ability to see a bit more stats like who else had viewed their profile pages and how many times, etc. But LinkedIn could have used their resourceful software developers to provide a lot more things like a chat service, specialized apps such as a job tracker, an outsourcing app/module (such as Upwork), etc. These services may not have directly paid off initially, but when clubbed with premium subscription model, they would have had a lot more to offer on the table with that.&lt;/li&gt;
&lt;li&gt;Tie-ups with job sites: A site like LinkedIn could have made an excellent partner to one of the job sites like Monster.com or Naukri.com. These sites have loads of recruiters searching for worthy candidates. LinkedIn has other part of the equation: A database of such candidates categorized and sorted by their skills, resources, experience details and connections! Both of them could have made an excellent pair and I’m sure Microsoft was thinking along the same lines when it thought of acquiring LinkedIn.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Was it a right decision?&lt;/h3&gt;
&lt;p&gt;Coming back to our original question, was buying LinkedIn a correct decision by Microsoft? Only time will tell (and the stock market price of course!). Like I said, I’m not a fortune teller, but those in the trade of stock markets analyses know very well that technical analysis comes very useful in predicting the future of the business than fundamental analysis. The people who invest billions in stock markets are some of the smartest folks on the planet who have access to the most up-to-date market information (a ton of more information than what this article contains!) and the best resources to analyze that information. So, the bid price of these investors reflect all that up-to-date information and this is what the NASDAQ monthly chart of LinkedIn says:&lt;/p&gt;
&lt;p&gt;&lt;img alt="LinkedIn monthly chart on NASDAQ" class="size-large" src="/uploads/old/LinkedIn_Chart.png"&gt;\
&lt;em&gt;Courtesy: Yahoo Finance&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As you can see, LinkedIn is presently being traded at \$189.50 which is a lot less than what Microsoft bid for LinkedIn (\$196 per share). In other words, the market doesn’t think that Microsoft’s decision to purchase LinkedIn was right otherwise it would have been ready to bid a lot more than \$196 per share, not less. This, of course, is the short-term view. In the long-term, its quite possible that Microsoft might do some structural changes to LinkedIn (like the ones I described earlier) and thus improve LinkedIn’s growth and profitability. But will Microsoft actually do it, or is LinkedIn just going to be put inside a fancy showcase by a large corporation? That, only time will tell!&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.recode.net/2016/6/13/11920416/linkedin-acquisition-microsoft-reasons"&gt;http://www.recode.net/2016/6/13/11920416/linkedin-acquisition-microsoft-reasons&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="LinkedIn"></category><category term="Microsoft"></category></entry><entry><title>How to deal with frequent disconnects of 3G USB Dongle on Linux Desktop</title><link href="blog/2016/06/how-to-deal-with-frequent-disconnects-of-3g-usb-dongle-on-linux-desktop.html" rel="alternate"></link><published>2016-06-28T20:00:00+05:30</published><updated>2016-06-28T20:00:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-06-28:blog/2016/06/how-to-deal-with-frequent-disconnects-of-3g-usb-dongle-on-linux-desktop.html</id><summary type="html">&lt;p&gt;One of the major issues on linux desktop these days has to do with 3G USB dongles/modems. In many countries like India, a USB dongle still remains a major way to access the Internet. The latest versions of &lt;code class="highlighter-rouge"&gt;network-manager&lt;/code&gt; has solved most of the issues relating to the basic …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the major issues on linux desktop these days has to do with 3G USB dongles/modems. In many countries like India, a USB dongle still remains a major way to access the Internet. The latest versions of &lt;code class="highlighter-rouge"&gt;network-manager&lt;/code&gt; has solved most of the issues relating to the basic recognition of these modems, but one major irritant still remains on Ubuntu 16.04 and a few other distros.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;It so happens that many a times, the connection entirely vanishes from the network-manager applet menu on the top right. For example, if you hibernate your laptop and then wake it, the menu is no longer there. However, if you manually take out the dongle and re-insert, the modem is recognized and the menu reappears. If you want to avoid that manual re-insertion and want to do a “soft reset” instead, here is what you can do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Send a reset signal to your usb modem:
    ::: {.highlighter-rouge}
    &lt;code&gt;{.highlight}
     sudo usb_modeswitch -v 12d1 -p 1496 -R&lt;/code&gt;
    :::&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Send a modeswitch signal to your usb modem:
    ::: {.highlighter-rouge}
    &lt;code&gt;{.highlight}
     sudo usb_modeswitch -v 12d1 -p 1496 -J&lt;/code&gt;
    :::&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The parameters, &lt;code class="highlighter-rouge"&gt;-v&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;-p&lt;/code&gt; stand for vendor code and product code respectively and you can find them by running &lt;code class="highlighter-rouge"&gt;lsusb&lt;/code&gt; command. For example, the below entry is for vendor code &lt;code class="highlighter-rouge"&gt;12d1&lt;/code&gt; (Huawei) and the product code is &lt;code class="highlighter-rouge"&gt;1496&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Bus 001 Device 004: ID 12d1:1496 Huawei Technologies Co., Ltd. Broadband stick
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;Please remember that for modeswitch signal, the parameter -J is vendor specific and works for Huawei modems only, please run &lt;code class="highlighter-rouge"&gt;man usb-modeswitch&lt;/code&gt; to find out your vendor specific modeswitch control parameter. For instance, its -O for Sony and -L for Cisco control parameter.&lt;/p&gt;
&lt;p&gt;Of course, once you try these commands and find that they are working, you can add them as a shortcut to your &lt;code class="highlighter-rouge"&gt;~/.bashrc&lt;/code&gt; file. Something like this:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias &amp;quot;reset_huawei=sudo usb_modeswitch -v 12d1 -p 1496 -R&amp;quot;
alias &amp;quot;modeswitch_huawei=sudo usb_modeswitch -v 12d1 -p 1496 -J&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;Now, all you need to do is run &lt;code class="highlighter-rouge"&gt;reset_huawei &amp;amp;&amp;amp; modeswitch_huawei&lt;/code&gt; and that’s it! No need to manually re-insert the dongle anymore.&lt;/p&gt;</content><category term="Hardware"></category><category term="Linux"></category></entry><entry><title>List of free online programming courses (MOOC) offering FREE certificates of accomplishment</title><link href="blog/2016/06/list-of-free-mooc-free-certificates-transcripts.html" rel="alternate"></link><published>2016-06-07T15:00:00+05:30</published><updated>2016-06-07T15:00:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-06-07:blog/2016/06/list-of-free-mooc-free-certificates-transcripts.html</id><summary type="html">&lt;p&gt;This post is inspired by the &lt;a href="https://courserajunkie.wordpress.com/2015/05/26/courseras-free-statements-of-accomplisments-die-a-quiet-death/"&gt;Coursera Junkie post&lt;/a&gt; by Kathryn last year that happened to invite the ire of lots of learners interested in MOOC (Massive Online Open Courses). Whilst I was observing the comment chain in that post, I had never bothered to actually take the time to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This post is inspired by the &lt;a href="https://courserajunkie.wordpress.com/2015/05/26/courseras-free-statements-of-accomplisments-die-a-quiet-death/"&gt;Coursera Junkie post&lt;/a&gt; by Kathryn last year that happened to invite the ire of lots of learners interested in MOOC (Massive Online Open Courses). Whilst I was observing the comment chain in that post, I had never bothered to actually take the time to research any MOOC courses that offered free certificates or statements of accomplishment. But a few months ago, my once favorite online academy, &lt;a href="http://edx.org/"&gt;edX.org&lt;/a&gt; had just crossed a line by starting to charge money for their certificates, thus shutting down the last zion of open education left for the learners. And because of this, I felt the need to start researching the alternatives.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Now, I know that lots of critics would be throwing this “free rider” argument against me saying that why should I bother about a few dollars worth if I’m getting a verified certificate, or that paying for a certificate somehow increases the “value” of the course, etc. However, you fail to understand that ultimately, the question is not about the certificate (which is just a piece of paper, anyways). Its really about the learnings and insights about a subject that you take away from a MOOC course. Its also about the collaboration and interaction with other co-students on the academy who take the course along with you. The PDF certificate or transcript is just a downloadable thing that you use to improve your LinkedIn profile, but more importantly, its an &lt;em&gt;acknowledgement&lt;/em&gt; by the academy that you underwent that course.&lt;/p&gt;
&lt;p&gt;Now, as an online academy, if you are charging money to give us that acknowledgement, you are no academy but just a profiteer who is running a business. The moment that money comes in the picture, an academy turns into a business and its education quality starts to deteriorate. Right to education, of all things, MUST be based on merit. You can’t bar someone’s entry to education based on the financial ability. This same concept of &lt;em&gt;merit&lt;/em&gt; also applies to Open Source software development. Every contributing developer is invited to the project on the basis of &lt;em&gt;merit&lt;/em&gt; alone. Further, every commit, every feature request and every decision is based on merit and voting, no company can buy its way through a FOSS project, the Linux kernel project is the proof of that!&lt;/p&gt;
&lt;p&gt;If Coursera and edX stopped being academies, and turned into profit-making entities, let them be - there is no dearth of online learning resources! Below are some MOOC courses that provide free transcripts or certificate of accomplishments upon completion (In future, if any of these academies turn out to be like Coursera/edX, rest assured, they will be removed from this list!):&lt;/p&gt;
&lt;p&gt;Course Name                                                                                                            Start Date&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://learn.saylor.org/course/view.php?id=6"&gt;CS101: Introduction to Computer Science I&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;        self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=64"&gt;CS102: Introduction to Computer Science II&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;      self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=65"&gt;CS107: C++ Programming&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                          self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=66"&gt;CS201: Elementary Data Structures&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;               self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=67"&gt;CS202: Discrete Structures&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                      self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=71"&gt;CS301: Computer Architecture&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                    self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=73"&gt;CS302: Software Engineering&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                     self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=72"&gt;CS303: Algorithms&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                               self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=74"&gt;CS304: Compilers&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                                self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=75"&gt;CS305 Web Development&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                           self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=94"&gt;CS401: Operating Systems&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                        self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=84"&gt;CS402: Computer Communications and Networks&lt;/a&gt;                          self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=93"&gt;CS403: Introduction to Modern Database Systems&lt;/a&gt;                       self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=79"&gt;CS404: Programming Languages&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                    self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=96"&gt;CS405: Artificial Intelligence&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                  self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=92"&gt;CS406: Information Security&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                     self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=81"&gt;CS408: Advanced Artificial Intelligence&lt;/a&gt;                              self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=90"&gt;CS409: Cryptography&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                             self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=91"&gt;CS410: Advanced Databases&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;                       self paced
  &lt;a href="https://learn.saylor.org/course/view.php?id=95"&gt;CS412: Mobile Applications Development&lt;/a&gt; via &lt;em&gt;Saylor Academy&lt;/em&gt;          self paced
  &lt;a href="https://www.udemy.com/learn-html5-programming-from-scratch/"&gt;Learn HTML5 Programming From Scratch&lt;/a&gt; via &lt;em&gt;Udemy&lt;/em&gt;        self paced
  &lt;a href="http://online.stanford.edu/course/behind-and-beyond-big-data"&gt;Behind and Beyond Big Data&lt;/a&gt; via &lt;em&gt;online.stanford.edu&lt;/em&gt;   April 18, 2016
  &lt;a href="http://online.stanford.edu/course/careers-media-technology"&gt;Careers in Media Technology&lt;/a&gt; via &lt;em&gt;online.stanford.edu&lt;/em&gt;    February 2, 2016
  &lt;a href="https://www.open2study.com/courses/concepts-in-game-development"&gt;Concepts in Game Development&lt;/a&gt; via &lt;em&gt;open2study.com&lt;/em&gt;   30/05/2016&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Provision of free certificate transcripts/statement of accomplishments in each Academy:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;=&gt; &lt;a href="https://sayloracademy.zendesk.com/hc/en-us/articles/210853008-About-course-completion-certificates"&gt;Saylor Academy provides free certificate of completion upon passing the final exam of every course at learn.saylor.org&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A free certificate of completion is available for every course at learn.saylor.org by passing a course’s final exam with 70% or better. Your digital certificate can be shared privately or publicly, linked to from other websites, downloaded to a PDF file, and printed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;=&gt; &lt;a href="https://support.udemy.com/customer/en/portal/articles/1497724-certificate-of-completion?b_id=11486"&gt;Udemy offers certificate of completion for many of its courses&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most courses offer a certificate of completion. When all lectures have been completed, a gold or green trophy will appear, signifying that the certificate of completion is ready for download. Click on the trophy to view the certificate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;=&gt; &lt;a href="http://www.openuped.eu/mooc-features/47-recognition-options"&gt;OpenupED has multiple recognition options. Apart from a free badge/certificate, some courses also offer official formal certificate by the university.&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Always a badge and/or a certificate. I.e. you have the opportunity to get a badge or a certificate of course completion for free (as evidence of completion).&lt;/p&gt;
&lt;p&gt;FormalCertificateIn addition the majority of OpenupEd MOOCs provide the possibility to obtain a formal certificate&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;=&gt; &lt;a href="http://online.stanford.edu/courses/allcourses"&gt;Stanford.edu offers a statement of accomplishments for some of their “In Session” courses&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Session courses offer a Statement of Accomplishment issued by the instructor upon successful completion.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;=&gt; &lt;a href="https://www.open2study.com/howitworks"&gt;open2study.com offers a free downloadable certificate of accomplishment upon course completion&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once the course finishes, you will be able to download a certificate of achievement, along with your final grades, via My Study Centre.&lt;/p&gt;
&lt;/blockquote&gt;</content></entry><entry><title>Ten useful LibreOffice Macro Recipes</title><link href="blog/2016/02/ten-libreoffice-macro-recipes.html" rel="alternate"></link><published>2016-02-26T02:23:00+05:30</published><updated>2016-02-26T02:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-02-26:blog/2016/02/ten-libreoffice-macro-recipes.html</id><summary type="html">&lt;p&gt;Macros are a great way to automate tasks in Spreadsheet applications, be it the good old Microsoft Excel or the equally efficient FOSS alternative, LibreOffice Calc. The best thing about macros is that they are written in a very easy language called &lt;a href="https://en.wikipedia.org/wiki/BASIC"&gt;Basic&lt;/a&gt;.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="LibreOffice Logo" src="/uploads/old/libreofficeCalcLogo.jpg"&gt;\
&lt;small&gt;© The LibreOffice Project&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;As it’s very …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Macros are a great way to automate tasks in Spreadsheet applications, be it the good old Microsoft Excel or the equally efficient FOSS alternative, LibreOffice Calc. The best thing about macros is that they are written in a very easy language called &lt;a href="https://en.wikipedia.org/wiki/BASIC"&gt;Basic&lt;/a&gt;.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="LibreOffice Logo" src="/uploads/old/libreofficeCalcLogo.jpg"&gt;\
&lt;small&gt;© The LibreOffice Project&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;As it’s very name suggests, Basic is a lenient programming language actually designed with ease of use in mind. For instance, upper/lower case doesn’t matter for variable names or keywords (&lt;code class="highlighter-rouge"&gt;if/IF&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;sub/Sub&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;function/Function&lt;/code&gt; are equivalents), function braces are optional like Ruby and type-conversion happens automatically. This makes Basic equally useful for both power users and programmers. A LibreOffice Basic macro is just a function or sub procedure which does a specific useful task. In this tutorial, we will see ten such useful macros that can help you with various automation tasks.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="#howto"&gt;Recipe 0: How to create a LibreOffice macro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#readcell"&gt;Recipe 1: Read cell contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#changecell"&gt;Recipe 2: Change cell contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#searchandrepl"&gt;Recipe 3: Search and Replace text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#regex"&gt;Recipe 4: Regular Expressions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#showopendialog"&gt;Recipe 5: Show File-open dialog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#showsavedialog"&gt;Recipe 6: Show File-save dialog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#readfromfiles"&gt;Recipe 7: File I/O: Read from files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#writetofiles"&gt;Recipe 8: File I/O: Write to files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#loadfromcsv"&gt;Recipe 9: Load data from a CSV file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#copytoclipboard"&gt;Recipe 10: Copy text to clipboard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="recipe-0-how-to-create-a-libreoffice-macro-"&gt;Recipe 0: How to create a LibreOffice macro []{#howto}&lt;/h2&gt;
&lt;p&gt;Whilst macros can be created in Writer and Draw too, in this specific tutorial, we will restrict ourselves to spreadsheets (Calc). To create a macro, just open the spreadsheet in LibreOffice and go to &lt;code class="highlighter-rouge"&gt;Tools-&amp;gt;Macros-&amp;gt;Organize Macros-&amp;gt;LibreOffice Basic&lt;/code&gt; menu. After that, if you want to create a macro specific to your spreadsheet (as usually is the case), expand your spreadsheet file on left and select &lt;code class="highlighter-rouge"&gt;Standard&lt;/code&gt; and click &lt;code class="highlighter-rouge"&gt;New&lt;/code&gt;. This will open the LibreOffice Macro Editor as a separate window.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Macros Menu" src="/uploads/old/macros_menu.png"&gt;&lt;/p&gt;
&lt;h2 id="recipe-1-read-cell-contents-"&gt;Recipe 1: Read cell contents []{#readcell}&lt;/h2&gt;
&lt;p&gt;One of the most basic things needed for automation is reading a cell’s contents. The following piece of code does exactly this:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    Sub read_cell
        dim document as object
        document = ThisComponent
        sheet = document.Sheets(0)
        MsgBox(sheet.getCellByPosition(0, 0).String)
    End Sub

&lt;/figure&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;dim&lt;/code&gt; is a keyword used to declare a variable but declaration is totally optional unless &lt;code class="highlighter-rouge"&gt;Option Explicit&lt;/code&gt; is specified at the beginning of the module. &lt;code class="highlighter-rouge"&gt;ThisComponent&lt;/code&gt; is the LibreOffice object that references the current spreadsheet (or a written document in case of Writer). The important thing here is the expression, &lt;code class="highlighter-rouge"&gt;sheet.getCellByPosition(0, 0).String&lt;/code&gt; which gets the contents of first cell in the first row. Cells can be referenced using the co-ordinate system where (0,0) refers to cell at row-0 and column-0. Thus, any value across the entire spreadsheet can be fetched using this simple method.&lt;/p&gt;
&lt;p&gt;To run a macro from the editor, just place the cursor inside the &lt;code class="highlighter-rouge"&gt;sub&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;function&lt;/code&gt; body of any macro and press &lt;code class="highlighter-rouge"&gt;F5&lt;/code&gt; (or alternatively, click the &lt;code class="highlighter-rouge"&gt;Run BASIC&lt;/code&gt; icon on the toolbar).&lt;/p&gt;
&lt;h2 id="recipe-2-change-cell-contents-"&gt;Recipe 2: Change cell contents []{#changecell}&lt;/h2&gt;
&lt;p&gt;Another often needed thing is the ability to change the cell contents. The following code sets the first cell in the first row to “Hola! Mundo”, the Spanish expression for “Hello! World”:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    Sub change_cell
        dim document as object
        document = ThisComponent
        sheet = document.Sheets(0)
        sheet.getCellByPosition(0, 0).String = "Hola Mundo!"
        MsgBox("Done")
    End Sub

&lt;/figure&gt;

&lt;h2 id="recipe-3-search-and-replace-"&gt;Recipe 3: Search and Replace []{#searchandrepl}&lt;/h2&gt;
&lt;p&gt;Searching and replacing specific strings could be an important part of your automation routine. Below is a fun macro that searches for the first names of some Linux experts (like Linus, Richard, Peter, etc.) and replaces it with their last names (Torvalds, Stallman, Anvin):&lt;/p&gt;
&lt;figure class="highlight"&gt;
    Sub replace_text
      Dim names() As String
      Dim surnames() As String
      Dim n As Long
      Dim document As Object
      Dim sheets as Object
      Dim sheet as Object
      Dim replace As Object

      names() = Array("Linus", "Richard", "Peter", "Greg", "Bill")
      surnames() = Array("Torvalds", "Stallman", "Anvin", "Kroah", "Gates")
      document = ThisComponent rem .CurrentController.Frame
      rem sheet = doc.CurrentSelection.Spreadsheet
      sheets = document.getSheets()
      sheet = sheets.getByIndex(0)
      replace = sheet.createReplaceDescriptor rem document.createReplaceDescriptor in case of Writer
      rem replace.SearchRegularExpression = True
      For n = lbound(names()) To ubound(names())
        replace.SearchString = names(n)
        replace.ReplaceString = surnames(n)
        sheet.replaceAll(replace)
      Next n
      MsgBox("Done")
    End Sub

&lt;/figure&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;names()&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;surnames()&lt;/code&gt; are actually arrays. Unlike C and Java, arrays in Basic are declared and accessed using round braces and not square ones. Also, what gets declared in an array declaration is the upper-bound, not the total size. Thus, &lt;code class="highlighter-rouge"&gt;foo(2)&lt;/code&gt; is actually a size-3 array ranging from indices 0 to 2.&lt;/p&gt;
&lt;h2 id="recipe-4-regular-expressions-"&gt;Recipe 4: Regular Expressions []{#regex}&lt;/h2&gt;
&lt;p&gt;Regular expressions are very useful in searching and replacing text based on specific patterns. The following macro searches for all the email addresses in your spreadsheet and replaces each one with &lt;code class="highlighter-rouge"&gt;foo@bar.com&lt;/code&gt;:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    Sub replace_with_regex
      Dim names() As String
      Dim surnames() As String
      Dim n As Long
      Dim document As Object
      Dim sheets as Object
      Dim sheet as Object
      Dim replace As Object

      pattern = "\b[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}\b" rem regex pattern to match any email address
      document = ThisComponent rem .CurrentController.Frame
      sheets = document.getSheets()
      sheet = sheets.getByIndex(0)
      replace = sheet.createReplaceDescriptor rem document.createReplaceDescriptor in case of Writer
      replace.SearchRegularExpression = True
      replace.SearchString = pattern
      replace.ReplaceString = "foo@bar.com"
      sheet.replaceAll(replace)

      MsgBox("Done")
    End Sub

&lt;/figure&gt;

&lt;h2 id="recipe-5-show-file-open-dialog-"&gt;Recipe 5: Show File-open dialog []{#showopendialog}&lt;/h2&gt;
&lt;p&gt;Showing the File-open dialog is a very common requirement, especially when you want to open an external file for processing. The below code uses the &lt;code class="highlighter-rouge"&gt;FilePicker&lt;/code&gt; object to show the file-open dialog and return the selected file-name:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    function show_open_dialog
        dim aurl as object
        dim s as string
        dim oDlg as object

        oDlg = createUnoService("com.sun.star.ui.dialogs.FilePicker")
        oDlg.setMultiSelectionMode(false)
        oDlg.appendFilter("CSV Files (.csv)", "*.csv" ) 
        oDlg.execute
        aUrl = oDlg.getFiles()

        s = aUrl(0)
        if len(s) &gt; 0 then
            MsgBox("File Selected: " &amp; s &amp; chr(13))
        end if
        show_open_dialog = s
    end function

&lt;/figure&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;createUnoService&lt;/code&gt; is a LibreOffice specific method for creating helper objects like &lt;code class="highlighter-rouge"&gt;FilePicker&lt;/code&gt; in this example. The &lt;code class="highlighter-rouge"&gt;appendFilter&lt;/code&gt; method is used to filter out only &lt;code class="highlighter-rouge"&gt;CSV&lt;/code&gt; files in the dialog.&lt;/p&gt;
&lt;h2 id="recipe-6-show-file-save-dialog-"&gt;Recipe 6: Show File-save dialog []{#showsavedialog}&lt;/h2&gt;
&lt;p&gt;For showing a File-save dialog, the same &lt;code class="highlighter-rouge"&gt;FilePicker&lt;/code&gt; object is used, initializing it with the &lt;code class="highlighter-rouge"&gt;FILESAVE_AUTOEXTENSION&lt;/code&gt; argument:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    function show_save_dialog
        dim aurl as object
        dim s as string
        dim oDlg as object

        sFilePickerArgs = Array(_
        com.sun.star.ui.dialogs.TemplateDescription.FILESAVE_AUTOEXTENSION )    
        oDlg = createUnoService("com.sun.star.ui.dialogs.FilePicker")
        oDlg.initialize(sFilePickerArgs())
        oDlg.setMultiSelectionMode(false)
        oDlg.appendFilter("CSV Files (.csv)", "*.csv" ) 
        oDlg.setTitle("Save As....")

        if oDlg.execute() then
            aUrl = oDlg.getFiles()
            s = aUrl(0)
            if len(s) &gt; 0 then
                MsgBox("File Selected: " &amp; s &amp; chr(13))
            end if
        else
            s = ""
        end if
        show_save_dialog = s
    end function

&lt;/figure&gt;

&lt;h2 id="recipe-7-file-io-read-from-files-"&gt;Recipe 7: File I/O: Read from files []{#readfromfiles}&lt;/h2&gt;
&lt;p&gt;Raw file I/O is a feature provided by almost every language and Basic macros make it almost too easy. Below code is used to read a CSV file with three columns. Name of the file is set in the &lt;code class="highlighter-rouge"&gt;filename&lt;/code&gt; variable. The variable &lt;code class="highlighter-rouge"&gt;num&lt;/code&gt; is a numerical tag used to reference the file-handler and &lt;code class="highlighter-rouge"&gt;FreeFile()&lt;/code&gt; returns a free available number that can be used for tagging. The &lt;code class="highlighter-rouge"&gt;open&lt;/code&gt; statement is self-explanatory. In Basic, files can be opened in Input, Output and Binary modes. Finally, the &lt;code class="highlighter-rouge"&gt;input&lt;/code&gt; statement is used to actually read the file into the variables line after line.&lt;/p&gt;
&lt;figure class="highlight"&gt;
    sub file_io_read
        dim v1, v2, v3
        filename = "/home/prahlad/data/test.csv"
        num = FreeFile()
        open filename for input as #num 
        do while not eof(num)
            input #num, v1, v2, v3
            print v1 &amp; "::" &amp; v2 &amp; "::" &amp; v3
        loop
        close #num
        msgbox "Done"
    end sub

&lt;/figure&gt;

&lt;h2 id="recipe-8-file-io-write-to-files-"&gt;Recipe 8: File I/O: Write to files []{#writetofiles}&lt;/h2&gt;
&lt;p&gt;For writing to files, a handler is opened in &lt;code class="highlighter-rouge"&gt;output&lt;/code&gt; mode instead of &lt;code class="highlighter-rouge"&gt;input&lt;/code&gt;, and the &lt;code class="highlighter-rouge"&gt;write&lt;/code&gt; statement is used to actually write the variables to a file.&lt;/p&gt;
&lt;figure class="highlight"&gt;
    sub file_io_write
        filename = "/home/prahlad/data/dummy.csv"
        num = FreeFile()
        open filename for output as #num 
        write #num, "col1", "col2", "col3"
        write #num, "1", "2", "3"
        write #num, "4", "5", "6"
        close #num
        msgbox "Done"
    end sub

&lt;/figure&gt;

&lt;h2 id="recipe-9-load-data-from-a-csv-file-"&gt;Recipe 9: Load data from a CSV file []{#loadfromcsv}&lt;/h2&gt;
&lt;p&gt;Apart from working in raw I/O mode, it is sometimes required to load a complete CSV as a sheet in the current document. Using the &lt;code class="highlighter-rouge"&gt;show_open_dialog&lt;/code&gt; function that we studied earlier, the following macro first prompts a user with a File-open dialog and then loads the specified CSV file as a new sheet:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    sub load_from_csv
        fname = show_open_dialog
        if len(fname)&gt;0 then
            dim fileProps(1) as new com.sun.star.beans.PropertyValue
            fileProps(0).Name = "FilterName"
            fileProps(0).Value = "Text - txt - csv (StarCalc)"
            fileProps(1).Name = "FilterOptions"
            fileProps(1).Value = "44,34,76,1,,0,false,true,true,false"
            document = StarDesktop.loadComponentFromURL(fname, "_blank", 0, fileProps())        
        end if
        msgbox "Done"
    end sub

&lt;/figure&gt;

&lt;p&gt;&lt;code class="highlighter-rouge"&gt;fileProps(0)&lt;/code&gt; is a property variable used for specifying the CSV file format, while &lt;code class="highlighter-rouge"&gt;fileProps(1)&lt;/code&gt; specifies the default formatting options for the CSV (such as a delimiter, charset, etc.)&lt;/p&gt;
&lt;h2 id="recipe-10-copy-text-to-clipboard-"&gt;Recipe 10: Copy text to clipboard []{#copytoclipboard}&lt;/h2&gt;
&lt;p&gt;Your custom processing might involve putting a specific text to the clipboard from LibreOffice Calc. Following code shows how to put the string “Hola!” to the system clipboard:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    sub copy_to_clipboard
        oClip = CreateUnoService("com.sun.star.datatransfer.clipboard.SystemClipboard")
        oTR = createUnoListener("TR_", "com.sun.star.datatransfer.XTransferable")
        oClip.setContents(oTR, null)
        msgbox "Done"
    end sub

    Function TR_getTransferData( aFlavor As com.sun.star.datatransfer.DataFlavor ) As Any
        If (aFlavor.MimeType = "text/plain;charset=utf-16") Then
            TR_getTransferData = "Hola!"
        EndIf
    End Function

    Function TR_getTransferDataFlavors() As Any
        Dim aF As new com.sun.star.datatransfer.DataFlavor
        aF.MimeType = "text/plain;charset=utf-16"
        aF.HumanPresentableName = "Unicode-Text"
        TR_getTransferDataFlavors = Array(aF)
    End Function

    Function TR_isDataFlavorSupported( aFlavor As com.sun.star.datatransfer.DataFlavor ) As Boolean
        TR_isDataFlavorSupported = (aFlavor.MimeType = "text/plain;charset=utf-16")
    End Function

&lt;/figure&gt;

&lt;p&gt;Second function is a callback and is used for storing the string to clipboard. The last two are helper functions used by the &lt;code class="highlighter-rouge"&gt;SystemClipboard&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;XTransferable&lt;/code&gt; helper objects and are required.&lt;/p&gt;
&lt;h2 id="demo-"&gt;Demo []{#demo}&lt;/h2&gt;
&lt;p&gt;Finally, the working LibreOffice Calc spreadsheet implementing all these examples can be found &lt;a href="/uploads/old/macro_recipes.ods"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="references-"&gt;References []{#references}&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://api.libreoffice.org/examples/examples.html#Basic_examples"&gt;http://api.libreoffice.org/examples/examples.html#Basic_examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forum.openoffice.org/en/forum/viewtopic.php?f=25&amp;amp;t=36441"&gt;https://forum.openoffice.org/en/forum/viewtopic.php?f=25&amp;amp;t=36441&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ask.libreoffice.org/en/question/39940/calc-open-and-save-csv-file-with-given-filter-options/"&gt;https://ask.libreoffice.org/en/question/39940/calc-open-and-save-csv-file-with-given-filter-options/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.openoffice.org/wiki/Documentation/DevGuide/OpenOffice.org_Developers_Guide"&gt;https://wiki.openoffice.org/wiki/Documentation/DevGuide/OpenOffice.org_Developers_Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.openoffice.org/wiki/Documentation/BASIC_Guide/Cells_and_Ranges"&gt;https://wiki.openoffice.org/wiki/Documentation/BASIC_Guide/Cells_and_Ranges&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.excel-spreadsheet.com/vba/inputoutput.htm"&gt;http://www.excel-spreadsheet.com/vba/inputoutput.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forum.openoffice.org/en/forum/viewtopic.php?f=45&amp;amp;t=13783"&gt;https://forum.openoffice.org/en/forum/viewtopic.php?f=45&amp;amp;t=13783&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="LibreOffice"></category><category term="Linux"></category></entry><entry><title>How to assemble a fast and minimal Debian Desktop using Openbox</title><link href="blog/2016/02/minimal-debian-desktop-setup.html" rel="alternate"></link><published>2016-02-16T07:23:00+05:30</published><updated>2016-02-16T07:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-02-16:blog/2016/02/minimal-debian-desktop-setup.html</id><summary type="html">&lt;p&gt;Being a web developer, one of the nagging things to do is keeping your hardware in sync with your performance requirements. In the good old times, a &lt;code class="highlighter-rouge"&gt;P4&lt;/code&gt; or even a &lt;code class="highlighter-rouge"&gt;Celeron&lt;/code&gt; based PC or laptop was enough for programming. But with changing times, the required investment to get a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Being a web developer, one of the nagging things to do is keeping your hardware in sync with your performance requirements. In the good old times, a &lt;code class="highlighter-rouge"&gt;P4&lt;/code&gt; or even a &lt;code class="highlighter-rouge"&gt;Celeron&lt;/code&gt; based PC or laptop was enough for programming. But with changing times, the required investment to get a sane performance has increased to astronomical levels.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Problem is not just with the limitations of hardware, but our requirements too have increased. Apart from the tons of most needed apps like &lt;code class="highlighter-rouge"&gt;eclipse&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;firefox&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;libreoffice&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;thunderbird&lt;/code&gt;, etc., you now have to keep VMs running in &lt;code class="highlighter-rouge"&gt;virtualbox&lt;/code&gt; at the same time you are having a chat on &lt;code class="highlighter-rouge"&gt;skype&lt;/code&gt; with your client. Add to that, &lt;em&gt;heavy&lt;/em&gt; things like &lt;code class="highlighter-rouge"&gt;eclipse&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;Android Emulator&lt;/code&gt; and your linux (or even Windows) desktop will start to buckle under the pressure.&lt;/p&gt;
&lt;p&gt;All in all, even an Intel &lt;em&gt;i5&lt;/em&gt; or &lt;em&gt;i7&lt;/em&gt; chip isn’t sufficient today to handle multiple heavy or memory consuming apps. The only solution I have found is to use a lighter window-manager like &lt;code class="highlighter-rouge"&gt;Openbox&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Fluxbox&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;IceWM&lt;/code&gt; instead of a heavy Desktop Environment like &lt;code class="highlighter-rouge"&gt;GNOME&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Unity&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;KDE&lt;/code&gt;. This tutorial contains all the steps needed to assemble on your own light-weight DE based on &lt;code class="highlighter-rouge"&gt;Openbox&lt;/code&gt; on Debian (or one of its compatible derivatives like Ubuntu or Linux Mint).&lt;/p&gt;
&lt;p&gt;[caption id="attachment_498" align="alignnone" width="956"]&lt;a href="/uploads/2016/02/openbox.png"&gt;&lt;img alt="Openbox" class="size-full wp-image-498" height="537" src="/uploads/2016/02/openbox.png" width="956"&gt;&lt;/a&gt; Openbox[/caption]&lt;/p&gt;
&lt;p&gt;&lt;a href="http://openbox.org"&gt;Openbox&lt;/a&gt; is an open source project (GPL licensed) based on the good old blackbox. It provides just the minimal framework to build a no-flashy, sane desktop environment that gets out of your way, so most resources are used for running the &lt;em&gt;actual apps&lt;/em&gt; that you use. Openbox occupies less than 8 MB of RAM on your machine. Again, this kind of setup is not for everyone, in case you are a huge fan of the Unity dash or GNOME dash, you may not like Openbox at all. On the other hand, if you like the new MATE Desktop which is based on the old GNOME 2, you may find this approach interesting. In fact, Openbox is the window manager used by &lt;code class="highlighter-rouge"&gt;LXDE&lt;/code&gt;, the DE most famous for being light on resources. You are, in fact, going to create something like your own version of &lt;code class="highlighter-rouge"&gt;LXDE&lt;/code&gt; by following this tutorial, only its even more minimal and custom to your requirements. Here is how to do it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the Debian minimal net-install ISO from &lt;a href="https://www.debian.org/CD/netinst/"&gt;here&lt;/a&gt;. It is roughly 150-200 MB in size.&lt;/li&gt;
&lt;li&gt;Either burn the &lt;code class="highlighter-rouge"&gt;ISO&lt;/code&gt; to a USB drive or try it out in a VM first.&lt;/li&gt;
&lt;li&gt;Use the text based or graphical installer to complete the installation.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once you land on the command line, login as the superuser (&lt;code class="highlighter-rouge"&gt;su&lt;/code&gt;) and install these packages:
    ::: {.highlighter-rouge}
    &lt;code&gt;{.highlight}
     apt-get install network-manager
     apt-get install xorg openbox xdm
     apt-get install xbacklight pcmanfm lxappearance lxpanel gmrun gnome-terminal&lt;/code&gt;
    :::&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make the panel automatically show up, add this to &lt;code class="highlighter-rouge"&gt;~/.config/openbox/autostart&lt;/code&gt; file using &lt;code class="highlighter-rouge"&gt;nano&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;vim&lt;/code&gt; editors:
    ::: {.highlighter-rouge}
    &lt;code&gt;{.highlight}
     lxpanel &amp;amp;&lt;/code&gt;
    :::&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Restart&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Note that this will create only a &lt;em&gt;bare minimum&lt;/em&gt;, workable DE with just a File Manager and no other usable apps. lxpanel is a “Windows-98 style” panel that sits on top/bottom of your desktop and gives a “start-menu” in which your programs are organized. lxappearance is a handy tool to switch GTK themes which comes very useful. You still have to install &lt;code class="highlighter-rouge"&gt;evince&lt;/code&gt; to read PDF books, &lt;code class="highlighter-rouge"&gt;geany&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;gedit&lt;/code&gt; for a GUI text editor, &lt;code class="highlighter-rouge"&gt;iceweasel&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;icedove&lt;/code&gt; for a browser and mail client respectively, and &lt;code class="highlighter-rouge"&gt;libreoffice-calc&lt;/code&gt; for a spreadsheet.&lt;/p&gt;
&lt;p&gt;But the good thing is that you are the &lt;em&gt;master&lt;/em&gt; of your desktop world now. You don’t have to live with that extra load of bloated baggage that heavy DEs usually come with. If you follow the above process correctly, you will end up with an installation size of less than 500 MB! And your own custom-made DE that works!&lt;/p&gt;
&lt;p&gt;As for customization, &lt;code class="highlighter-rouge"&gt;Openbox&lt;/code&gt; is &lt;a href="http://openbox.org/wiki/Help:Configuration"&gt;highly customizable&lt;/a&gt;. Arch Linux also has a wonderful &lt;a href="https://wiki.archlinux.org/index.php/openbox"&gt;documentation&lt;/a&gt; on this topic, and &lt;a href="https://www.maketecheasier.com/configure-andcustomize-openbox/"&gt;here&lt;/a&gt; is another brief guide. For menus, you can either install &lt;code class="highlighter-rouge"&gt;obmenu&lt;/code&gt; or if you are a simplicity fan like me, you can just edit your way through &lt;code class="highlighter-rouge"&gt;~/.config/openbox/menu.xml&lt;/code&gt;. This, and the other file, &lt;code class="highlighter-rouge"&gt;~/.config/openbox/rc.xml&lt;/code&gt; are the only two Openbox configuration files and they have all the needed options. In fact, if you decide to make use of the &lt;code class="highlighter-rouge"&gt;lxpanel&lt;/code&gt; main menu, you don’t even have to edit the &lt;code class="highlighter-rouge"&gt;menu.xml&lt;/code&gt; of Openbox.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;lxpanel&lt;/code&gt; is not the only option for installing a Desktop panel, there are others too like &lt;code class="highlighter-rouge"&gt;fbpanel&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;tint2&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;xfce4-panel&lt;/code&gt;. Read &lt;a href="https://www.maketecheasier.com/configure-andcustomize-openbox/"&gt;this&lt;/a&gt; for more details.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To add a battery indicator to the &lt;code class="highlighter-rouge"&gt;lxpanel&lt;/code&gt;, add this to the &lt;code class="highlighter-rouge"&gt;~/.config/lxpanel/default/panels/panel&lt;/code&gt;
    ::: {.highlighter-rouge}
    &lt;code&gt;{.highlight}
      Plugin {
          type = batt
      }&lt;/code&gt;
    :::&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To save your openbox customizations between sessions (which is a basic requirement), copy the &lt;code class="highlighter-rouge"&gt;rc.xml&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;menu.xml&lt;/code&gt; from &lt;code class="highlighter-rouge"&gt;/etc/X11/openbox&lt;/code&gt; to &lt;code class="highlighter-rouge"&gt;~/.config/openbox/&lt;/code&gt; (create this folder if it doesn’t exist).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class="highlighter-rouge"&gt;gmrun&lt;/code&gt; is needed to show the run dialog that pops up when you press &lt;code class="highlighter-rouge"&gt;Alt+F2&lt;/code&gt; in any “normal” DE. Once you install &lt;code class="highlighter-rouge"&gt;gmrun&lt;/code&gt;, just add below code to &lt;code class="highlighter-rouge"&gt;~/.config/openbox/rc.xml&lt;/code&gt; somewhere in the &lt;code class="highlighter-rouge"&gt;&amp;lt;keyboard&amp;gt;&lt;/code&gt; section, in order to make the keys work:
    ::: {.highlighter-rouge}
    &lt;code&gt;{.highlight}
      &amp;lt;!--start: Prahlad--&amp;gt;
      &amp;lt;keybind key="A-F2"&amp;gt;
        &amp;lt;action name="Execute"&amp;gt;
          &amp;lt;command&amp;gt;gmrun&amp;lt;/command&amp;gt;
        &amp;lt;/action&amp;gt;
      &amp;lt;/keybind&amp;gt;
      &amp;lt;!--end: Prahlad--&amp;gt;&lt;/code&gt;
    :::&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class="highlighter-rouge"&gt;xdm&lt;/code&gt; is optional, but helpful if you don’t want to do a lot of configuration changes in &lt;code class="highlighter-rouge"&gt;xorg&lt;/code&gt; files to show up the desktop automatically each time you login. Of course, you can use &lt;code class="highlighter-rouge"&gt;lightdm&lt;/code&gt; too if you want.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;I don’t use bluetooth a lot and haven’t included any of those packages, but there are many of them such as &lt;code class="highlighter-rouge"&gt;bluez&lt;/code&gt; in case you need one.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://openbox.org/wiki/Help:Configuration"&gt;Openbox Wiki - Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/index.php/openbox"&gt;Arch Linux Openbox docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.maketecheasier.com/configure-andcustomize-openbox/"&gt;Make Tech Easier - Openbox configuration guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.debian.org/CD/netinst/"&gt;Debian Netinstall Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=156272"&gt;lxpanel Battery Indicator installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Debian"></category><category term="Linux"></category></entry><entry><title>Linux Desktop Survey Project - Feb/2016</title><link href="blog/2016/02/linux-desktop-survey-project-feb2016.html" rel="alternate"></link><published>2016-02-07T21:23:00+05:30</published><updated>2016-02-07T21:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2016-02-07:blog/2016/02/linux-desktop-survey-project-feb2016.html</id><summary type="html">&lt;p&gt;I will start this post by thanking the kind folks at the Reddit’s &lt;a href="https://www.reddit.com/r/linux"&gt;linux subreddit&lt;/a&gt; and Voat’s &lt;a href="https://www.voat.co/v/linux"&gt;linux subverse&lt;/a&gt; who wholeheartedly participated in this survey. &lt;a href="http://lws-rmsreturns.rhcloud.com/limesurvey/index.php/statistics_user/action/surveyid/556933/language/en"&gt;Here&lt;/a&gt; are the results and they are pretty insightful. For a developer who builds apps targetting the linux platform, it helps to know …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I will start this post by thanking the kind folks at the Reddit’s &lt;a href="https://www.reddit.com/r/linux"&gt;linux subreddit&lt;/a&gt; and Voat’s &lt;a href="https://www.voat.co/v/linux"&gt;linux subverse&lt;/a&gt; who wholeheartedly participated in this survey. &lt;a href="http://lws-rmsreturns.rhcloud.com/limesurvey/index.php/statistics_user/action/surveyid/556933/language/en"&gt;Here&lt;/a&gt; are the results and they are pretty insightful. For a developer who builds apps targetting the linux platform, it helps to know what are the preferences of users who run those apps on a desktop. Not understanding these requirements beforehand has caused a lot of &lt;a href="https://en.wikipedia.org/wiki/Unity_%28user_interface%29"&gt;unneeded backlash&lt;/a&gt; in the history of linux desktop development and a lot many forks were created which ended up causing a division of focus.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Not only did I learn a lot about what the linux desktop users want in general, but the survey also threw some light on what distros or desktop environments are generally perceived to be either giving a better performance or providing a better user experience.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;What is the most important factor when choosing a Distro?&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Linux Desktop Survey Project" src="http://lws-rmsreturns.rhcloud.com/limesurvey/tmp/ec2d620c7c97d4d351ad3553d3dc4161.png"&gt;&lt;/p&gt;
&lt;p&gt;These were the options I had set:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Better Performance and speed&lt;/li&gt;
&lt;li&gt;Better User Experience&lt;/li&gt;
&lt;li&gt;A Mix of both&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The prevailing assumption of a lot many people is that linux users are usually those “super nerdy” tech geeks who are only interested in arcane things like computing performance and speed. But on the contrary, we learn that linux users are just like &lt;code class="highlighter-rouge"&gt;Windows&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;OSX&lt;/code&gt; users for that matter, and they prefer a better user experience over performance!&lt;/p&gt;
&lt;p&gt;As you can see, most of the folks preferred a balance of both performance and user experience. In fact, &lt;code class="highlighter-rouge"&gt;Better Performance and speed&lt;/code&gt; was the least favored factor for most people who chose their distros, which implies that how wrong our assumptions sometimes could be! As one redditor said, I should have included &lt;code class="highlighter-rouge"&gt;Software Freedom&lt;/code&gt; as an option since that is also quite a motivating factor for a lot many linux users.&lt;/p&gt;
&lt;p&gt;Here are two comments from participants who chose the middle-path, &lt;code class="highlighter-rouge"&gt;A Mix of both&lt;/code&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I don’t feel I have to compromise on one or the other. A good user experience also encompasses acceptable performance.&lt;/p&gt;
&lt;p&gt;A good UX is crucial for my own comfort, but the speed and performance must be reliable.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here is what the undecided folks (Other) have to say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While user experience is very important, I feel this is for nought if it is not matched with upstream packages. I find it terribly tedious to find myself on a distro which is lagging behind on the likes of gnome-shell and firefox.&lt;/p&gt;
&lt;p&gt;Full choice over programs and user interface; my own OS&lt;/p&gt;
&lt;p&gt;Stability and security are the most important factors for me.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another option I should have added here was &lt;code class="highlighter-rouge"&gt;Stability and security&lt;/code&gt; since these are the very foundations upon which linux sits.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;People’s Favorite Distro&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Most Popular Distro" src="http://lws-rmsreturns.rhcloud.com/limesurvey/tmp/dfdd05e767cc742c456552f065121e8c.png"&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu’s popularity is pretty well-known in the linux world, but what surprised me was Arch. Perhaps, it was the bias effect of lot many people on linux subbredit being Arch fans, or maybe Arch users have actually increased relative to Ubuntu during recent years, who knows! In any case, this survey result does indicate to me that if tomorrow I were to develop a linux destop app, then which distros should I test on with some priority. This is just one of the benefits of conducting this survey.&lt;/p&gt;
&lt;p&gt;Here are a few user comments in this category:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Actually Arch derivative Antergos. This distribution has good a user experience and it is performant. It also delivers fresh software.&lt;/p&gt;
&lt;p&gt;I use Debian on my desktop, Arch as a DOM0 on my server, and RHEL/CENTOS at work.&lt;/p&gt;
&lt;p&gt;I honestly hate the linux desktop. It has so many bugs and is visually very hard to parse.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;The Distro with Best Performance&lt;/h2&gt;
&lt;p&gt;&lt;img alt="The Distro with Best Performance" src="http://lws-rmsreturns.rhcloud.com/limesurvey/tmp/2784dfd5801a114e64e2de0393a8d1e9.png"&gt;&lt;/p&gt;
&lt;p&gt;Unlike the Phronix arcane performance benchmarks, I thought about asking the users directly which Distro gave them the best performance. I don’t doubt the benchmarks, but computing is such a complex phenomena that raw performance isn’t as much an indicator of overall performance as it used to be in the past. Besides, the best proof of pudding is in the eating. Linux enthusiasts distro-hop a lot and in that process learn about the distros a lot.&lt;/p&gt;
&lt;p&gt;Again, Arch was at top here, followed by Gentoo. Debian came third which was not at all surprising. In fact, I expected this vanilla of a distro to be on the top. Perhaps the “Arch fans” effect of linux subreddit again! What surprised me, however, was Fedora coming such low on performance score. Here is what the participants had to say:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Crunchbang (development started so name changed to Busenlabs)&lt;/p&gt;
&lt;p&gt;no idea but xubuntu runs ok on a dual core laptop from 2007 with 2gb of ram.&lt;/p&gt;
&lt;p&gt;First benchmarks, then if no existing distro fits the bill, Gentoo, Yocto project, or LFS.&lt;/p&gt;
&lt;p&gt;I tested a number of distros on a very slow AMD netbook and Mint with Cinnamon was faster than itself and others with XFCE and MATE.&lt;/p&gt;
&lt;p&gt;If performance was the only criteria, I would use windows.&lt;/p&gt;
&lt;p&gt;Probably, arch. Whichever one isn’t in the hands of the NSA.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2&gt;Which Distro gives the Best User Experience&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Which Distro gives the Best User Experience" src="http://lws-rmsreturns.rhcloud.com/limesurvey/tmp/43ddb58e40e9ececf0e0ed58c106e182.png"&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu is most people’s favorite in this area, but Ubuntu’s community clone &lt;code class="highlighter-rouge"&gt;Linux Mint&lt;/code&gt; bagging away the top position is also a fitting thing. Like Ubuntu, Mint is a distro which happens to “just work” according to most users. Though I personally don’t like all the extra amount of non-free codecs and plugins it comes pre-bundled with (such as Flash and Adobe), it is a good distro for existing Windows users to hop on. Here is what participants have to say about choosing the distro which provides the best user experience:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mint is great out of the box and requires minimal configuration to “just work”.&lt;/p&gt;
&lt;p&gt;Enhanced user experience means more convenience and more toys; Ubuntu repos cover both.&lt;/p&gt;
&lt;p&gt;Arch derivative Antergos. Just enough training wheels to be easy, still all the goodness of Arch. Why not Ubuntu? Ubuntu is bloated and stale and only has the name of being easiest. While once true, the competition has caught up.&lt;/p&gt;
&lt;p&gt;Windows (See the same answer under the “performance” question.)&lt;/p&gt;
&lt;p&gt;Mint does a very good job of providing the right apps to control settings, out of the box.&lt;/p&gt;
&lt;p&gt;Easy to use (Linux Mint), comes with programs that I’m familiar with (Firefox, Thunderbird, LibreOffice) and the interface is simple but also powerful.&lt;/p&gt;
&lt;p&gt;Allows heavy customization to how I want it (Gentoo).&lt;/p&gt;
&lt;p&gt;Purely for ease of use/install (Ubuntu).&lt;/p&gt;
&lt;p&gt;Haven’t tried that many but of of the few that I have tried Mint has had the most clear and logical meny items.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Along with the many enthusiastic distro-hoppers, my search for the discovery of best linux desktop continues.&lt;/p&gt;</content><category term="Linux"></category></entry><entry><title>Eclipse Mars - Not ready for Linux Yet</title><link href="blog/2015/12/eclipse-mars-not-ready-for-linux.html" rel="alternate"></link><published>2015-12-30T22:36:00+05:30</published><updated>2015-12-30T22:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-12-30:blog/2015/12/eclipse-mars-not-ready-for-linux.html</id><summary type="html">&lt;p&gt;So after hearing about all the hype and praises about this Eclipse new release called &lt;a href="https://projects.eclipse.org/releases/mars"&gt;Mars&lt;/a&gt;, I decided to give it a try on my Ubuntu laptop yesterday. Since I already use &lt;code class="highlighter-rouge"&gt;Kepler&lt;/code&gt; the older version, I was looking for some big positives like performance improvements (most often talked about …&lt;/p&gt;</summary><content type="html">&lt;p&gt;So after hearing about all the hype and praises about this Eclipse new release called &lt;a href="https://projects.eclipse.org/releases/mars"&gt;Mars&lt;/a&gt;, I decided to give it a try on my Ubuntu laptop yesterday. Since I already use &lt;code class="highlighter-rouge"&gt;Kepler&lt;/code&gt; the older version, I was looking for some big positives like performance improvements (most often talked about by a lot of Eclipse fans lately).&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Eclipse Red Logo" src="/uploads/old/eclipse-red.png"&gt;&lt;/p&gt;
&lt;p&gt;When I started this new &lt;code class="highlighter-rouge"&gt;eclipse&lt;/code&gt; on ubuntu, I first had a faint hope that it was running faster (maybe a trick of the mind instilled by the new red logo!). But the true test of any software is how it performs under REAL world conditions. Alas! As I had expected, I was only to be disappointed on the performance front. Unless there is a drastic change in underlying core components such as a code refactoring or an improvement of graphic toolkit/library, the “performance” can only get worse, not better. After I created a simple &lt;em&gt;HelloADT&lt;/em&gt; project, here is what happened when I clicked on an Android Activity layout screen:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Eclipse Mars" src="/uploads/old/Eclipse_Mars.png"&gt;&lt;/p&gt;
&lt;p&gt;And this is a modern &lt;em&gt;Intel core i3&lt;/em&gt; machine we are talking about with 4 GB RAM, not some old device. Just after this disaster of an IDE happened, I started my good old &lt;code class="highlighter-rouge"&gt;kepler&lt;/code&gt; version and opened the same ADT project which ran without any problems:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Eclipse Kepler" src="/uploads/old/Eclipse_Kepler.png"&gt;&lt;/p&gt;
&lt;p&gt;It was good that I had kept my kepler installation folder intact, so I was able to revert. So moral of the story is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Take all claims about this “big improvement” with a pinch of salt, especially if it is a Java based software.&lt;/li&gt;
&lt;li&gt;Wait for &lt;code class="highlighter-rouge"&gt;Eclipse mars&lt;/code&gt; to get more stable before using it for production work.&lt;/li&gt;
&lt;/ol&gt;</content><category term="Eclipse"></category><category term="Java"></category></entry><entry><title>Rockstar Java Series: Learn type annotations and be a better coder</title><link href="blog/2015/12/rockstar-java-dev-series-learn-type-annotations.html" rel="alternate"></link><published>2015-12-24T21:23:00+05:30</published><updated>2015-12-24T21:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-12-24:blog/2015/12/rockstar-java-dev-series-learn-type-annotations.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Java SE 8&lt;/em&gt; comes with a bundle of new features, and not many of them catch the attention of coders until they learn what they are and realize their usefulness. One such feature that can help you become a better Java coder is the ability to declare &lt;em&gt;type annotations&lt;/em&gt; to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Java SE 8&lt;/em&gt; comes with a bundle of new features, and not many of them catch the attention of coders until they learn what they are and realize their usefulness. One such feature that can help you become a better Java coder is the ability to declare &lt;em&gt;type annotations&lt;/em&gt; to any type use.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Before &lt;em&gt;Java SE 8&lt;/em&gt; came out, &lt;em&gt;type annotations&lt;/em&gt; could only be applied to declarations, but now they can be applied to any type use such as declarations of variables or methods, &lt;em&gt;class instance&lt;/em&gt; creation, &lt;em&gt;casts&lt;/em&gt;, &lt;em&gt;interface&lt;/em&gt; creation, &lt;em&gt;implements&lt;/em&gt; clauses, &lt;em&gt;throws&lt;/em&gt; clauses, etc.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Type annotations&lt;/em&gt; were created to support improved analysis of Java programs by introducing stronger type checking. The more the &lt;em&gt;Java compiler&lt;/em&gt; and &lt;em&gt;JVM&lt;/em&gt; knows about your &lt;code class="highlighter-rouge"&gt;bytecode&lt;/code&gt;, the more equipped they are to perform better in the real world across all platforms.&lt;/p&gt;
&lt;h2&gt;What are Type Annotations?&lt;/h2&gt;
&lt;p&gt;In its basic form, an annotation looks like the following:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@entity
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;The variable after &lt;code class="highlighter-rouge"&gt;@&lt;/code&gt; symbol tells the Java compiler that what follows is a type annotation. A standard example of a built-in type annotation is &lt;code class="highlighter-rouge"&gt;@Override&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@Override
public void talk()
{
    System.out.println(&amp;quot;I am an overridden method&amp;quot;);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;The &lt;code class="highlighter-rouge"&gt;@Override&lt;/code&gt; type annotation tells the Java compiler that what follows is an overridden method from the base class. Of course, you can even place multiple type annotations for the same declaration:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@Override
@SuppressWarnings(&amp;quot;unchecked&amp;quot;)
void myMethod() { ... }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Java SE 8&lt;/em&gt; is so flexible that it allows you to define your own type annotations!&lt;/p&gt;
&lt;h2&gt;How to create your own Type Annotations?&lt;/h2&gt;
&lt;p&gt;Imagine there is a Software firm called &lt;em&gt;Acme Corporation&lt;/em&gt; that develops Java software for its large number of clients. The standard Java practice there is to declare header files in each and every Java source file (*.java) like this:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    /**
     * @copyright Amce Corporation Inc.
     * @author Prahlad Yeri
     * @date 25-12-2015
     * @version 1.1
     * */
    class Duck 
    {
        public void talk() {}
    }

&lt;/figure&gt;

&lt;p&gt;Sound familiar? This is a pretty much common header style nowadays. This same information could be structured by using your own type annotation and it becomes so, so simple:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    @Classinfo(
        author = "Prahlad Yeri",
        date = "25-12-2015"
    )
    class Duck 
    {
        public void talk() {}
    }

&lt;/figure&gt;

&lt;p&gt;In order to use your &lt;code class="highlighter-rouge"&gt;@Classinfo&lt;/code&gt; type annotation, you must declare it. Annotation declaration in Java is similar to how interfaces are declared. In fact, annotations are a kind of interface themselves:&lt;/p&gt;
&lt;figure class="highlight"&gt;

    @interface Classinfo 
    {
        String copyright() default "Acme Corporation Inc.";
        String author();
        String date();
        String version() default "1.1";
        String lastModified() default "";
        String lastModifiedBy() default "";
        String codeReviewBy() default ""; 
    }

&lt;/figure&gt;

&lt;p&gt;You can see that default values are given for &lt;code class="highlighter-rouge"&gt;copyright&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;version&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;lastModifiedBy&lt;/code&gt;, etc. so they are not basically required. If you need multiple author declaration, you can turn it into a list:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;String[] author();
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;And then proceed to define multiple authors when using the type annotation in this manner:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    @Classinfo(
        author = {"Prahlad Yeri", "John Doe"},
        date = "25-12-2015"
    )

&lt;/figure&gt;

&lt;h2&gt;Built-in type annotations in Java&lt;/h2&gt;
&lt;p&gt;Java comes with a bunch of type annotations pre defined. The ones we saw in this tutorial were &lt;code class="highlighter-rouge"&gt;@Override&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;@SuppressWarnings&lt;/code&gt;. Here is the entire list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\@Deprecated annotation indicates that the marked element is deprecated and should no longer be used.&lt;/li&gt;
&lt;li&gt;\@Override annotation informs the compiler that the element is meant to override an element declared in a superclass.&lt;/li&gt;
&lt;li&gt;\@SuppressWarnings annotation tells the compiler to suppress specific warnings that it would otherwise generate.&lt;/li&gt;
&lt;li&gt;\@SafeVarargs annotation, when applied to a method or constructor, asserts that the code does not perform potentially unsafe operations on its varargs parameter.&lt;/li&gt;
&lt;li&gt;\@FunctionalInterface annotation, introduced in Java SE 8, indicates that the type declaration is intended to be a functional interface, as defined by the Java Language Specification.&lt;/li&gt;
&lt;li&gt;\@Documented annotation (&lt;em&gt;only to be used in case of annotation declaration&lt;/em&gt;) indicates that whenever the specified annotation is used those elements should be documented using the Javadoc tool. (By default, annotations are not included in Javadoc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;References:\
&lt;a href="https://docs.oracle.com/javase/tutorial/java/annotations/index.html"&gt;Official Oracle docs - Type Annotations&lt;/a&gt;\
&lt;a href="https://docs.oracle.com/javase/tutorial/java/annotations/basics.html"&gt;Official Oracle docs - Type Annotations Basics&lt;/a&gt;\
&lt;a href="https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html"&gt;Official Oracle docs - Predefined Type Annotations&lt;/a&gt;&lt;/p&gt;</content><category term="Java"></category></entry><entry><title>Rockstar Java Series: Use default methods and be a better coder</title><link href="blog/2015/12/rockstar-java-series-use-default-methods-and-be-a-better-coder.html" rel="alternate"></link><published>2015-12-21T21:23:00+05:30</published><updated>2015-12-21T21:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-12-21:blog/2015/12/rockstar-java-series-use-default-methods-and-be-a-better-coder.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Java 8&lt;/strong&gt; comes with a lot more improvements and features than most people seem to realize. One such feature that can help you become a better Java coder is &lt;strong&gt;Default methods&lt;/strong&gt;.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;To learn just how useful this feature is, lets take a very plain simple example: A &lt;code class="highlighter-rouge"&gt;Product Interface&lt;/code&gt;. Suppose …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Java 8&lt;/strong&gt; comes with a lot more improvements and features than most people seem to realize. One such feature that can help you become a better Java coder is &lt;strong&gt;Default methods&lt;/strong&gt;.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;To learn just how useful this feature is, lets take a very plain simple example: A &lt;code class="highlighter-rouge"&gt;Product Interface&lt;/code&gt;. Suppose that you are a Java Engineer who is just appointed as the Backend Developer in Acme Trading Corporation to develop their new eCommerce system. Suppose Acme has a range of electronic products ranging from computers to cell phones and hard drives to printers. Being a design-oriented programmer, you develop a &lt;code class="highlighter-rouge"&gt;Product&lt;/code&gt; Interface and a generic &lt;code class="highlighter-rouge"&gt;BaseProduct&lt;/code&gt; class for all products:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Product.java
    interface Product
    {
        String getName();
        void setName(String value);

        String getDescription();
        void setDescription(String value);

        double getRate();
        void setRate(double value);

    }

    //BaseProduct.java
    class BaseProduct implements Product
    {
        private String name;
        private String description;
        private double rate;


        public void setDescription(String value) {
            description = value;
        }

        public String getDescription() {
            return description;
        }

        public void setName(String value) {
            name = value;
        }

        public String getName() {
            return name;
        }

        public void setRate(double value) {
            rate = value;
        }

        public double getRate() {
            return rate;
        }

        public static void main(String[] args)
        {
            BaseProduct product = new BaseProduct();
            product.setName("Foo");
            System.out.println(product.getName());
        }
    }

&lt;/figure&gt;

&lt;p&gt;You realize that all products have at least these three things in common: &lt;code class="highlighter-rouge"&gt;Name&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Description&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;Rate&lt;/code&gt;. Then, you start implementing the &lt;code class="highlighter-rouge"&gt;Laptop&lt;/code&gt; class based on the &lt;code class="highlighter-rouge"&gt;BaseProduct&lt;/code&gt; class:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Laptop.java
    class Laptop extends BaseProduct
    {
        private String cpuType;
        private int usbPorts;

        public String getCpuType() {
            return cpuType;
        }

        public void setCpuType(String value) {
            cpuType = value;
        }

        public int getUsbPorts() {
            return usbPorts;
        }

        public void setUsbPorts(int value) {
            usbPorts = value;
        }


        public static void main(String[] args)
        {
            Laptop laptop = new Laptop();
            laptop.setName("Dell Inspiron");
            System.out.println(laptop.getName());
        }
    }

&lt;/figure&gt;

&lt;p&gt;Now imagine that you have created lots of classes for all Acme products in this manner including &lt;code class="highlighter-rouge"&gt;Television&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Refregerator&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Keyboard&lt;/code&gt;, etc.&lt;/p&gt;
&lt;p&gt;Now, you are just 10 days from releasing the final version of your mind-blowing Product Management System when suddenly your boss tells you that you also need a &lt;code class="highlighter-rouge"&gt;Rating&lt;/code&gt;, but only for some products. Naturally, you being a techie who just sips coffee in front of the computer screen the whole day just didn’t realize how the end customers might interact with your system. So, how will you add &lt;code class="highlighter-rouge"&gt;Rating&lt;/code&gt; to the system now?&lt;/p&gt;
&lt;p&gt;The classic approach in Java is to just add a &lt;code class="highlighter-rouge"&gt;Rating&lt;/code&gt; property to each and every individual product class of yours that needs a &lt;code class="highlighter-rouge"&gt;Rating&lt;/code&gt;:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Laptop.java
    class Laptop
    {
        //Classic Java Programmer Approach
        public String getRating() {}
        public void setRating(float value) {}

        //.....
    }

&lt;/figure&gt;

&lt;p&gt;This is a pretty naive approach to this problem. For one, you already have about 100 classes for various products and you will have to go to each one and implement this method. Secondly, you will also break binary compatability with existing versions of your system, so you cannot release this one backend class without replacing your entire system. Another approach is to convert the &lt;code class="highlighter-rouge"&gt;Product&lt;/code&gt; interface to an abstract class, but again, why unnecessarily involve private state when it isn’t needed in the first place. Secondly, a &lt;code class="highlighter-rouge"&gt;BaseProduct&lt;/code&gt; can derive from only one abstract-class but multiple interfaces, so what will you do when you will have to implement more interfaces in future?&lt;/p&gt;
&lt;p&gt;The most apt solution to this problem is that provided by &lt;code class="highlighter-rouge"&gt;Java 8&lt;/code&gt;: &lt;em&gt;default method&lt;/em&gt;. Just add default methods for &lt;code class="highlighter-rouge"&gt;Rating&lt;/code&gt; to your interface as follows and problem solved!&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Product.java
    interface Product
    {
        //Rockstar Java Programmer Approach
        default String getRating() {
            System.out.println("I am the default method for getRating!");
            return "";
        }

        default void setRating(String value) {
            System.out.println("I am the default method for setRating!");
        }

        String getName();
        void setName(String value);

        String getDescription();
        void setDescription(String value);

        double getRate();
        void setRate(double value);
    }

&lt;/figure&gt;

&lt;p&gt;The single most important advantage of &lt;code class="highlighter-rouge"&gt;default method&lt;/code&gt; is &lt;code class="highlighter-rouge"&gt;interface evolution&lt;/code&gt; - meaning that your existing code won’t loose ABI (&lt;code class="highlighter-rouge"&gt;Application Binary Interface&lt;/code&gt;) with the new class. If your interface is a part of a libary jar that you distribute to your users, you can release the newer version without affecting the already running code that might be referring to older jars.&lt;/p&gt;
&lt;p&gt;The inspiration for this came when Oracle themselves had to extend the &lt;code class="highlighter-rouge"&gt;Collection&lt;/code&gt; interface and add a new &lt;code class="highlighter-rouge"&gt;stream&lt;/code&gt; method in &lt;code class="highlighter-rouge"&gt;Java 8&lt;/code&gt;. The &lt;code class="highlighter-rouge"&gt;Collection&lt;/code&gt; interface is very generic and a large number of classes implement that. If Oracle had to implement a &lt;code class="highlighter-rouge"&gt;stream&lt;/code&gt; method in each and every class derived from &lt;code class="highlighter-rouge"&gt;Collection&lt;/code&gt; interface, it would have taken them ages to release Java 8! Rather, they invented this helpful new feature, &lt;code class="highlighter-rouge"&gt;default method&lt;/code&gt; to extend their &lt;code class="highlighter-rouge"&gt;Collection&lt;/code&gt; interface. And now, they don’t have to worry about ABI. Old code referring to JDK 8 libraries will not fail because they are now binary compatible thanks to default methods!&lt;/p&gt;
&lt;p&gt;References:\
&lt;a href="http://stackoverflow.com/questions/19998454/interface-with-default-methods-vs-abstract-class-in-java-8"&gt;http://stackoverflow.com/questions/19998454/interface-with-default-methods-vs-abstract-class-in-java-8&lt;/a&gt;\
&lt;a href="http://programmers.stackexchange.com/questions/233053/why-were-default-and-static-methods-added-to-interfaces-in-java-8-when-we-alread"&gt;http://programmers.stackexchange.com/questions/233053/why-were-default-and-static-methods-added-to-interfaces-in-java-8-when-we-alread&lt;/a&gt;\
&lt;a href="http://examples.javacodegeeks.com/java-basics/java-8-default-methods-tutorial/"&gt;http://examples.javacodegeeks.com/java-basics/java-8-default-methods-tutorial/&lt;/a&gt;&lt;/p&gt;</content><category term="Java"></category></entry><entry><title>Rockstar Java Series: Using Lambda expressions to up your game</title><link href="blog/2015/12/rockstar-java-dev-series-using-lambda-expressions.html" rel="alternate"></link><published>2015-12-16T21:23:00+05:30</published><updated>2015-12-16T21:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-12-16:blog/2015/12/rockstar-java-dev-series-using-lambda-expressions.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Java 8&lt;/strong&gt; comes with a lot more improvements and features than most people seem to realize. One such feature that can boost your productivity as a Java Programmer is &lt;strong&gt;Lambda expressions&lt;/strong&gt;.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;To learn just how beneficial this oft less understood feature is, lets take a very simple example: A &lt;code class="highlighter-rouge"&gt;Product …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Java 8&lt;/strong&gt; comes with a lot more improvements and features than most people seem to realize. One such feature that can boost your productivity as a Java Programmer is &lt;strong&gt;Lambda expressions&lt;/strong&gt;.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;To learn just how beneficial this oft less understood feature is, lets take a very simple example: A &lt;code class="highlighter-rouge"&gt;Product search function&lt;/code&gt;, and see how various traditional approaches to this problem fare out. Since eCommerce stores and shopping cart apps have become quite a buzzword of late, lets make a simple implementation of product search by name:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Navie approach
    public static List&lt;Product&gt; search(List&lt;Product&gt; stock, String name) 
    {
        ArrayList&lt;Product&gt; r = new ArrayList&lt;Product&gt;();
        for (Product p : stock)
        {
            if (p.name.compareTo(name)==0) {
                r.add(p);
            }
        }
        return r;
    }

&lt;/figure&gt;

&lt;p&gt;This is the naivest approach a programmer can possibly take when writing a product search method. The assumption here is that name is going to be the only criteria to search the product catalog. Suppose, you were working as a Java Programmer for a small eCommerce store and you wrote this function, only to realize that your users want a price comparison feature too. So, you add two extra parameters for price range to the search method like this:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Classic Java Programmer approach
    public static List&lt;Product&gt; searchWithRange(List&lt;Product&gt; stock, String name, double minValue, double maxValue)
    {
        ArrayList&lt;Product&gt; r = new ArrayList&lt;Product&gt;();
        for (Product p : stock)
        {
            if (p.name.compareTo(name)==0 &amp;&amp; (p.price&gt;=minValue &amp;&amp; p.price&lt;=maxValue)) {
                r.add(p);
            }
        }
        return r;
    }

&lt;/figure&gt;

&lt;p&gt;This is the classic Java Programmer pattern - if you want to change behavior of a class, just add more parameters to methods. Even a lot of experts do this forgetting the repercussions. For one, each and every change impacts the &lt;code class="highlighter-rouge"&gt;public interface&lt;/code&gt; of your class. Meaning, if you have distributed this class as part of a library &lt;code class="highlighter-rouge"&gt;jar&lt;/code&gt; to any fellow programmers, you must recompile your library package again just for adding one extra parameter. Expert programmers realize this, so they come up with &lt;code class="highlighter-rouge"&gt;Interfaces&lt;/code&gt;. In this example, an Expert programmer will try to separate out the search comparison logic from the search scanning (for loop) and define a &lt;code class="highlighter-rouge"&gt;ProductFilter&lt;/code&gt; interface such as this:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    interface ProductFilter
    {
        public boolean run(Product p);
    }

&lt;/figure&gt;

&lt;p&gt;This interface is just a “contract” that asks users to define a &lt;code class="highlighter-rouge"&gt;run&lt;/code&gt; method for comparing a product and return a matching boolean result to include it in the result or not. With this interface, our search method becomes lot more flexible:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Expert Java Programmer approach
    public static List&lt;Product&gt; searchWithInterface(List&lt;Product&gt; stock, ProductFilter filter)
    {
        ArrayList&lt;Product&gt; r = new ArrayList&lt;Product&gt;();
        for (Product p : stock)
        {
            if (filter.run(p)) {
                r.add(p);
            }
        }
        return r;
    }

&lt;/figure&gt;

&lt;p&gt;You see, the class is more generic and flexible now. It can take up whatever new criteria like product size (“15+ inch LCD screens”) or product ratings (“four stars plus”) you come up with. Here is a simple example of using this search method:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    List&lt;Product&gt; r =  Product.searchWithInterface(list,new ProductFilter(){
        public boolean run(Product p) {
                return (p.name=="foo" &amp;&amp; (p.price&gt;=10 &amp;&amp; p.price&lt;=50) &amp;&amp; p.size=="15in");
            }
        });

&lt;/figure&gt;

&lt;p&gt;This is how you would have done things if you were an Expert Java programmer until JDK 7.0, but JDK 8.0 has changed everything! With &lt;em&gt;lambdas&lt;/em&gt;, the above implementation becomes even more flexible and powerful. Firstly, because the interface &lt;code class="highlighter-rouge"&gt;ProductFilter&lt;/code&gt; has only one method, it is a &lt;code class="highlighter-rouge"&gt;functional interface&lt;/code&gt;. With functional interfaces, you can directly assign them &lt;code class="highlighter-rouge"&gt;lambda expressions&lt;/code&gt;, so the above search application becomes as simple as this:&lt;/p&gt;
&lt;figure class="highlight"&gt;
      List&lt;Product&gt; r =  Product.searchWithLambda(list,
        (Product p) -&gt; (p.name.equals("foo") &amp;&amp; (p.price&gt;=10 &amp;&amp; p.price&lt;=50) &amp;&amp; p.size.equals("15in"))); //rockstar2

&lt;/figure&gt;

&lt;p&gt;The syntax for a lamdba is as follows: Arguments in braces, followed by the arrow symbol, followed by statements that return a value:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(arguments) -&amp;gt; (statements)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;In fact, a Rockstar Java programmer will think that he/she no longer needs the &lt;code class="highlighter-rouge"&gt;ProductFilter&lt;/code&gt; interface now. That’s because the package &lt;code class="highlighter-rouge"&gt;java.util.function&lt;/code&gt; comes bundled with several generic interfaces that are pretty easy to use with lambdas. For instance, using the &lt;code class="highlighter-rouge"&gt;Predicate&amp;lt;T&amp;gt;&lt;/code&gt; Interface, our search method no longer needs an interface now!&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //Rockstar Java Programmer approach
    public static List&lt;Product&gt;  searchWithLambda(List&lt;Product&gt; stock, Predicate&lt;Product&gt; filter) 
    {
        ArrayList&lt;Product&gt; r = new ArrayList&lt;Product&gt;();
        for (Product p : stock)
        {
            if (filter.test(p)) {
                r.add(p);
            }
        }
        return r;
    }

&lt;/figure&gt;

&lt;p&gt;The interface &lt;code class="highlighter-rouge"&gt;java.util.function.Predicate&lt;/code&gt; is a generic interface that contains a generic method named &lt;code class="highlighter-rouge"&gt;test()&lt;/code&gt; (notice we changed &lt;code class="highlighter-rouge"&gt;run&lt;/code&gt; to &lt;code class="highlighter-rouge"&gt;test&lt;/code&gt; in order to use this interface). The package &lt;code class="highlighter-rouge"&gt;java.util.function.*&lt;/code&gt; contains several other useful interfaces like &lt;code class="highlighter-rouge"&gt;Predicate&lt;/code&gt; that can help you in many such situations.&lt;/p&gt;
&lt;p&gt;Good programming is all about minimalism and reducing code-bloat. Whilst implementing a new paradigm in your existing code might sometime clash with your other constraints like delivery time and number of available developers, I personally think that in the long run, all these efforts spent usually pay off. The pay-off could be in the form of more re-usability, more readability of code, fewer bugs and in most cases all of them.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/prahladyeri/0577b5a01ccaa8206e80"&gt;Here&lt;/a&gt; is the complete implementation of &lt;code class="highlighter-rouge"&gt;Product.java&lt;/code&gt;. Today we learned about Lambda expressions, an important new feature in Java 8. In the next part of the series we will learn about &lt;code class="highlighter-rouge"&gt;default methods&lt;/code&gt;, another great Java feature to make your life easier!&lt;/p&gt;
&lt;p&gt;References:\
&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html"&gt;https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html&lt;/a&gt;\
&lt;a href="https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html"&gt;https://docs.oracle.com/javase/tutorial/java/javaOO/lambdaexpressions.html&lt;/a&gt;&lt;/p&gt;</content><category term="Java"></category></entry><entry><title>How to start Android App Development</title><link href="blog/2015/11/how-to-start-android.html" rel="alternate"></link><published>2015-11-26T22:36:00+05:30</published><updated>2015-11-26T22:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-11-26:blog/2015/11/how-to-start-android.html</id><summary type="html">&lt;p&gt;One of the most frequently asked questions on almost any social networking sites these days is how do I start android app programming? Indeed, it is as if Android Development has become some abstract and obscure layer of programming model that only few Illuminati sort of individuals seem accomplished at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of the most frequently asked questions on almost any social networking sites these days is how do I start android app programming? Indeed, it is as if Android Development has become some abstract and obscure layer of programming model that only few Illuminati sort of individuals seem accomplished at.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;There is no doubt that the process of compiling an android app from source-code to the actual bytecode that runs on your smartphone is a bit more complex than compiling your normal &lt;code class="highlighter-rouge"&gt;C&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;Java&lt;/code&gt; program. And it seems even more complex than it deserves to be because of some drastic changes Google has introduced with Android Platform, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android is a whole new Operating System which comes with its own concepts.&lt;/li&gt;
&lt;li&gt;Android has a completely new SDK which has both similarities and differences with the Standard &lt;code class="highlighter-rouge"&gt;Java SE&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Android introduces new programming models for smartphone interfaces like &lt;code class="highlighter-rouge"&gt;Activity&lt;/code&gt;, &lt;code class="highlighter-rouge"&gt;Intent&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;Android introduces a completely new way of building GUI interfaces using an XML dialect.&lt;/li&gt;
&lt;li&gt;Android makes frequent changes to its IDE and keeps switching its recommended IDE.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Android world is always in a flux, though it has been stabilizing a bit since the last year. &lt;code class="highlighter-rouge"&gt;Eclipse&lt;/code&gt; plus the &lt;code class="highlighter-rouge"&gt;ADT Plugin&lt;/code&gt; was the original recommended IDE and still used by many, but a few years back that changed and now Android’s official development way is the &lt;code class="highlighter-rouge"&gt;Android Studio&lt;/code&gt; which is nothing but a decorated version of &lt;code class="highlighter-rouge"&gt;Intellij IDEA&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In any case, it is important to note that learning Android Development is a full-time job, at least until you grasp the basics. Think of it as just another branch of development, just like you have the traditional &lt;em&gt;Desktop Programming&lt;/em&gt; using &lt;code class="highlighter-rouge"&gt;Visual Studio or .NET&lt;/code&gt;, &lt;em&gt;Web Programming&lt;/em&gt; using &lt;code class="highlighter-rouge"&gt;PHP/Python/HTML/CSS&lt;/code&gt;, this is the arena of &lt;em&gt;Mobile Apps Development&lt;/em&gt; or specifically, &lt;em&gt;Android Development&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;But that doesn’t mean you need to know the intricacies of how telephony works or how does your app interact with SIM-cards or the Contacts on your SDCard. Thankfully, Android has already done that low level job for you. Android is based on &lt;code class="highlighter-rouge"&gt;Linux&lt;/code&gt; kernel which is very powerful and secure when it comes to controlling a handheld device. On top of Linux, Android ships with its own libraries that interact with the kernel, along with the &lt;code class="highlighter-rouge"&gt;Dalvik&lt;/code&gt; runtime. &lt;code class="highlighter-rouge"&gt;Dalvik&lt;/code&gt; is nothing but a miniaturized version of your Java Runtime Engine (affectionately called &lt;code class="highlighter-rouge"&gt;JRE&lt;/code&gt;). The thing about &lt;code class="highlighter-rouge"&gt;Dalvik&lt;/code&gt; is that it is much less resource intensive compared to &lt;code class="highlighter-rouge"&gt;JRE&lt;/code&gt; since it is specifically designed for smart devices. Here is the entire android stack or architecture that you should keep referring to througout your app development process:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Anatomy Physiology of an Android. Licensed under CC BY-SA 3.0 via Commons" src="/uploads/old/Android-System-Architecture.png"&gt;&lt;/p&gt;
&lt;p&gt;^&lt;em&gt;Courtesy:\ “Android-System-Architecture”\ by\ Smieh\ -\ Anatomy\ Physiology\ of\ an\ Android.&lt;/em&gt;^&lt;/p&gt;
&lt;p&gt;The top layer of the stack consists of &lt;em&gt;Applications&lt;/em&gt; or apps that we generally use like Contacts, Browser, Home (the Launcher screen that first comes when you start your device), Phone (the dialler) are all apps.&lt;/p&gt;
&lt;p&gt;The second layer consists of &lt;em&gt;Frameworks&lt;/em&gt; - i.e stuff that the apps are made of. As you will soon learn, there are things like &lt;em&gt;Activities&lt;/em&gt;, &lt;em&gt;Views&lt;/em&gt;, &lt;em&gt;Content Providers&lt;/em&gt;, etc. which are going to be the &lt;em&gt;building blocks&lt;/em&gt; of our apps. The Android OS manages these blocks as soon as the user starts our app and starts using it.&lt;/p&gt;
&lt;h2&gt;Pre-requisites&lt;/h2&gt;
&lt;p&gt;There are a few things that you already must know in order to start android-programming, the most important being &lt;code class="highlighter-rouge"&gt;Core Java&lt;/code&gt;, also known as &lt;code class="highlighter-rouge"&gt;Java SE&lt;/code&gt; for Standard Edition (not &lt;code class="highlighter-rouge"&gt;EE&lt;/code&gt; or Enterprise Edition). If you don’t know it, then go back to school (or a self-learning website) and learn that first. Java programming introduces enough nuances and complexities of its own, so you will likely get overwhelmed by both Java and Android if you try to learn them at the same time. Recommended Java tutorial site is the one found at &lt;a href="https://docs.oracle.com/javase/tutorial/"&gt;Oracle website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The other thing you should know about is how to use &lt;code class="highlighter-rouge"&gt;Eclipse&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;IntelliJ&lt;/code&gt; IDEs as you will have to use either one of them to start Android Programming. However, this isn’t a &lt;code class="highlighter-rouge"&gt;hard requirement&lt;/code&gt; like that of Java. IDE is something that you can get used to after using it for a while. It might take some google-searches or errands at &lt;code class="highlighter-rouge"&gt;StackOverflow&lt;/code&gt; at first, but once you get used to it for sometime, you can figure out most things pretty easily.&lt;/p&gt;
&lt;p&gt;Thirdly, it is not mandatory but helpful to know some good design principles. The way you style your widgets like TextViews, Labels, EditTexts, etc. very much determines whether people will like your app or not. There is also the thing that when you launch you app in the market, people will judge your app by its cover or front-screen and your download count will likely depend on that. Of course, you can hire a graphic designer for this or if you are a DIY guy like me, learn a professional Image Editing software like &lt;code class="highlighter-rouge"&gt;GIMP&lt;/code&gt; (on Linux) or &lt;code class="highlighter-rouge"&gt;Adobe Photoshop&lt;/code&gt; (on Windows).&lt;/p&gt;
&lt;h2&gt;Install the Java JDK&lt;/h2&gt;
&lt;p&gt;Now that you have had your breakfast and kept aside all your distractions to focus on the &lt;code class="highlighter-rouge"&gt;Android Mission&lt;/code&gt;, the first thing to do is install the Java JDK software which is required in order to write and compile Android Apps. Again, head over to Oracle website where you can find the &lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;latest download for Java SE&lt;/a&gt;. Choose your &lt;em&gt;OS&lt;/em&gt; and preferred version. Don’t install &lt;code class="highlighter-rouge"&gt;Netbeans&lt;/code&gt; unless you need it for any other purpose, we will be using either &lt;code class="highlighter-rouge"&gt;Eclipse&lt;/code&gt; or &lt;code class="highlighter-rouge"&gt;Android Studio&lt;/code&gt; for app development.&lt;/p&gt;
&lt;h2&gt;Install the Android SDK, SDK Tools and Platform Tools&lt;/h2&gt;
&lt;p&gt;Head over to &lt;a href="http://developer.android.com/sdk/index.html"&gt;Android Developer site&lt;/a&gt; and download the Android SDK. Now, if you want to use &lt;code class="highlighter-rouge"&gt;Android Studio&lt;/code&gt; (or you are a big fan of the &lt;code class="highlighter-rouge"&gt;grade&lt;/code&gt; build system which is default there), download that IDE which includes the entire bundle. Otherwise, head downwards to find an option called “SDK only” to download the minimal commandline version or if you want to use &lt;code class="highlighter-rouge"&gt;Eclipse&lt;/code&gt; with &lt;code class="highlighter-rouge"&gt;ADT&lt;/code&gt; plugin. The thing here is that you need at least one IDE to develop otherwise it gets pretty complex to hand-code the &lt;code class="highlighter-rouge"&gt;xml&lt;/code&gt; layouts, double-compile your code, first to Java bytecode (&lt;code class="highlighter-rouge"&gt;.class&lt;/code&gt;) and then to Dalvik bytecode (&lt;code class="highlighter-rouge"&gt;.dex&lt;/code&gt;) and finally zipping them into &lt;code class="highlighter-rouge"&gt;APK&lt;/code&gt; (the &lt;code class="highlighter-rouge"&gt;JAR&lt;/code&gt; equivalent), that you are better off delegating these low details to an IDE.&lt;/p&gt;
&lt;p&gt;Again, its important to know, why double compilation is required to build Android apps. You see, your code is first compiled to Java bytecode and then, &lt;code class="highlighter-rouge"&gt;Dalvik&lt;/code&gt; compiler takes that output and compiles it to &lt;code class="highlighter-rouge"&gt;dex&lt;/code&gt; or Dalvik bytecode (why that happens is an interesting topic for my another blog post!). Here is how this happens:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dalvik Compilation Process" src="/uploads/old/Dalvik_Compilation_Process.png"&gt;&lt;/p&gt;
&lt;h2&gt;Build that Hello World App&lt;/h2&gt;
&lt;p&gt;Head over to the &lt;a href="http://developer.android.com/tools/studio/studio-config.html"&gt;Configuration Section&lt;/a&gt; first to ensure that you’ve setup your IDE properly. Then, the &lt;a href="http://developer.android.com/tools/workflow/index.html"&gt;Workflow section&lt;/a&gt; is your &lt;em&gt;Bible&lt;/em&gt; (or &lt;em&gt;Geeta&lt;/em&gt; or &lt;em&gt;Qoran&lt;/em&gt; or whatever thrills you). Read it, re-read it, bookmark it, keep referring to it until you are proficient in building and running apps. Needless to say, if you face any issues, there is always &lt;code class="highlighter-rouge"&gt;Google&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;StackOverflow&lt;/code&gt; which should answer all your queries.&lt;/p&gt;
&lt;p&gt;In my next post, I will be covering about android features and a doing some basic things like layout design, interaction with &lt;code class="highlighter-rouge"&gt;sqlite&lt;/code&gt; databases, etc. All the best!&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://developer.android.com/tools/workflow/index.html"&gt;Android Workflow section&lt;/a&gt;\
&lt;a href="http://developer.android.com/tools/studio/studio-config.html"&gt;Android Configuration Section&lt;/a&gt;\
&lt;a href="http://developer.android.com/sdk/index.html"&gt;Android SDK Downloads&lt;/a&gt;\
&lt;a href="https://en.wikipedia.org/wiki/Android_(operating_system)"&gt;The Android Operating System&lt;/a&gt;\
&lt;a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"&gt;Latest download for Java SE&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>Are your Firefox addons really that safe? - An Insider Story</title><link href="blog/2015/11/are-your-firefox-addons-really-that-safe-an-insider-story.html" rel="alternate"></link><published>2015-11-09T22:36:00+05:30</published><updated>2015-11-09T22:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-11-09:blog/2015/11/are-your-firefox-addons-really-that-safe-an-insider-story.html</id><summary type="html">&lt;p&gt;Firefox is one of the most competitive FOSS browsers out there, there is no denying it. Mozilla also has strict guidelines regarding what goes into their repos. And in the spirit of all things open source, you may naturally tend to believe that developers who have written your coolest new …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Firefox is one of the most competitive FOSS browsers out there, there is no denying it. Mozilla also has strict guidelines regarding what goes into their repos. And in the spirit of all things open source, you may naturally tend to believe that developers who have written your coolest new &lt;em&gt;million ratings plus&lt;/em&gt; addon are also held to Mozilla’s high standards and subject to all quality audits.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Well, read this short story before subjecting yourself to that blind faith and just clicking on every &lt;code class="highlighter-rouge"&gt;Add to Firefox&lt;/code&gt; button in your browser.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Mozilla plugins" src="/uploads/old/Mozilla_plugins.png"&gt;&lt;/p&gt;
&lt;p&gt;This story is about two popular firefox addons, &lt;em&gt;Adblock-Plus&lt;/em&gt; and &lt;em&gt;Noscript&lt;/em&gt;. A few years ago, the Noscript addon was at least partially funded by advertisements. To make a long tale short, the Noscript developer, Giorgio Maone decided to make Noscript meddle with the settings of ABP plugin to whitelist his own sites that earned him advertisement revenue. Of course, this attracted a lot of &lt;a href="https://adblockplus.org/blog/attention-noscript-users"&gt;unwanted attention&lt;/a&gt; and a code war ensued between the ABP dev Wladimir Palantir and Giorgio. Things would not have gone that far, had Giorgio just “whitelisted” his advert websites using ABP’s API or other open methods. The fact that he actually hacked into Firefox internals to make his own addon override Wladimir’s ABP is what made all hell break loose.&lt;/p&gt;
&lt;p&gt;The most ironical about this is the fact that &lt;em&gt;Noscript&lt;/em&gt; itself is a security-plugin, meaning it is used to block adware to keep the user safe! If the developer of a plugin like &lt;em&gt;Noscript&lt;/em&gt; would do this, then just think about what all stupid things those random developers of funky little addons might be doing. Of course, Giorgio &lt;a href="http://hackademix.net/2009/05/04/dear-adblock-plus-and-noscript-users-dear-mozilla-community/"&gt;publicly apologized&lt;/a&gt; for the debacle he had caused and reading his sincere apology might almost make you forget all qualms about addon security. But the issue here is not about this little turf war between ABP and Noscript, nor is it about what Giorgio did was right or wrong, he handled the situation correctly, regardless. The larger issue here is the security architecture in the entire firefox ecosystem.&lt;/p&gt;
&lt;p&gt;You see, when I install a Chrome addon, it asks me as a user what all permissions it needs to be granted. I will know at once, whether it is going to write to my file system, or access the HTML tags in the browser, and it most certainly tells me whether it could play havoc with the other installed addons or not (as happened in this case). Its high time that Firefox too needs to come up with such granular security levels when it comes to installing addons. Only then, incidents like the Noscript debacle can be safely prevented.&lt;/p&gt;
&lt;p&gt;So, next time when you click on that &lt;em&gt;Add to Firefox&lt;/em&gt; button on the install page, just think about what all goes in a developer’s mind when they write those plugins. I know there are a lot of great FOSS developers (Wladimir and Giorgio included) who selflessly contribute to the open source software, but it is not always apparent whether it is purely out of selflessness or there is an insidious motive on their part to make money by using the users of their addons.&lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://adblockplus.org/blog/attention-noscript-users"&gt;https://adblockplus.org/blog/attention-noscript-users&lt;/a&gt;\
&lt;a href="http://hackademix.net/2009/05/04/dear-adblock-plus-and-noscript-users-dear-mozilla-community"&gt;http://hackademix.net/2009/05/04/dear-adblock-plus-and-noscript-users-dear-mozilla-community&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>How to add HTML tag highlighting to Geany</title><link href="blog/2015/11/how-to-add-html-tag-highlighting-geany.html" rel="alternate"></link><published>2015-11-07T21:36:00+05:30</published><updated>2015-11-07T21:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-11-07:blog/2015/11/how-to-add-html-tag-highlighting-geany.html</id><summary type="html">&lt;p&gt;Ever since I bid farewell to &lt;code class="highlighter-rouge"&gt;Windows&lt;/code&gt; after they introduced that horrible &lt;code class="highlighter-rouge"&gt;Metro&lt;/code&gt; interface in &lt;code class="highlighter-rouge"&gt;Windows 8&lt;/code&gt;, I had been on the lookout for FOSS Linux alternatives that can run easily on my &lt;code class="highlighter-rouge"&gt;ubuntu 14.04&lt;/code&gt; machine. One such lookout was a replacement for &lt;code class="highlighter-rouge"&gt;Notepad++&lt;/code&gt; as I always need a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever since I bid farewell to &lt;code class="highlighter-rouge"&gt;Windows&lt;/code&gt; after they introduced that horrible &lt;code class="highlighter-rouge"&gt;Metro&lt;/code&gt; interface in &lt;code class="highlighter-rouge"&gt;Windows 8&lt;/code&gt;, I had been on the lookout for FOSS Linux alternatives that can run easily on my &lt;code class="highlighter-rouge"&gt;ubuntu 14.04&lt;/code&gt; machine. One such lookout was a replacement for &lt;code class="highlighter-rouge"&gt;Notepad++&lt;/code&gt; as I always need a handy editor for scripting and other miscellaneous tasks (such as writing this draft in markdown syntax). For large projects, there are always “heavy” things like &lt;code class="highlighter-rouge"&gt;eclipse&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;netbeans&lt;/code&gt; but I generally tend to avoid them if I can.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Now, the bread-and-butter &lt;code class="highlighter-rouge"&gt;Linux&lt;/code&gt; alternative for &lt;code class="highlighter-rouge"&gt;Notepad++&lt;/code&gt; is &lt;a href="http://www.geany.org/"&gt;Geany&lt;/a&gt;, a light-weight editor developed by Enrico Tröger. Geany has all the wonderful features that &lt;code class="highlighter-rouge"&gt;Notepad++&lt;/code&gt; has, except one: There is no highlighting available for matching html tag pairs. And as any Web Developer worth his salt will know, an HTML file will soon start turning out to be a huge cosmic soup of tags and braces once the app starts evolving, and this feature can become handy in the situation. And whilst there is a plugin called &lt;code class="highlighter-rouge"&gt;Pair Tag Highlighter&lt;/code&gt;, it isn’t readily available in the ubuntu 14.04 repository. Like many users, I decided to ignore this small nagging inconvenience and moved on. But recently, I was able to spare some time from my daily errands and decided to have a go at it.&lt;/p&gt;
&lt;p&gt;The solution to this isn’t that apparent as even my googlefu had to go through a lot of filters before I came across this &lt;a href="http://askubuntu.com/questions/589172/html-pair-tag-highlight-alternative-for-geany-editor-on-ubuntu-14-04"&gt;only post&lt;/a&gt; that gave me the solution, though it was a bit more involved and required me to checkout a github repo and build the plugin. This means one of two things: Either a lot of people are not interested in &lt;code class="highlighter-rouge"&gt;Geany&lt;/code&gt; any more and moved on to other editors like &lt;code class="highlighter-rouge"&gt;Sublime Text&lt;/code&gt;, or that they have decided to live with this inconvenience. If you are from the latter group, your inconvenience is soon going to be over. All you have to do is this:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install git
cd /tmp
git clone https://github.com/geany/geany-plugins.git
cd geany-plugins/
sed -i &amp;#39;s/1.25/1.23/&amp;#39; wscript
./waf configure --enable-plugins=pairtaghighlighter
make all
sudo make install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;Things to note:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The fifth line uses the &lt;code class="highlighter-rouge"&gt;sed&lt;/code&gt; tool to change the minimum required version in &lt;code class="highlighter-rouge"&gt;wscript&lt;/code&gt; from &lt;code class="highlighter-rouge"&gt;1.25&lt;/code&gt; to &lt;code class="highlighter-rouge"&gt;1.23&lt;/code&gt;. However, after I’ve written this article, the plugin developer might have raised the minimum requirement and changed it to &lt;code class="highlighter-rouge"&gt;1.26&lt;/code&gt; or something. So, replace accordingly.&lt;/li&gt;
&lt;li&gt;Make sure you have the latest version of &lt;code class="highlighter-rouge"&gt;python&lt;/code&gt; installed in order to use the &lt;code class="highlighter-rouge"&gt;waf&lt;/code&gt; tool. You also need to install &lt;code class="highlighter-rouge"&gt;intltool&lt;/code&gt; package if it does not already exist.&lt;/li&gt;
&lt;li&gt;If all goes well, restart Geany and go to &lt;code class="highlighter-rouge"&gt;Tools-&amp;gt;Plugin Manager&lt;/code&gt; and enable the Plugin &lt;code class="highlighter-rouge"&gt;Pair Tag Highlighter&lt;/code&gt;. Once you do that, your HTML code will start highlighting the opening and closing tags as shown below:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="Geany with HTML pair tag highlighting" src="/uploads/old/geany-tag-highlight.png"&gt;&lt;/p&gt;
&lt;h3&gt;References:&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://askubuntu.com/questions/589172/html-pair-tag-highlight-alternative-for-geany-editor-on-ubuntu-14-04"&gt;http://askubuntu.com/questions/589172/html-pair-tag-highlight-alternative-for-geany-editor-on-ubuntu-14-04&lt;/a&gt;\
&lt;a href="http://askubuntu.com/questions/616369/a-alternative-to-install-pairtaghighlighter-for-geany-1-23-21"&gt;http://askubuntu.com/questions/616369/a-alternative-to-install-pairtaghighlighter-for-geany-1-23-21&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>A collection of random hacks - Ubuntu</title><link href="blog/2015/07/a-collection-of-random-hacks-ubuntu.html" rel="alternate"></link><published>2015-07-06T21:36:00+05:30</published><updated>2015-07-06T21:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-07-06:blog/2015/07/a-collection-of-random-hacks-ubuntu.html</id><summary type="html">&lt;p&gt;Whether you are a sysadmin, developer or just a user, if you face a non-trivial issue while setting up any software, you generally head over to sites like &lt;code class="highlighter-rouge"&gt;stackoverflow.com&lt;/code&gt; to find any solutions. If the problem is solved and you are happy, you generally do two things: Bookmark/Star …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whether you are a sysadmin, developer or just a user, if you face a non-trivial issue while setting up any software, you generally head over to sites like &lt;code class="highlighter-rouge"&gt;stackoverflow.com&lt;/code&gt; to find any solutions. If the problem is solved and you are happy, you generally do two things: Bookmark/Star that post, and secondly make a note to your own workflow about that issue for future references. For what its worth, here is the collection of such notes prepared by me for &lt;code class="highlighter-rouge"&gt;ubuntu 12.04 LTS&lt;/code&gt;. However, most solutions should work on &lt;code class="highlighter-rouge"&gt;14.04&lt;/code&gt; too.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ubuntu Logo" src="/uploads/old/3D_Ubuntu_7.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;To boot ubuntu to &lt;a href="http://askubuntu.com/questions/52089/how-do-i-boot-to-a-command-line-interface-instead-of-a-gui"&gt;command prompt intead of GUI&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Modify your file &lt;code class="highlighter-rouge"&gt;/etc/default/grub&lt;/code&gt; with &lt;code class="highlighter-rouge"&gt;GRUB_CMDLINE_LINUX_DEFAULT="text"&lt;/code&gt;. Optionally, also uncomment this line:&lt;/p&gt;
&lt;p&gt;#GRUB_TERMINAL=console&lt;/p&gt;
&lt;p&gt;and do &lt;code class="highlighter-rouge"&gt;sudo update-grub&lt;/code&gt;. The machine will boot in text mode.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To start the graphical interface just do&lt;/p&gt;
&lt;p&gt;sudo service lightdm start #could be gdm or startx in some situations&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="create-a-private-repo-based-on-a-previously-burned-aptoncd-backup-iso-file"&gt;Create a private repo based on a previously burned aptoncd backup (.ISO file)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Create a mount point in /etc/fstab that points to that ISO file on your file system:\
    &lt;code class="highlighter-rouge"&gt;/path/to/iso    /media/mount-point  auto    defaults 0 0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add this line in /etc/apt/sources.list: &lt;code class="highlighter-rouge"&gt;deb [arch=i386] file:/media/repo-name/ /&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Just perform a &lt;code class="highlighter-rouge"&gt;sudo apt-get update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To upgrade packages, don’t use the ubuntu GUI, instead do &lt;code class="highlighter-rouge"&gt;sudo apt-get upgrade&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Add a user to a group&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Edit &lt;code class="highlighter-rouge"&gt;/etc/group&lt;/code&gt; file and add the user after the &lt;code class="highlighter-rouge"&gt;&amp;lt;groupName&amp;gt;:&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Virtualbox (ubuntu guest configuration)&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Insert VBoxGuestAdditions ISO CD and auto run the script file.&lt;/li&gt;
&lt;li&gt;Share folders from host machine (Shares are auto-mounted in /media/sf_* folders&lt;/li&gt;
&lt;li&gt;Add user: &lt;code class="highlighter-rouge"&gt;sudo usermod -aG vboxsf $(whoami)&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Ubuntu performance tweaks&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;/etc/sysctl.conf =&amp;gt; vm.swappiness=10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;/etc/apt/apt.conf.d/00aptitude   =&amp;gt;  Acquire::Languages "none";&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;/etc/fstab  =&amp;gt; set noatime&lt;/code&gt;, for example:\
    &lt;code class="highlighter-rouge"&gt;/dev/sda7          /chroot          ext2          defaults,noatime          1  2&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Making Geany the default editor (&lt;a href="http://askubuntu.com/questions/194712/how-do-i-make-geany-my-default-editor-on-ubuntu"&gt;source&lt;/a&gt;)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;xdg-mime default geany.desktop $(grep MimeType /usr/share/applications/geany.desktop | sed 's/MimeType=//' | sed 's/;/ /g')&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;To create an ssh tunnel between local port 9999 and a remote server (dynamic port forwarding/socks)&lt;/h2&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -C -ND 9999 username@sshserver.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;h2&gt;Graphics&lt;/h2&gt;
&lt;p&gt;To check whether we are using sna or uxa:\
&lt;code class="highlighter-rouge"&gt;apt-cache policy xserver-xorg-video-intel* | grep Installed&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If the results of Installed are under 2.20 (e.g. 2:2.17.0-1ubuntu4 0), it means we are using the older uxa drivers.\
Proceed with the ppa installataion steps in the link.&lt;/p&gt;
&lt;p&gt;References:\
&lt;a href="http://askubuntu.com/questions/225356/how-can-i-enable-the-sna-acceleration-method-for-intel-cards-under-ubuntu-12-04"&gt;ubuntu&lt;/a&gt;\
&lt;a href="https://ask.fedoraproject.org/en/question/39843/how-to-enable-sna-acceleration-method-for-intel-cards-in-fedora-20/"&gt;fedora&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Resetting a modem/usb-device using usb-modeswitch&lt;/h2&gt;
&lt;p&gt;We can try if a reset of our USB device helps resurrecting it. We first need to find out the vendor ID, and the product ID easiest by\
lsusb.&lt;/p&gt;
&lt;p&gt;This will give information e.g. like follows:\
Bus 003 Device 002: ID 04f9:0224 Brother Industries, Ltd&lt;/p&gt;
&lt;p&gt;In this example the vendor ID is 04f9, product ID is 0224 (right, its my printer).\
To reset the device we may then issue\
sudo usb_modeswitch -R -v -p&lt;/p&gt;
&lt;h2&gt;cpu-scaling/battery-saving&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;install indicator-cpufreq package&lt;/li&gt;
&lt;li&gt;[Edit file &lt;code class="highlighter-rouge"&gt;/etc/init.d/ondemand&lt;/code&gt; and set default from ondemand to powersave]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://bugs.launchpad.net/indicator-cpufreq/+bug/1082868&lt;/li&gt;
&lt;li&gt;https://wiki.debian.org/HowTo/CpuFrequencyScaling&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;laptop mode&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;package: pm-powersave (see manpages)&lt;/li&gt;
&lt;li&gt;check: cat /proc/sys/vm/laptop_mode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://askubuntu.com/questions/312005/is-laptop-mode-tools-still-relevant-on-13-04&lt;/li&gt;
&lt;li&gt;http://askubuntu.com/questions/172391/is-laptop-mode-tools-still-relevant-for-12-04-and-the-3-x-kernels\
    http://askubuntu.com/questions/170667/how-to-analysis-the-output-of-powertop-to-increase-battery-lifetime&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;apt tweaks&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removing translations:&lt;ul&gt;
&lt;li&gt;create a file named &lt;code class="highlighter-rouge"&gt;/etc/apt/apt.conf.d/99translations&lt;/code&gt; &amp;amp; put the following in it: &lt;code class="highlighter-rouge"&gt;Acquire::Languages "none";&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You may also need to remove existing translation files in &lt;code class="highlighter-rouge"&gt;/var/lib/apt/lists/&lt;/code&gt; - filter by &lt;code class="highlighter-rouge"&gt;*Translation*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;References:&lt;ul&gt;
&lt;li&gt;http://askubuntu.com/questions/74653/how-can-i-remove-the-translation-entries-in-apt&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reconfigure locales:&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;dpkg --reconfigure locales&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Search for a package:&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;apt-cache search pygame&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;- dpkg --search pygame&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Show package status: &lt;code class="highlighter-rouge"&gt;dpkg --list python-pygame&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Show package details: &lt;code class="highlighter-rouge"&gt;apt-cache show python-pygame&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Search for a package’s dependency (Ex: python-pygame): &lt;code class="highlighter-rouge"&gt;apt-cache depends python-pygame&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;git basics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;clone a url:\
    &lt;code class="highlighter-rouge"&gt;git clone url-name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;check status:\
    &lt;code class="highlighter-rouge"&gt;git status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add/remove files:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="highlight"&gt;
        git add &lt;file-name&gt;
        git add .
        git rm &lt;file-name&gt;
        git rm .

&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;commit:\
    &lt;code class="highlighter-rouge"&gt;git commit -m "message"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;exclude/include file:&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;git update-index --assume-unchanged path/to/file&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;git update-index --no-assume-unchanged path/to/file&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Set ubuntu/debian to use bios time instead of converting as per timezones&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;option1: open: &lt;code class="highlighter-rouge"&gt;/etc/default/rcS&lt;/code&gt; and add/change this line:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="highlight"&gt;

        # Set UTC=yes if your hardware clock is set to UTC (GMT)
        UTC=no


&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;option 2: open /etc/adjtime and change &lt;code class="highlighter-rouge"&gt;'UTC'&lt;/code&gt; to &lt;code class="highlighter-rouge"&gt;'LOCAL'&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;option 3: &lt;code class="highlighter-rouge"&gt;hwclock --systohc --localtime #(Explore these options)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;greeter configuration on ubuntu&lt;/h2&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;view defaults: /etc/lightdm/lightdm.conf
set defaults: /usr/lib/lightdm/lightdm-set-defaults
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;h2&gt;start/disable init services&lt;/h2&gt;
&lt;p&gt;Refer http://askubuntu.com/questions/138487/how-to-keep-apache-and-mysql-from-starting-automatically&lt;/p&gt;
&lt;h2&gt;LAMP (debian/ubuntu)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;disable apache at boot:\
    &lt;code class="highlighter-rouge"&gt;sudo update-rc.d apache2 disable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;enable apache at boot:\
    &lt;code class="highlighter-rouge"&gt;sudo update-rc.d apache2 enable&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;start/stop at will:\
    &lt;code class="highlighter-rouge"&gt;sudo update-rc.d service start&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;list available apache modules:\
    &lt;code class="highlighter-rouge"&gt;apache2ctl -M&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;enable a module:\
    &lt;code class="highlighter-rouge"&gt;a2enmod &amp;lt;modulename&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;disable a module:\
    &lt;code class="highlighter-rouge"&gt;a2dismod &amp;lt;modulename&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Service control:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;services (Traditional):&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;/etc/init.d/apache2 restart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;/etc/init.d/apache2&lt;/code&gt; (TO show a list of all command options)&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;update-rc.d&lt;/code&gt; (or in RedHat based distros, &lt;code class="highlighter-rouge"&gt;chkconfig&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;services (Upstart):&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;status apache2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;service apache2 status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;service mysql status&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;service apache2 restart&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;services (systemd):\
    &lt;code class="highlighter-rouge"&gt;systemctl disable apache2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Disable/Enable services (ubuntu/debian) - works for any service with .conf configured. example: &lt;code class="highlighter-rouge"&gt;/etc/init/mysql.conf&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;method-1:
    ::: {.highlighter-rouge}
    &lt;code&gt;{.highlight}
      #disable service at startup
      sudo sh -c "echo 'manual' &amp;gt;&amp;gt; /etc/init/mysql.override"
      sudo sh -c "echo 'manual' &amp;gt;&amp;gt; /etc/init/bluetooth.override"
      #enable service at startup
      sudo rm /etc/init/mysql.override&lt;/code&gt;
    ```
    :::&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;method-2 (for ubuntu 12.04):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="highlight"&gt;
          sudo nano /etc/init/mysql.conf #Then comment out the hashing section like this:
            #start on (net-device-up
                      #and local-filesystems
                      #and runlevel [2345])

&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;list all services: &lt;code class="highlighter-rouge"&gt;initctl list&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;iptables basics:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Save/Restore state:\
    iptables-save &gt; /etc/iptables.rules #save current state to file\
    iptables-restore \&amp;lt; /etc/iptables.rules #restore state from file&lt;/li&gt;
&lt;li&gt;Save state (using iptables-persistent package):&lt;ul&gt;
&lt;li&gt;method-1: install the package and run: &lt;code class="highlighter-rouge"&gt;sudo /etc/init.d/iptables-persistent save&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;method-2 for IPv4 rules: sudo su -c &lt;code class="highlighter-rouge"&gt;iptables-save &amp;gt; /etc/iptables/rules.v4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;method-3 for IPv6 rules: sudo su -c &lt;code class="highlighter-rouge"&gt;ip6tables-save &amp;gt; /etc/iptables/rules.v6&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Auto load on network up - Append this command to an iface config in &lt;code class="highlighter-rouge"&gt;/etc/network/interfaces&lt;/code&gt;:\
    post-up iptables-restore \&amp;lt; /etc/iptables.rules&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="http://askubuntu.com/questions/119393/how-to-save-rules-of-the-iptables"&gt;reference&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;network/tcp tweaks:&lt;/h2&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sysctl -w net.ipv4.tcp_timestamps=0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;h2&gt;Add/Edit Unity Launcher shortcut:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;.desktop files are stored: globally in /usr/share/applications, locally in \~/.local/share/applications.&lt;/li&gt;
&lt;li&gt;create a file named &lt;code class="highlighter-rouge"&gt;~/.local/share/applications/[name].desktop&lt;/code&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="highlight"&gt;
      [Desktop Entry]
        Encoding=UTF-8
        Name=PyCharm 3.0
        Comment=Jetbrains Python IDE
        Exec=/home/sysadmin/programs/pycharm-community-3.0/bin
        Icon=/home/sysadmin/programs/pycharm-community-3.0/bin/pycharm.png
        Categories=Application;Development;Python;IDE
        Version=1.0
        Type=Application
        Terminal=0

&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Do this only if required: add this entry using dconf-editor: desktop-&gt; unity-&gt; launcher -&gt; favourites&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reset Unity (12.10 or later, but not tested!!)&lt;/p&gt;
&lt;figure class="highlight"&gt;
    dconf reset -f /org/compiz/
    logoff and back in
    unity --reset-icons &amp;disown

&lt;/figure&gt;

&lt;p&gt;Reset Unity (12.04 or earlier):&lt;/p&gt;
&lt;figure class="highlight"&gt;
    unity --reset &amp;disown
    logoff and back in

&lt;/figure&gt;

&lt;p&gt;Start python web server module:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    python -m SimpleHTTPServer 8000

&lt;/figure&gt;

&lt;p&gt;wifi commands:\
show available wifi interfaces:\
&lt;code class="highlighter-rouge"&gt;iwconfig&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu window buttons messed up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open gconf-editor and go to key: &lt;code class="highlighter-rouge"&gt;/apps/metacity/general/button_layout&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;to set controls on right side, set value to &lt;code class="highlighter-rouge"&gt;:minimize,maximize,close&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;to set controls on left side (defaults in 12.04), set value to &lt;code class="highlighter-rouge"&gt;close,maximize,minimize:&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Start Netbeans with –cp option:\
&lt;code class="highlighter-rouge"&gt;netbeans -cp:a /usr/share/java/xercesImpl.jar&lt;/code&gt;\
To add above command to netbeans startup, edit &lt;code class="highlighter-rouge"&gt;/etc/netbeans.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Grub: Solve brightness and other issues:\
Add this to &lt;code class="highlighter-rouge"&gt;/etc/default/grub&lt;/code&gt;: &lt;code class="highlighter-rouge"&gt;GRUB_CMDLINE_LINUX="acpi_osi=Linux acpi_backlight=Vendor"&lt;/code&gt;\
and run &lt;code class="highlighter-rouge"&gt;update-grub&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu brightness issue: set to max on startup:&lt;/p&gt;
&lt;p&gt;Solution-1 (http://ubuntuforums.org/showthread.php?t=1976157):&lt;/p&gt;
&lt;p&gt;edit &lt;code class="highlighter-rouge"&gt;/etc/rc.local&lt;/code&gt; and add one of the below commands:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;#echo 334665 &amp;gt; /sys/class/backlight/intel_backlight/brightness&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;#echo 2 &amp;gt; /sys/class/backlight/acpi_video0/brightness&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;#(sleep 3 &amp;amp;&amp;amp; echo 2 &amp;gt; /sys/class/backlight/acpi_video0/brightness) &amp;amp; #&lt;/code&gt; this one actually worked for me, as it delayed setting the value by 3 seconds:&lt;/li&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;#xbacklight -set 30&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="solution-2-from-httpsbugslaunchpadnetubuntusourcegnome-power-managerbug923940"&gt;Solution-2 (From https://bugs.launchpad.net/ubuntu/+source/gnome-power-manager/+bug/923940):&lt;/h2&gt;
&lt;p&gt;As a temporary patch, you can try the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a file (any name) under &lt;code class="highlighter-rouge"&gt;/etc/pm/power.d&lt;/code&gt; with the following content:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="highlight"&gt;
    # Brightness adjustment
    case $1 in
            true)

                    # 20% screen brightness on battery
                    echo 2 &gt; /sys/class/backlight/acpi_video0/brightness
            ;;
            false)
                    # 80% screen brightness on AC
                    echo 3 &gt; /sys/class/backlight/acpi_video0/brightness
            ;;
    esac

    exit 0

&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;Make it executable by &lt;code class="highlighter-rouge"&gt;chmod +x myscript&lt;/code&gt; assuming “myscript” is the name of your file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course, you will need to reboot. This will adjust the brightness at 20 % when on battery and 80% when on AC power.&lt;/p&gt;
&lt;p&gt;Change grub boot order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;open &lt;code class="highlighter-rouge"&gt;/etc/default/grub&lt;/code&gt; in editor and change GRUB_DEFAULT parameter&lt;/li&gt;
&lt;li&gt;run &lt;code class="highlighter-rouge"&gt;update-grub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(Also set GRUB_SAVEDEFAULT=true if GRUB_DEFAULT equals saved)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Get X logs: See &lt;code class="highlighter-rouge"&gt;/var/log/Xorg.0.log&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To switch between gdm, kdm, etc:\
&lt;code class="highlighter-rouge"&gt;dpkg-reconfigure gdm&lt;/code&gt;\
or\
&lt;code class="highlighter-rouge"&gt;dpkg-reconfigure lightdm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Disable KMS (/etc/modprobe.d/i915-kms.conf):\
options i915 modeset=0&lt;/p&gt;
&lt;p&gt;Check hardware configuration:\
&lt;code class="highlighter-rouge"&gt;lspci&lt;/code&gt;\
&lt;code class="highlighter-rouge"&gt;lsusb&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Create an xorg.conf configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;login as root&lt;/li&gt;
&lt;li&gt;Xorg -configure&lt;/li&gt;
&lt;li&gt;mv /root/xorg.conf.new /etc/X11/xorg.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Local mirror of a web-site:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    wget -mkp -np -nc -nd -E --continue http://www.brpreiss.com/books/opus7
        -p = get page requisites (css, etc)
        -k = convert links
        -r = recursive   
        -m = turn on options suitable for mirroring (such as -r)
        -nc = no clobber
        -nd = no directoriy hierarchy
        -c = continue with partially downloaded
        -w n = wait for n seconds between requests
        -np = no parent
        -E = rename to proper .html/.css extensions if the page isn't
        --accept patternlist = accept only certain patterns (eg. Admin*)
        --reject patternlist = opposite of accept

&lt;/figure&gt;

&lt;p&gt;Watch CPU Temperatures:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;cat /sys/bus/acpi/devices/LNXTHERM:00/thermal_zone/temp&lt;/code&gt; (need lm-sensors package installed):&lt;/li&gt;
&lt;li&gt;watch -n 1 -d sensors&lt;/li&gt;
&lt;li&gt;sensors&lt;/li&gt;
&lt;li&gt;sensors-detect (dangerous/need more info)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Fill a usb/device with zeros:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;sudo dd if=/dev/zero of=/dev/sdb bs=1M&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;List all devices on the machine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;sudo fdisk -l&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Write an iso image to usb/device: (sdx is the name of device)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;sudo dd if=/path_to_iso of=/dev/sdx bs=1M&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Install grub to a specific device: (For usb devices, ext2 is ideal)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;sudo grub-install --root-directory=/media/USBFolderName /dev/sdx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Find a file on disk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/usr -xdev -name *.wav&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Show all apps in startup dialog (not just a few that come with stock ubuntu):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sudo sed -i ‘s/NoDisplay=true/NoDisplay=false/g’ /etc/xdg/autostart/*.desktop&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;view tcp communication logs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;/proc/net/tcp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;recordMyDesktop cli:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class="highlighter-rouge"&gt;recordMyDesktop --width 1360 --height 768 --v_bitrate 2000000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;resize unity-2d launcher:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;take backup: &lt;code class="highlighter-rouge"&gt;tar cvfz ~/Documents/unity-2d-shell-backup.tar.gz /usr/share/unity-2d/shell/*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;edit Shell.qml and change width: 65 to 50&lt;/li&gt;
&lt;li&gt;edit common/IconTile.qml:&lt;ul&gt;
&lt;li&gt;sourceSize.width: 48 to sourceSize.width: 32&lt;/li&gt;
&lt;li&gt;sourceSize.height: 48 to sourceSize.height: 32&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;edit launcher/LauncherList.qml:&lt;ul&gt;
&lt;li&gt;property int tileSize: 54 to property int tileSize: 38&lt;/li&gt;
&lt;li&gt;property int selectionOutlineSize: 65 to&lt;/li&gt;
&lt;li&gt;property int selectionOutlineSize: 50&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;logout &amp;amp; back in.&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Sqlalchemy Hack - How to convert a table to dict on the fly</title><link href="blog/2015/07/sqlalchemy-hack-convert-dict.html" rel="alternate"></link><published>2015-07-04T18:36:00+05:30</published><updated>2015-07-04T18:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-07-04:blog/2015/07/sqlalchemy-hack-convert-dict.html</id><summary type="html">&lt;p&gt;In on of my recent projects, I came across the need to develop a JSON based REST API to fetch data from the &lt;code class="highlighter-rouge"&gt;sqlalchemy&lt;/code&gt; objects. Now, the &lt;code class="highlighter-rouge"&gt;Query&lt;/code&gt; object is a great way to access data using the powerful &lt;code class="highlighter-rouge"&gt;sqlalchemy orm&lt;/code&gt;, but it doesn’t give any built-in way to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;In on of my recent projects, I came across the need to develop a JSON based REST API to fetch data from the &lt;code class="highlighter-rouge"&gt;sqlalchemy&lt;/code&gt; objects. Now, the &lt;code class="highlighter-rouge"&gt;Query&lt;/code&gt; object is a great way to access data using the powerful &lt;code class="highlighter-rouge"&gt;sqlalchemy orm&lt;/code&gt;, but it doesn’t give any built-in way to convert the result-set into a python &lt;code class="highlighter-rouge"&gt;dict&lt;/code&gt;.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;For instance, I have a &lt;code class="highlighter-rouge"&gt;Professor&lt;/code&gt; table in my &lt;code class="highlighter-rouge"&gt;models.py&lt;/code&gt;. Here is what I get when I query the &lt;code class="highlighter-rouge"&gt;Professor&lt;/code&gt; model using &lt;code class="highlighter-rouge"&gt;sqlalchemy&lt;/code&gt; ORM:&lt;/p&gt;
&lt;p&gt;::: {.language-python .highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt;&amp;gt; session.query(models.Professor).all()
2015-07-05 11:07:57,282 INFO sqlalchemy.engine.base.Engine SELECT professors.id AS professors_id, professors.name AS professors_name,
partment, professors.email AS professors_email, professors.password AS professors_password, professors.phone AS professors_phone
FROM professors
2015-07-05 11:07:57,282 INFO sqlalchemy.engine.base.Engine ()
[&amp;lt;Professor(name=`Albus Dumbledore`)&amp;gt;, &amp;lt;Professor(name=`Severus Snape`)&amp;gt;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;At the end, I got the two Professors’ name in a collection, but they are still &lt;code class="highlighter-rouge"&gt;sqlalchemy&lt;/code&gt; objects. How can I convert it to a python dict, so that it can be deserialized to JSON or be used for any other purpose. To solve this, just add the below code to your &lt;code class="highlighter-rouge"&gt;models.py&lt;/code&gt; module, and just call the &lt;code class="highlighter-rouge"&gt;models.to_dict()&lt;/code&gt; method to convert an sqlalchemy models collection to a dict (or alternatively, call &lt;code class="highlighter-rouge"&gt;models.from_dict()&lt;/code&gt; to build the model object collection from an existing dict!):&lt;/p&gt;
&lt;p&gt;::: {.language-python .highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;def to_dict(model_instance, query_instance=None):
    if hasattr(model_instance, &amp;#39;__table__&amp;#39;):
        return {c.name: str(getattr(model_instance, c.name)) for c in model_instance.__table__.columns}
    else:
        cols = query_instance.column_descriptions
        return { cols[i][&amp;#39;name&amp;#39;] : model_instance[i]  for i in range(len(cols)) }

def from_dict(dict, model_instance):
    for c in model_instance.__table__.columns:
        setattr(model_instance, c.name, dict[c.name])
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;The usage is as follows:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    q = dbsession.query(models.Application).filter(models.Application.id==id)
    professors = q.all()
    di = models.to_dict(professors) #for converting a single table resultset

    q = dbsession.query(models.Application)
    application = q.first()
    dd = models.to_dict(app)
    dd['student'] = models.to_dict(application.student, q) #for converting a relationship object which refers to another table. 

&lt;/figure&gt;

&lt;p&gt;The reason we have to use a slightly different approach for the relationship objects (like &lt;code class="highlighter-rouge"&gt;application.student&lt;/code&gt; which refers to the &lt;code class="highlighter-rouge"&gt;student&lt;/code&gt; model) is that the instance doesn’t have an &lt;code class="highlighter-rouge"&gt;__table__&lt;/code&gt; object which is required to build the dict. Hence, the query instance is passed. This is just one approach I’ve used to convert &lt;code class="highlighter-rouge"&gt;sqlalchemy&lt;/code&gt; objects to &lt;code class="highlighter-rouge"&gt;dict&lt;/code&gt;. If you have any other approach, please let me know.&lt;/p&gt;</content></entry><entry><title>Is Sourceforge.net safe anymore to download software</title><link href="blog/2015/06/is-sourceforge-safe-anymore.html" rel="alternate"></link><published>2015-06-25T21:36:00+05:30</published><updated>2015-06-25T21:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-06-25:blog/2015/06/is-sourceforge-safe-anymore.html</id><summary type="html">&lt;p&gt;You have probably heard about all the recent buzz surrounding the sourceforge.net website hosting adware/malware bundled installers and naive users falling prey to it. In some cases, SF even actively took control of &lt;a href="http://arstechnica.com/information-technology/2015/05/sourceforge-grabs-gimp-for-windows-account-wraps-installer-in-bundle-pushing-adware/"&gt;abandoned developer accounts&lt;/a&gt;. to bundle their crapware.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sourceforge Logo" src="/uploads/old/sf-logo.png"&gt;&lt;/p&gt;
&lt;p&gt;So, is it safe anymore to go to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;You have probably heard about all the recent buzz surrounding the sourceforge.net website hosting adware/malware bundled installers and naive users falling prey to it. In some cases, SF even actively took control of &lt;a href="http://arstechnica.com/information-technology/2015/05/sourceforge-grabs-gimp-for-windows-account-wraps-installer-in-bundle-pushing-adware/"&gt;abandoned developer accounts&lt;/a&gt;. to bundle their crapware.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Sourceforge Logo" src="/uploads/old/sf-logo.png"&gt;&lt;/p&gt;
&lt;p&gt;So, is it safe anymore to go to this site and download your favorite FLOSS software? The TLDR version is NO, unless you happen to trust the developer and the project is actively being developed by them. But to understand the big picture, you will have to see the root cause of this which goes much deeper than just sourceforge, and relates to software distribution practices in the Microsoft Windows world.&lt;/p&gt;
&lt;h2&gt;What went wrong?&lt;/h2&gt;
&lt;p&gt;Software Development consists of two important phases: Authoring of source code, and secondly, the build process where the code is compiled to binaries and bundled into installable packages that you may download. Many years ago, sourceforge was one of the rare sites that provided a place on the internet where open source developers can host their code and binaries, and users can download them. This used to go well for many years and thus sourceforge gained a nice reputation in the FLOSS Community.&lt;/p&gt;
&lt;p&gt;But soon enough, Sourceforge decided to cash in on this reputation by breaching this trust. And they started bundling adware and crapware to the developer builds. In some cases, &lt;a href="https://forum.filezilla-project.org/viewtopic.php?t=30240"&gt;the lead developers&lt;/a&gt; were in cohorts with Sourceforge. And as &lt;a href="http://www.thewindowsclub.com/safe-software-download-sites"&gt;this Windows Club article&lt;/a&gt; succintly explains, Sourceforge wasn’t alone in this. There were many othere like CNET.com, Download.com, etc.&lt;/p&gt;
&lt;h2&gt;The Problem&lt;/h2&gt;
&lt;p&gt;Though the adware bundling is optional in theory, the default options are so tactfully placed that only the shrewdest of hackers can dodge all of them! Though this kind of behavior is sort of expected from B-grade sites like CNET and download.com, Sourceforge was something that the open source community held in high esteem. Though most of the developers have moved to github now, souceforge was once considered the Jerusalem for downloading FLOSS Software, especially Windows Software. Even today, their interface is the best suited for novice users who are just looking for a big green download button to click - Github interface is more geared towards developers and generally overwhelms them. But now that the Jerusalem folks have turned into heretics (for lack of a better analogy), what are our options?&lt;/p&gt;
&lt;p&gt;The best option is to get it from the developer’s site itself if they provide it. But sometimes that’s not possible as the developer may not always have bandwidth to host the binaries, and we have to depend on 3rd party sites like sourceforge. As the author of the linked article suggests, &lt;a href="http://majorgeeks.com"&gt;MajorGeeks&lt;/a&gt; and &lt;a href="http://softpedia.com"&gt;Softpedia&lt;/a&gt; are generally clean in my experience. Downloading software from those cleaner sites, however, is just a workaround and doesn’t solve the larger structural problem of Software Distribution in Windows world. So, what is that solution?&lt;/p&gt;
&lt;h2&gt;The Linux Solution!&lt;/h2&gt;
&lt;p&gt;One crisis we are facing in the Windows FLOSS world right now is the Middleman problem. The original developer (A) writes some code and compiles it, the middleman (SF) bundles adware to it and makes a quick buck, whilst an innocent user (B) clicks that download link. Since there is no way for B to verify if the package is actually bundled by A, SF continues to get his commissions.&lt;/p&gt;
&lt;p&gt;But what if there was a way for B to verify if the package is actually signed by A? In the Linux world, we do have such a mechanism, so there is no place for middlemen to make a profit there. If I download GNU Emacs from the &lt;a href="http://ftp.gnu.org/gnu/emacs/"&gt;GNU ftp server&lt;/a&gt;, all I have to do is &lt;code class="highlighter-rouge"&gt;gpg --verify emacs.sig emacs.tar.gz&lt;/code&gt; and the system will tell me whether my emacs copy is signed by developers of Emacs, or was it tampered with for injecting any malware!&lt;/p&gt;
&lt;p&gt;The second crisis the Windows FLOSS is facing is lack of a decent package management system. In above analogy, we can’t expect B to personally verify each downloaded software against A’s signature, s/he needs a good package manager that downloads the package from a trusted server and installs it afer verifying the signatures.&lt;/p&gt;
&lt;p&gt;In Linux world, we have two major packaging systems known by the name of &lt;code class="highlighter-rouge"&gt;apt&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;yum&lt;/code&gt;. How are they better, stable and secure than the Windows approach of users downloading arbitrary installers from SF-like sites and installing them, is something beyond the scope of this article. But suffice it to say that its very very high time that Windows gets a similar package manager to take care of the present structural issues surrounding it. &lt;a href="http://www.ninite.com/"&gt;Ninite&lt;/a&gt; has tried to do something in this direction, but its a proprietary and paid solution. We need open source and something that everyone accepts as a standard. Maybe, perhaps Microsoft will take the initiative and do it themselves? Only time will tell.&lt;/p&gt;</content></entry><entry><title>How to know whether my blog post will attract traffic or not</title><link href="blog/2015/06/how-to-know-whether-my-blog-post-will-attract-traffic-or-not.html" rel="alternate"></link><published>2015-06-10T18:30:00+05:30</published><updated>2015-06-10T18:30:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-06-10:blog/2015/06/how-to-know-whether-my-blog-post-will-attract-traffic-or-not.html</id><summary type="html">&lt;p&gt;One of the evergreen topics for discussions in the blogging world is SEO, and especially the various ways of attracting bless of the all-pervading search engines to one’s own site or blog. There are various ways to approach this problem, some of the popular ones are:&lt;!--more--&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using meta tags …&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;One of the evergreen topics for discussions in the blogging world is SEO, and especially the various ways of attracting bless of the all-pervading search engines to one’s own site or blog. There are various ways to approach this problem, some of the popular ones are:&lt;!--more--&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using meta tags like &lt;code class="highlighter-rouge"&gt;keyword&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;description&lt;/code&gt; to attract the search engines.&lt;/li&gt;
&lt;li&gt;Performing keyword research (using Google Adword tool or similar).&lt;/li&gt;
&lt;li&gt;Getting Link juice through social media marketing.&lt;/li&gt;
&lt;li&gt;Hiring SEO experts or web designers to get some arcane suggestions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But lost in these technical fads, people are forgetting one basic foundation upon which the internet is built: &lt;code class="highlighter-rouge"&gt;CONTENT IS KING&lt;/code&gt;. Yes, the sad truth is that Google (or Yahoo/Bing for that matter) cannot be fooled by any of these tools in the &lt;code class="highlighter-rouge"&gt;long term&lt;/code&gt;. Doing some social media marketing on Facebook might place your article on #1 position for a short period of time, but sooner or later, Google will figure out whether your content is actually worth it or not.&lt;/p&gt;
&lt;p&gt;But how do you write good content, and also ensure that it has some uniqueness that the million other sites on the internet don’t already have? Well, I can’t help you with the first question. Since &lt;em&gt;you&lt;/em&gt; know what your area of expertise is, only you can come up with a good topic and subject-matter for your blog or site. For instance, Web Development is my area of expertise, and I came up with this particular topic you are reading right now.&lt;/p&gt;
&lt;p&gt;But I can certainly help you with the second question! Doing some research on this matter and performing a topic-wise traffic analysis of my own blog, has proven to me this one thing: &lt;code class="highlighter-rouge"&gt;CONTENT IS KING&lt;/code&gt;. So, my method of figuring out whether your article/post will rock or not, is based upon this simple canon. Once you decide the topic and subject-matter of your next blog post, do this simple reality check before you even bother drafting it:&lt;/p&gt;
&lt;p&gt;Almost every Googler is looking for a specific solution for a problem or issue, be it shopping for a product, knowing a url address or researching something. So, your next post or article should solve that problem in order to pass the &lt;code class="highlighter-rouge"&gt;CONTENT&lt;/code&gt; test. To get a quick idea of the competition, perform a Google search from the point of view of your potential Googler! A glance at the results will instantly tell you whether this problem is already solved, and by how many.&lt;/p&gt;
&lt;p&gt;For instance, before publishing this article, I did this simple Google search:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;How to know whether my blog post will attract traffic or not
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;And this is what I got:&lt;/p&gt;
&lt;p&gt;&lt;img alt="How to know whether my blog post will attract traffic or not" src="/uploads/old/how-to-know-whether-blog-topic-gets-traffic.png"&gt;&lt;/p&gt;
&lt;p&gt;All those are top ranking sites and deserve to be on page one (no offence meant to them). However, for someone specifically looking for a solution to this question (agreed, however small that set of users be), none of them have an immediate answer that could be surmised by the search result summary. Whilst they are all making clear points about &lt;code class="highlighter-rouge"&gt;WAYS&lt;/code&gt; to increase search engine traffic, none of them talks about knowing, in priory, whether a given method will work or not. So, at least for this particular query (maybe used by about 1% of all bloggers), my blog post deserves to be amongst those page one results - and sure it will, because it has the only one thing that matters for Google - &lt;code class="highlighter-rouge"&gt;CONTENT&lt;/code&gt;.&lt;/p&gt;</content></entry><entry><title>How to host a Flask app on Openshift</title><link href="blog/2015/02/how-to-host-flask-app-openshift.html" rel="alternate"></link><published>2015-02-06T18:30:00+05:30</published><updated>2015-02-06T18:30:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-02-06:blog/2015/02/how-to-host-flask-app-openshift.html</id><summary type="html">&lt;p&gt;&lt;a href="https://www.openshift.com/"&gt;Openshift free tier&lt;/a&gt; is an excellent way to host your python web app for staging or testing, and you can even host a low to medium traffic production site. Openshift provides several options (cartridges) for hosting including &lt;code class="highlighter-rouge"&gt;python, php, node.js, etc.&lt;/code&gt; but &lt;code class="highlighter-rouge"&gt;python&lt;/code&gt; being my favorite language and &lt;code class="highlighter-rouge"&gt;Flask …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://www.openshift.com/"&gt;Openshift free tier&lt;/a&gt; is an excellent way to host your python web app for staging or testing, and you can even host a low to medium traffic production site. Openshift provides several options (cartridges) for hosting including &lt;code class="highlighter-rouge"&gt;python, php, node.js, etc.&lt;/code&gt; but &lt;code class="highlighter-rouge"&gt;python&lt;/code&gt; being my favorite language and &lt;code class="highlighter-rouge"&gt;Flask&lt;/code&gt; being a minimalist and flexible framework, this combination is what I usually end up with.&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;Create an Openshift account&lt;/h3&gt;
&lt;p&gt;In case you haven’t already, head over to &lt;a href="https://www.openshift.com/"&gt;Openshift&lt;/a&gt; and sign up for a free tier. You will be able to host at most three apps for each account. Openshift apps are hosted on &lt;code class="highlighter-rouge"&gt;rhcloud.com&lt;/code&gt; domain and you’ll have to setup a subdomain first which will be part of your app url. For instance, if I register &lt;code class="highlighter-rouge"&gt;prahladyeri.rhcloud.com&lt;/code&gt; subdomain, I can create the following apps with that:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;myflaskapp-prahladyeri.rhcloud.com
myphpapp-prahladyeri.rhcloud.com
blog-prahladyeri.rhcloud.com
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;h3&gt;Install the necessary tools&lt;/h3&gt;
&lt;p&gt;You will need the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="git-scm.com/"&gt;Git&lt;/a&gt;: Your app resides in a git repository, so you’ll need git installed on your machine to push changes. App is deployed automatically once you push.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://python.org"&gt;Python and Flask&lt;/a&gt;: Obviously, you are going to need them if you are building a Flask app.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rubygems.org/gems/rhc"&gt;Openshift rhc tool&lt;/a&gt;: This &lt;code class="highlighter-rouge"&gt;ruby&lt;/code&gt; based tool is optional, only use it if you don’t want to use their online portal for creating apps or you aren’t familiar with ssh. Personally, I didn’t want to install &lt;code class="highlighter-rouge"&gt;ruby&lt;/code&gt; on my machine just for this one purpose.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Pull the remote repo&lt;/h3&gt;
&lt;p&gt;Once you create a python app, Openshift will provide you a git repository url as follows:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Openshift git url" src="/uploads/old/openshift-git-repo.png"&gt;&lt;/p&gt;
&lt;p&gt;Now open your command line and pull this starter repo to your local machine:&lt;/p&gt;
&lt;figure class="highlight"&gt;
      git clone &lt;YOUR_SOURCE_URL&gt; myFlaskApp

&lt;/figure&gt;

&lt;p&gt;Now, the remote repository will be cloned in the &lt;code class="highlighter-rouge"&gt;myFlaskApp&lt;/code&gt; folder. Browse it to see the scaffolding.&lt;/p&gt;
&lt;h3&gt;Add your flask app&lt;/h3&gt;
&lt;p&gt;The scaffolding structure will be as follows:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    wsgi.py
    setup.py
    .openshift/..
    .settings/..
    wsgi/..         =&gt; your python source files go here.
    wsgi/static..   =&gt; your static folders viz css, img, fonts, et al. go here.

&lt;/figure&gt;

&lt;p&gt;If the wsgi/ folder doesn’t exist, you’ll have to create it. Just modify the setup.py and add Flask and SQLAlchemy as your app dependencies along with your app name. This tells openshift to make sure that dependency packages are available whenever you push any code changes.&lt;/p&gt;
&lt;figure class="highlight"&gt;

    from setuptools import setup

    setup(name='myFlaskApp',
          version='1.0',
          description='myFlaskApp',
          author='Prahlad Yeri',
          author_email='prahladyeri@yahoo.com',
          url='http://www.python.org/sigs/distutils-sig/',
          install_requires=['Flask==0.10.1','SQLAlchemy==0.9.8'],
         )

&lt;/figure&gt;

&lt;p&gt;Now, create a text file named &lt;code class="highlighter-rouge"&gt;application&lt;/code&gt; in the wsgi/ folder with the following contents:&lt;/p&gt;
&lt;figure class="highlight"&gt;

    #!/usr/bin/python
    import os

    virtenv = os.environ['OPENSHIFT_PYTHON_DIR'] + '/virtenv/'
    os.environ['PYTHON_EGG_CACHE'] = os.path.join(virtenv, 'lib/python2.7/site-packages')
    virtualenv = os.path.join(virtenv, 'bin/activate_this.py')
    try:
        execfile(virtualenv, dict(__file__=virtualenv))
    except IOError:
        pass

    from myFlaskApp import app as application       

&lt;/figure&gt;

&lt;p&gt;This is a configuration file that tells openshift where your Flask app script resides. Now create a python file called myFlaskApp.py, this will be your HelloWorld script:&lt;/p&gt;
&lt;figure class="highlight"&gt;

    import flask
    from flask import Flask
    from flask import request

    app = Flask(__name__)

    @app.route("/")
    def home():
        return "Hello World"

    if __name__ == "__main__":
        app.run(debug=True)

&lt;/figure&gt;

&lt;p&gt;The last part of the code (app.run) is there so that you may test the Flask app by running this script on your local machine before pushing these changes.&lt;/p&gt;
&lt;h3&gt;Push your changes&lt;/h3&gt;
&lt;p&gt;All that is left to be done now is committing your changes and pushing them to openshift:&lt;/p&gt;
&lt;p&gt;::: {.highlighter-rouge}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add .
git commit -m &amp;quot;Initial commit for myFlaskApp&amp;quot;
git push origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;:::&lt;/p&gt;
&lt;h3&gt;Voila! You are done&lt;/h3&gt;
&lt;p&gt;Wasn’t it almost as easy as deploying a &lt;code class="highlighter-rouge"&gt;php&lt;/code&gt; script on your web host? If everything goes right, your Flask app will be hosted on &lt;code class="highlighter-rouge"&gt;http://myFlaskApp-mydomain.rhcloud.com/&lt;/code&gt;. Visit your app link and check it out.&lt;/p&gt;
&lt;h3&gt;Few important things&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;In case you aren’t familiar about how git over ssl works, the remote machine authenticates your machine using an SSL public key you have already provided them. So if this is your fist time, you’ll have to generate a private-public key pair (using ssh in linux or putty on windows). After that, you’ll have to update your public key to Openshift, so they can authenticate your machine. You can add it using the Settings menu on the Openshift portal.&lt;/li&gt;
&lt;li&gt;Its very important that all your static files reside in &lt;strong&gt;wsgi/static&lt;/strong&gt; folder and that folder only. Openshift uses that path by default. But in case you are really stuck with using &lt;code class="highlighter-rouge"&gt;/css&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;/js&lt;/code&gt; in your existing app, as a solution you can clear the &lt;code class="highlighter-rouge"&gt;static_url_path&lt;/code&gt; in your flask app as follows:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="highlight"&gt;
      app = Flask(__name__, static_url_path='', static_folder='static')

&lt;/figure&gt;

&lt;p&gt;Refer to this Openshift &lt;a href="https://blog.openshift.com/build-your-app-on-openshift-using-flask-sqlalchemy-and-postgresql-92/"&gt;tutorial&lt;/a&gt; for more details.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make the most of SSH. Some times, you may want to connect with the remote server using secured shell (ssh/putty) for troubleshooting, viewing logs, etc. Your SSH url is included in your git source url. So, if your git url is of the form:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class="highlight"&gt;
          ssh://500XXXXXXXXXXXX01061a@prahladyeri-inn.rhcloud.com/~/git/prahladyeri.git/

&lt;/figure&gt;

&lt;p&gt;Just remove the &lt;code class="highlighter-rouge"&gt;ssh://&lt;/code&gt; from the beginning and the other things after the domain, so the SSH host url becomes:&lt;/p&gt;
&lt;figure class="highlight"&gt;
          500XXXXXXXXXXXX01061a@prahladyeri-inn.rhcloud.com

&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;References:&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.openshift.com/build-your-app-on-openshift-using-flask-sqlalchemy-and-postgresql-92/"&gt;Build an app using Flask, SQLAlchemy and PostgreSQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rubygems.org/gems/rhc"&gt;Openshift rhc tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openshift.com/"&gt;Openshift Homepage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Farewell Wordpress, Hello Jekyll!</title><link href="blog/2015/02/farewell-wordpress-hello-jekyll.html" rel="alternate"></link><published>2015-02-04T18:30:00+05:30</published><updated>2015-02-04T18:30:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2015-02-04:blog/2015/02/farewell-wordpress-hello-jekyll.html</id><summary type="html">&lt;p&gt;Here I am, signing off from a &lt;em&gt;self-hosted, over-bloated &lt;a href="http://www.wordpress.org"&gt;Wordpress&lt;/a&gt;&lt;/em&gt; site and finding a welcome change in &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, a blog-aware static site generator. There is nothing new about this, several well-known bloggers have already migrated to Jekyll in the last few years including &lt;a href="http://rsms.me/"&gt;Rasmus Andersson&lt;/a&gt;, &lt;a href="http://quaran.to/"&gt;Nick Quaranto&lt;/a&gt; and &lt;a href="http://rogchap.com/"&gt;Roger Chapman …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here I am, signing off from a &lt;em&gt;self-hosted, over-bloated &lt;a href="http://www.wordpress.org"&gt;Wordpress&lt;/a&gt;&lt;/em&gt; site and finding a welcome change in &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;, a blog-aware static site generator. There is nothing new about this, several well-known bloggers have already migrated to Jekyll in the last few years including &lt;a href="http://rsms.me/"&gt;Rasmus Andersson&lt;/a&gt;, &lt;a href="http://quaran.to/"&gt;Nick Quaranto&lt;/a&gt; and &lt;a href="http://rogchap.com/"&gt;Roger Chapman&lt;/a&gt;. Ever since Tom Preston Werner invented this thing in 2008 and published his infamous article about &lt;a href="http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html"&gt;Blogging Like a Hacker&lt;/a&gt;, it has become the &lt;em&gt;Go-to thing&lt;/em&gt; for those of us who favour on-line publishing above everything else.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;And that’s for many good reasons, the most important being a major issue with Wordpress design - &lt;em&gt;Of what use is an RDBMS database like mysql in a weblog?&lt;/em&gt;. I think this question should have been asked the day Wordpress was invented. However, since there weren’t too many alternatives in those days and &lt;code class="highlighter-rouge"&gt;php&lt;/code&gt; hosting was &lt;em&gt;way too easy&lt;/em&gt;, most ignored this factor.&lt;/p&gt;
&lt;h3&gt;Save me a ton of money&lt;/h3&gt;
&lt;p&gt;Jekyll generates static sites made of pure HTML/CSS. A static site is a website whose content stays static (&lt;em&gt;unchanged by any user-input&lt;/em&gt;) on the server-side (though dynamic functionality can be provided on the client-side using javascript). What this means is that you are not only done away with the hassle of hosting your own database, but also avoid &lt;em&gt;costly monthly fees&lt;/em&gt; going to your Web Hosting Providers. That’s because unlike a &lt;code class="highlighter-rouge"&gt;php&lt;/code&gt; hosted dynamic site, a static site is much much faster and cheaper. In fact, &lt;a href="https://github.com/jekyll/jekyll/wiki/Sites"&gt;Github pages&lt;/a&gt; provides you free static web hosting without any bandwidth or space restrictions!&lt;/p&gt;
&lt;h3&gt;How do I implement this?&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;References&lt;/em&gt; section at the bottom contains a couple of links to detailed migration guides if you intend to go this route. As any seasoned &lt;code class="highlighter-rouge"&gt;php&lt;/code&gt; programmer would tell you, programming in a language like &lt;code class="highlighter-rouge"&gt;php&lt;/code&gt; isn’t everyone’s cup of tea. While you don’t have to do any programming for hosting a static site, you should still know about a few things in order to implement a static site:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;: Jekyll is a command line tool written in &lt;code class="highlighter-rouge"&gt;ruby&lt;/code&gt; language to generate blog-aware static sites (like the one you are presently viewing). Visit the link to find docs that explain what Jekyll is, how to install ruby and jekyll on your system and publish your posts.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt;: &lt;code class="highlighter-rouge"&gt;Markdown&lt;/code&gt; is a beautiful language crafted specially with on-line publishers in mind. Jekyll posts written in &lt;code class="highlighter-rouge"&gt;Markdown&lt;/code&gt; syntax are saved with the extension of &lt;code class="highlighter-rouge"&gt;.md&lt;/code&gt;. While you can write posts in plain old html syntax too, knowing markdown comes very handy and saves time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For instance, when I write:&lt;/p&gt;
&lt;figure class="highlight"&gt;
          [Jekyll](http://jekyllrb.com/)

&lt;/figure&gt;

&lt;p&gt;It becomes:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Making lists, headings, etc. is as easy. For instance,&lt;/p&gt;
&lt;figure class="highlight"&gt;
    ### Three hashes means H3
    #### Four hashes means H4
    1. This is list-item1
    2. This is list-item2

&lt;/figure&gt;

&lt;p&gt;becomes:&lt;/p&gt;
&lt;h3&gt;Three hashes means H3&lt;/h3&gt;
&lt;h4&gt;Four hashes means H4&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;This is list-item1&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is list-item2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;: Perhaps the only feature for which most bloggers need a dynamic site is that of posting comments. Thanks to services like disqus, bloggers can now leave the hassle of maintaining their own database for storing their readers’ comments. Disqus does this for them. Read on the link to find out how to implement it on your Jekyll blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jekyll/jekyll/wiki/Sites"&gt;Github pages&lt;/a&gt;: Github pages is literally a boon for us bloggers. I’m aware of no other static web hosting service that lets you host unlimited content with practically unlimited bandwidth!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com/analytics"&gt;Google Analytics&lt;/a&gt;: This is an invaluable service from Google used for tracking the web traffic on your blog or website. And not just hit-counts, you get to know what kinds of visitors come to your site based on demographic stats like location, age-group, gender, likes/dislikes, etc. All you have to do is put a bunch of code that analytics site provides you in your jekyll default template. Even when I was on Wordpress, I was using Google Analytics instead of the various stats plugins that come with Wordpress.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Outcome&lt;/h3&gt;
&lt;p&gt;Jekyll feels so good that I can’t recommend you enough of it! If you are presently using a self-hosted wordpress site and want to migrate to Jekyll and Github-pages, just go ahead and do it without any second thoughts. And after that, please let me know about your migration experience through &lt;code class="highlighter-rouge"&gt;disqus&lt;/code&gt; comments below this post!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;References&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hadihariri.com/2013/12/24/migrating-from-wordpress-to-jekyll/"&gt;Wordpress to Jekyll - Migration guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://paulstamatiou.com/how-to-wordpress-to-jekyll/"&gt;Wordpress to Jekyll - How to&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jekyll/jekyll/wiki/Sites"&gt;Jekyll, A blog aware static site generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://tom.preston-werner.com/2008/11/17/blogging-like-a-hacker.html"&gt;Blogging Like a Hacker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Jekyll_%28software%29"&gt;Jekyll, Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jekyll/jekyll/wiki/Sites"&gt;Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/"&gt;How to set up a custom domain with Github pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://joshualande.com/jekyll-github-pages-poole/"&gt;Poole - A minimalistic Jekyll theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>4 Ways to share your mobile internet with a PC/laptop</title><link href="blog/2014/12/4-ways-to-share-your-mobile-internet-with-a-pclaptop.html" rel="alternate"></link><published>2014-12-20T11:47:00+05:30</published><updated>2014-12-20T11:47:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-12-20:blog/2014/12/4-ways-to-share-your-mobile-internet-with-a-pclaptop.html</id><summary type="html">&lt;p&gt;The one thing I like about the world of Linux in general and also Android is the great number of options. Unlike Windows phone, where there is only one way to perform a task (if at all there is!), android provides a richer user experience in all departments.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/Android_tether_options.png"&gt;&lt;img alt="Android Tethering Options" src="/uploads/old/Android_tether_options.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Suppose you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The one thing I like about the world of Linux in general and also Android is the great number of options. Unlike Windows phone, where there is only one way to perform a task (if at all there is!), android provides a richer user experience in all departments.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/Android_tether_options.png"&gt;&lt;img alt="Android Tethering Options" src="/uploads/old/Android_tether_options.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Suppose you are traveling to some place and your laptop has lost its usual source of internet connectivity. You will naturally consider surfing the web on your cell-phone, or better still, try and find a way to share the internet on your cell-phone with your laptop, so your work won't suffer.&lt;/p&gt;
&lt;p&gt;The android OS supports multiple ways to perform tethering (a.k.a share your mobile internet with other devices such as laptop).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;USB Tethering:&lt;/em&gt;&lt;/strong&gt; I mention this method first because it is the most power-efficient of the lot. Always try to use this method before others if you want to prioritize battery savings. The only shortcoming of this method is that you will only be able to share the  mobile internet with at most one device only (in the above example, your laptop). And of course, you will be able to keep your USB cable handy. To use this method, just hook up the USB cable to your laptop (making sure that the device drivers are installed). Then, on your cellphone, go to &lt;strong&gt;&lt;em&gt;Settings-&gt;Tethering and Portable Hotspot&lt;/em&gt;&lt;/strong&gt; and tap on the &lt;strong&gt;&lt;em&gt;USB Tethering&lt;/em&gt;&lt;/strong&gt; option to activate it. (On your particular model, the actual setting name might differ as each manufacturer customizes android to their own liking)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Bluetooth Tethering:&lt;/em&gt;&lt;/strong&gt; This method is less efficient than USB tethering, but still quite efficient compared to others. Again, the disadvantage is that at most only one peer can be shared. Also, the speed will be much slower compared to Wifi and other techniques, but if 10mbps is workable for you, then this option could be a great help for you. To activate, tap on this option in &lt;strong&gt;&lt;em&gt;Settings-&gt;Tethering and Portable Hotspot&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Wifi Access Point:&lt;/em&gt;&lt;/strong&gt; This method is the most common of the lot as the concept of turning your cellphone into a Wifi access point has turned into quite a fad nowadays. However, it is also the least efficient energy wise. The advantage, of course, is that your cellphone can provide its bandwidth to multiple devices at the same time. To activate, tap on this option in &lt;strong&gt;&lt;em&gt;Settings-&gt;Tethering and Portable Hotspot&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Using a USB Dongle as Mobile broadband:&lt;/em&gt;&lt;/strong&gt; This method applies only to GSM radios (not CDMA as they are locked by providers).  Though it doesn't come under the definition of tethering, the effect is same. If none of the above methods work for you (or for some reason, you don't want to use), as an alternative, you can take out the SIM card and put it in an unlocked USB dongle (also called &lt;a href="https://en.wikipedia.org/wiki/WorldSIM#Data_SIM_Card"&gt;Data Card&lt;/a&gt;). Data Cards are manufactured by companies like ZTE and Huawei and unlocked versions are available in many &lt;a href="http://www.amazon.com/Generic-Wireless-7-2Mbps-Dongle-Function/dp/B00MHAKIFI/ref=sr_1_5?ie=UTF8&amp;amp;qid=1419075706&amp;amp;sr=8-5&amp;amp;keywords=usb+data+cards"&gt;online retail stores&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>7 Reasons I would prefer an Android Phone over WP8</title><link href="blog/2014/12/7-reasons-i-would-prefer-an-android-phone-over-wp8.html" rel="alternate"></link><published>2014-12-19T09:42:00+05:30</published><updated>2014-12-19T09:42:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-12-19:blog/2014/12/7-reasons-i-would-prefer-an-android-phone-over-wp8.html</id><summary type="html">&lt;p&gt;My existing phone is a &lt;em&gt;Karbonn A30&lt;/em&gt; running &lt;em&gt;Android ICS&lt;/em&gt; and my next phone is going to be an Android phone too. Both as a &lt;strong&gt;user&lt;/strong&gt; and as a &lt;strong&gt;developer&lt;/strong&gt;, I've come upon the realization that Android provides a much better user experience and overall satisfaction in mobile computing.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/Android_WP8_Feature_compare.png"&gt;&lt;img alt="Android-WP8 Feature comparison" src="/uploads/old/Android_WP8_Feature_compare.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My existing phone is a &lt;em&gt;Karbonn A30&lt;/em&gt; running &lt;em&gt;Android ICS&lt;/em&gt; and my next phone is going to be an Android phone too. Both as a &lt;strong&gt;user&lt;/strong&gt; and as a &lt;strong&gt;developer&lt;/strong&gt;, I've come upon the realization that Android provides a much better user experience and overall satisfaction in mobile computing.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/Android_WP8_Feature_compare.png"&gt;&lt;img alt="Android-WP8 Feature comparison" src="/uploads/old/Android_WP8_Feature_compare.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I had briefly considered using Windows Phone once, but I've discarded that idea after giving it a trial run. Here are the 7 reasons why I would only go for a phone running the Android Operating system and not WP8.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;More features:&lt;/em&gt;&lt;/strong&gt; This is one of the primary reasons a user buys any product, let alone a cell-phone. Android clearly wins in this department as it provides more features (out-of-the-box) compared to WP8. Just open the android settings menu and compare it to the feature-deprived WP8 settings screen to prove this to yourself. WP settings doesn't even allow you to perform basic things like:&lt;ol&gt;
&lt;li&gt;Setting up a custom mp3 ringtone (You need a PC with Zune software running for that.)&lt;/li&gt;
&lt;li&gt;Setting up bluetooth options (No advanced options like bluetooth tethering )&lt;/li&gt;
&lt;li&gt;Brightness settings are only low, medium and high (whereas Android provides a slider to set a custom percentage).&lt;/li&gt;
&lt;li&gt;No built-in file manager (At least the lumia 520 I tested did not)&lt;/li&gt;
&lt;li&gt;Not enough power stats (Android shows a complete run-down of what apps ate how much battery life, WP doesn't even show the exact percent of battery remaining)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;More options for tethering:&lt;/em&gt;&lt;/strong&gt; One of the major reasons that I use my phone is to tether my phone's internet, so as to use it on my laptop. Android provides me three options to do this: Wifi tethering (aka Access point), Bluetooth tethering, USB tethering. WP8 only provides Wifi sharing and that too is not quite customizable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;More free apps:&lt;/em&gt;&lt;/strong&gt; The Google play store is full of professional apps (many of them free, too). For instance, ES3 is a file-manager, archiver, FTP-manager and backup-manager combined. This app is not freely available on WP8 and I doubt the paid version would be having the features comparable to android version. Other examples are Terminal-IDE  (A fully-fledged IDE) and QPython (A fully-fledged programming environment!) that are both freely available on Android.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Opensource technologies:&lt;/em&gt;&lt;/strong&gt; Android stack completely rests on Open source technologies. The Linux kernel, Apache Harmony and Dalvik VM are all Opensource components.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Supported by Google:&lt;/em&gt;&lt;/strong&gt; Another reason to go with Android is that it is actively developed and supported by Google Inc, a company whose interests directly harmonize with that of the end-users.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;More options for the Developer:&lt;/em&gt;&lt;/strong&gt; Even as a developer, you will have a much better time developing an Android app than a WP8 app. First of all, the development tools (EclipseADT and Android SDK) are pretty well-documented on &lt;a href="http://developer.android.com"&gt;Android Developer site&lt;/a&gt;. Secondly, these are opensource tools that run on all platforms including Linux and OSX. On the other hand, developing a WP8 app requires Windows 8 64 bit version and nothing else.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;No vendor lock-in:&lt;/em&gt;&lt;/strong&gt; As a corollary to point 4, there is no vendor lock-in when you go for Android. Because the source code of android OS is freely available from the &lt;a href="http://source.android.com"&gt;repository&lt;/a&gt;, you can customize it if you need to.&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>PHP - An Annoying Tryst</title><link href="blog/2014/06/php-an-annoying-tryst.html" rel="alternate"></link><published>2014-06-30T06:34:00+05:30</published><updated>2014-06-30T06:34:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-06-30:blog/2014/06/php-an-annoying-tryst.html</id><summary type="html">&lt;p&gt;It has been a few months since I've started working primarily in PHP and I am actually liking the language a lot! I like the simplicity and symmetry found in C style of solving problems, and PHP has got liberal amounts of that kind of resemblance. I have even come …&lt;/p&gt;</summary><content type="html">&lt;p&gt;It has been a few months since I've started working primarily in PHP and I am actually liking the language a lot! I like the simplicity and symmetry found in C style of solving problems, and PHP has got liberal amounts of that kind of resemblance. I have even come to terms with the clutter of all unorganized functions, considering all the positive aspects of PHP programming.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;But an annoying incident happened today with PHP. I had been testing and developing my PHP app over the past few weeks now. Everything worked wonders really, until I deployed the code on client's staging server that is. One of the scripts started giving errors while running, and after some debugging, I found that these two lines were the culprit:&lt;/p&gt;
&lt;p&gt;``` {lang="php"}
$result = $result-&amp;gt;fetchAll()[0][0];  //doesn't work in PHP 5.3, only in 5.4!
//$result = $result-&amp;gt;fetchAll();$result=$result[0][0];  //works in both 5.3 and 5.4!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;``` {lang=&amp;quot;php&amp;quot;}
$states = [&amp;#39;QLD&amp;#39;, &amp;#39;SA&amp;#39;, &amp;#39;NT&amp;#39;, &amp;#39;WA&amp;#39;];    //doesn&amp;#39;t work in PHP 5.3!
//$states = array(&amp;#39;QLD&amp;#39;, &amp;#39;SA&amp;#39;, &amp;#39;NT&amp;#39;, &amp;#39;WA&amp;#39;); //works in both 5.3 and 5.4!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The comments are the after-effects of my analysis, of course. The reason my code broke was that I was running PHP 5.4 and the client had PHP 5.3. I generally prefer programming short-cuts, so in the first instance, I used it for fetching the results of an sqlite table query.\
&lt;a href="http://stackoverflow.com/questions/742764/php-syntax-for-dereferencing-function-result"&gt;Turned out&lt;/a&gt;, this way of directly de-referencing an array is not allowed in PHP 5.3! You need another place-holder variable to keep this value.&lt;/p&gt;
&lt;p&gt;Now there is nothing wrong in breaking compatibility between PHP versions if it is REALLy crucial to implement a functionality. But for basic things like array declarations? Its a different matter that almost every other language nowadays allow de-referencing of arrays, but PHP doesn't. Buy why break compatibility all of a sudden? I was quite annoyed by this. Other languages like python do their utmost to keep existing code from breaking, and upgrades to newer versions are in a phased manner.&lt;/p&gt;
&lt;p&gt;Again in the second case, the array declaration synatx ([x, y, z, ...]) works only in 5.4 and not in 5.3. Now I can understand the frustrations of all the developers who were happy moving to python and python-based frameworks. For a language already suffering from defects such as lack of organization in its functions and class-libraries, the designers' strategy to break code compatibility between PHP versions only for aesthetic reasons (array(a,b,c) vs [a, b, c]) is bound to lose the confidence of its users sooner or later.&lt;/p&gt;</content></entry><entry><title>9 Optimizations to make your Linux Desktop fly like a Rocket!</title><link href="blog/2014/06/9-optimizations-to-make-your-linux-desktop-fly-like-a-rocket.html" rel="alternate"></link><published>2014-06-28T03:11:00+05:30</published><updated>2014-06-28T03:11:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-06-28:blog/2014/06/9-optimizations-to-make-your-linux-desktop-fly-like-a-rocket.html</id><summary type="html">&lt;p&gt;This article is the result of notes I've prepared during tweaking, twisting and optimizing ubuntu variants over the last few years. In case you use any other distro, some of these settings may not be applicable to you. For best results, these changes must be done on top of a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This article is the result of notes I've prepared during tweaking, twisting and optimizing ubuntu variants over the last few years. In case you use any other distro, some of these settings may not be applicable to you. For best results, these changes must be done on top of a fresh installation, otherwise chances of things breaking increase a bit. Each step is optional - In case of software removals, do it only if you are not going to use the concerned software. Be careful before making any changes and know exactly what and why you are doing that.&lt;!--more--&gt;&lt;/p&gt;
&lt;h3&gt;#1 Optimize disk access with noatime:&lt;/h3&gt;
&lt;p&gt;Each file and folder on your linux system has a file-creation timestamp and a modification timestamp. Apart from that, linux tries to keep track of "access time" for each of these files. Now keeping track of the access time has its performace-cost, and if you want to remove this performance cost, you need to specify "noatime" attribute in the disk partition entries in your /etc/fstab file. Edit this file in your text-editor and set noatime as follows:&lt;/p&gt;
&lt;p&gt;UUID=97102801-14e3-9752-7412-d9c57e30981w / ext4 errors=remount-ro 0,&lt;strong&gt;noatime&lt;/strong&gt; 1&lt;/p&gt;
&lt;h3&gt;#2 Optimize Swappiness:&lt;/h3&gt;
&lt;p&gt;Swappiness is the tendency of the linux kernel to prefer disk-swapping vis-a-vis physical memory. The default swappiness value of 60 was kept considering server installations. If you are a desktop user having a machine with good RAM, you would normally prefer disk-swapping to be minimal. You can safely reduce this value to 10. To do so edit the file /etc/sysctl.conf and add the following:&lt;/p&gt;
&lt;p&gt;vm.swappiness=10&lt;/p&gt;
&lt;p&gt;(Just change the entry if it already exists, don't make a duplicate!)&lt;/p&gt;
&lt;h3&gt;#3 Install preload:&lt;/h3&gt;
&lt;p&gt;If you typically use the same programs regularly, preload will help you by loading into memory, the programs that you use most frequently. To install on ubuntu:&lt;/p&gt;
&lt;p&gt;sudo apt-get install preload&lt;/p&gt;
&lt;h3&gt;#4 Place your mission critical apps in /dev/shm:&lt;/h3&gt;
&lt;p&gt;Few weeks back, I was having performance issues with running Eclipse on ubuntu. After tweaking and optimizing various JVM settings in vain, the thing that really made the difference was &lt;a href="http://www.prahladyeri.com/2014/06/real-way-make-eclipse-run-faster-ubuntu/"&gt;placing the entire JDK folder in RAMDISK&lt;/a&gt;. The /dev/shm folder is like a virtual ramdisk (on ubuntu and derivatives) where you can place your temporal, high-priority stuff to run it in "best performance" mode.&lt;/p&gt;
&lt;h3&gt;#5 Remove unwanted programs from startup:&lt;/h3&gt;
&lt;p&gt;Many linux distros such as ubuntu come loaded with a ton of baggage, and if you are someone like me, you might feel obliged to reduce some burden off your system by removing or disabling unwanted software and daemons from it. You can do this by going to "Startup Applications" in the System menu, but ubuntu hides the pre-installed apps by default. To overcome this limitation, open your terminal and issue the below command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{lang="xml"}
sudo sed -i 's/NoDisplay=true/NoDisplay=false/g' /etc/xdg/autostart/*.desktop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.prahladyeri.com/uploads/2014/06/startup.png"&gt;&lt;img alt="ubuntu startup" class="alignnone size-full wp-image-3092" height="612" src="/uploads/old/startup.png" width="649"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you can go through the startup programs list and can disable the unwanted ones. Common sense will tell you that if you don't use bluetooth on your machine, you can get rid of the "Bluetooth Manager". Similar is the case with "Backup Monitor" in case you don't need to sync your backups in realtime. Here is the list of services that I've safely disabled without causing any issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Backup Monitor&lt;/li&gt;
&lt;li&gt;Bluetooth Manager&lt;/li&gt;
&lt;li&gt;Chat&lt;/li&gt;
&lt;li&gt;Desktop sharing&lt;/li&gt;
&lt;li&gt;Gwibber&lt;/li&gt;
&lt;li&gt;Ocra screen reader&lt;/li&gt;
&lt;li&gt;Personal file sharing&lt;/li&gt;
&lt;li&gt;Screen saver&lt;/li&gt;
&lt;li&gt;Ubuntu one&lt;/li&gt;
&lt;li&gt;update notifier&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;#6 Uninstall software that you don't use:&lt;/h3&gt;
&lt;p&gt;The next step is to remove those software that you don't use at all. Again, some common sense but with some caution is needed here. There are some programs (like empathy) that form the core part of ubuntu, so it won't allow you to "apt-get remove.." them without removing unity itself. In such cases, we will disable such programs from starting up as services (next step). Some of the programs that you may safely remove are:&lt;/p&gt;
&lt;p&gt;apt-get remove samba-common\
apt-get remove cups\
apt-get remove avahi-daemon avahi-autoipd&lt;/p&gt;
&lt;p&gt;I typically uninstall all three after a new installation. The first one is needed for file-sharing in the local network if you have one. Second is the print daemon, and third is used to broadcast common network services across the local network and finding local hosts by using friendly names like "local.workstation".&lt;/p&gt;
&lt;h3&gt;#7 Disable unwanted daemons:&lt;/h3&gt;
&lt;p&gt;In case you don't want to remove the cups program as you might need printing in future, you can disable them for the time being. To do so, issue the below command:&lt;/p&gt;
&lt;p&gt;sudo sh -c "echo 'manual' &gt;&gt; /etc/init/cups.override"&lt;/p&gt;
&lt;p&gt;You may disable any daemon in this manner by doing a manual override, just replace the "cups.override" with the daemon name that you want removed such as:&lt;/p&gt;
&lt;p&gt;sudo sh -c "echo 'manual' &gt;&gt; /etc/init/bluetooth.override"&lt;/p&gt;
&lt;p&gt;Later, if you want to enable that daemon, all you to do is delete the .override file.&lt;/p&gt;
&lt;h3&gt;#8 Optimize Nautilus to behave in a speedy manner:&lt;/h3&gt;
&lt;p&gt;This is totally optional. Nautilus, by default, tries to show thumbnails of each and every file in a directory. If the directory contains a lot of files, this causes a noticable delay. Now if you are in the habit of regularly previewing thumbnails of your images, don't do this optimization. Otherwise, if previewing thumbnails don't matter to you and all you are interested in is speed (like me), you can go to Edit-&gt;Preferences-&gt;Preview-tab and set the preview settings to Never.&lt;/p&gt;
&lt;h3&gt;#9 Disable translation downloads in aptitude:&lt;/h3&gt;
&lt;p&gt;This setting is for speeding up the downloads from apt repositories rather than your machine. By default, ubuntu adds additional translation repos when you issue "apt-get update" command to update your repository settings. If you only need english, you can disable translation downloads by editing /etc/apt/apt.conf.d/00aptitude and additing this line to it:&lt;/p&gt;
&lt;p&gt;Acquire::Languages "none";&lt;/p&gt;
&lt;p&gt;References:\
&lt;a href="http://askubuntu.com/questions/74653/how-can-i-remove-the-translation-entries-in-apt"&gt;http://askubuntu.com/questions/74653/how-can-i-remove-the-translation-entries-in-apt&lt;/a&gt;\
&lt;a href="http://askubuntu.com/questions/2194/how-can-i-improve-overall-system-performance"&gt;http://askubuntu.com/questions/2194/how-can-i-improve-overall-system-performance&lt;/a&gt;\
&lt;a href="http://askubuntu.com/questions/173094/how-can-i-use-ram-storage-for-the-tmp-directory-and-how-to-set-a-maximum-amount"&gt;http://askubuntu.com/questions/173094/how-can-i-use-ram-storage-for-the-tmp-directory-and-how-to-set-a-maximum-amount&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>PHP-FPM vs node.js - The REAL Performance Battle</title><link href="blog/2014/06/php-fpm-vs-node-js-the-real-performance-battle.html" rel="alternate"></link><published>2014-06-22T21:15:00+05:30</published><updated>2014-06-22T21:15:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-06-22:blog/2014/06/php-fpm-vs-node-js-the-real-performance-battle.html</id><summary type="html">&lt;p&gt;Even after my last &lt;a href="/blog/2014/06/php-vs-node-js-real-statistics.html"&gt;article&lt;/a&gt; about PHP and node.js benchmarking, my search for the holy grail of performance truth still continues. However, I do understand now that pitting PHP running on apache against a stand-alone node was a bit unfair with PHP for it was limited by what the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Even after my last &lt;a href="/blog/2014/06/php-vs-node-js-real-statistics.html"&gt;article&lt;/a&gt; about PHP and node.js benchmarking, my search for the holy grail of performance truth still continues. However, I do understand now that pitting PHP running on apache against a stand-alone node was a bit unfair with PHP for it was limited by what the apache configuration could handle.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/benchmark.png"&gt;&lt;img alt="Benchmark" class="alignnone size-full wp-image-3082" height="622" src="/uploads/old/benchmark.png" width="1021"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No, this time I went with nginx, a light and performance oriented server that was specifically designed to solve the &lt;a href="https://en.wikipedia.org/wiki/C10k"&gt;C10K&lt;/a&gt; problem from the ground-up. And who better than &lt;a href="http://php-fpm.org/"&gt;PHP-FPM&lt;/a&gt;, the enhanced Fastcgi process manager that implements asynchronous features (at least in theory) to take on &lt;a href="http://nodejs.org/"&gt;node.js&lt;/a&gt;. node.js is the one server that implements all its features primarily using callbacks in javascript, and thus drastically improvising performance by leveraging the benefits of &lt;a href="https://en.wikipedia.org/wiki/Functional_programming"&gt;functional programming&lt;/a&gt; (again, in theory).&lt;/p&gt;
&lt;p&gt;I used the same code I had used earlier but did a small improvement to it so that the random filenames generated for performing I/O are unique:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    &lt;?php 
    //asyncdemo.php
    $s=""; //generate a random string of 108KB and a random filename
    $filename="";
    //generate a random filename
    do {
        $fname = rand(1,99999).'.txt';
    } while(file_exists($fname));

    //generate a random string of 108kb
    for($i=0;$i&lt;108000;$i++)
    {
        $n=rand(0,57)+65;
        $s.=chr($n);
    }

    //write the string to disk
    file_put_contents($fname,$s);

    //read the string back from disk
    $result = file_get_contents($fname);

    //write the string back on the response stream
    echo $result;

&lt;/figure&gt;

&lt;p&gt;And here is the Javascript version:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //server.js
    var http = require('http');    
    var server = http.createServer(handler);
    var fs = require('fs');

    function handler(request, response) {
        response.writeHead(200, {'Content-Type': 'text/plain'});

        //generate a random filename
        do{fname = (1 + Math.floor(Math.random()*99999999))+'.txt';
        } while(fs.existsSync(fname));

        //generate a random string of 108kb
        var payload="";
        for(i=0;i&amp;lt;108000;i++)
        {
            n=Math.floor(65 + (Math.random()*(122-65)) );
            payload+=String.fromCharCode(n);
        }

        //write the string to disk in async manner
        fs.writeFile(fname, payload, function(err) {
                if (err) console.log(err);

                //read the string back from disk in async manner
                fs.readFile(fname, function (err, data) {
                    if (err) console.log(err);
                    response.end(data); //write the string back on the response stream
                });  
            }
        );
    }

    server.listen(8080);
    console.log('Running on localhost:8080');

&lt;/figure&gt;

&lt;p&gt;So, what happens when we run a piece of web application code performing async I/O for two thousand times (with two hundred concurrent) using a tool like apache-bench? Who is faster - PHP-FPM or node.js? Here is the answer.&lt;/p&gt;
&lt;p&gt;So, moral of the story is that even the latest and greatest of PHP world falls behind node.js (though by a much smaller margin than before). Now, I do understand that PHP's market is very large, and with so many opensource CMSes like wordpress, mediawiki and drupal already powered by PHP, it is quite difficult to shake PHP's market share in the near future.&lt;/p&gt;
&lt;p&gt;On the other hand, with the performance advantage that node.js offers, its a very lucrative option for startups small businesses that don't have the funding to develop high-end enterprise apps in say, Java or SAP. More importantly, if tommorrow I were to given a task of developing a performance-driven app, is there one reason why I should not write it in node.js and go for PHP-FPM instead? Some food for thought. Comments are Welcome!&lt;/p&gt;
&lt;figure class="highlight"&gt;
    Summarized results:
    PHP-FPM: 64.447 secondsnode.js: 42.441 seconds

    The Machine:
    Intel Pentium Dual-Core 2.30GHz running Linux 3.2.0

    The Configurations:
    PHP-FPM: PHP 5.4.23 (fpm-fcgi) (built: Jun 22 2014 14:51:15
    NODE: node v0.10.28

    Detailed Results:
    --PHP-FPM-----
    ab -c 200 -n 2000 http://localhost:8080/asyncdemo/asyncdemo.php

    Concurrency Level:      200
    Time taken for tests:   64.447 seconds
    Complete requests:      2000
    Failed requests:        6
       (Connect: 0, Receive: 0, Length: 6, Exceptions: 0)
    Write errors:           0
    Non-2xx responses:      6
    Total transferred:      215649378 bytes
    HTML transferred:       215355222 bytes
    Requests per second:    31.03 [#/sec] (mean)
    Time per request:       6444.742 [ms] (mean)
    Time per request:       32.224 [ms] (mean, across all concurrent requests)
    Transfer rate:          3267.70 [Kbytes/sec] receive


    --NODE-----
    ab -c 200 -n 2000 http://localhost:8080/

    Concurrency Level:      200
    Time taken for tests:   42.441 seconds
    Complete requests:      2000
    Failed requests:        1
       (Connect: 0, Receive: 0, Length: 1, Exceptions: 0)
    Write errors:           0
    Total transferred:      216155440 bytes
    HTML transferred:       215953440 bytes
    Requests per second:    47.12 [#/sec] (mean)
    Time per request:       4244.115 [ms] (mean)
    Time per request:       21.221 [ms] (mean, across all concurrent requests)
    Transfer rate:          4973.69 [Kbytes/sec] received


&lt;/figure&gt;</content></entry><entry><title>PHP vs node.js: The REAL statistics</title><link href="blog/2014/06/php-vs-node-js-real-statistics.html" rel="alternate"></link><published>2014-06-09T21:36:00+05:30</published><updated>2014-06-09T21:36:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-06-09:blog/2014/06/php-vs-node-js-real-statistics.html</id><summary type="html">&lt;p&gt;When it comes to web programming, I've always coded in ASP.NET or the LAMP technologies for most part of my life. Now, the new buzz in the city is &lt;a href="https://en.wikipedia.org/wiki/Node.js"&gt;node.js&lt;/a&gt;. It is a light-weight platform that runs javascript code on server-side and is said to improvise performance by …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When it comes to web programming, I've always coded in ASP.NET or the LAMP technologies for most part of my life. Now, the new buzz in the city is &lt;a href="https://en.wikipedia.org/wiki/Node.js"&gt;node.js&lt;/a&gt;. It is a light-weight platform that runs javascript code on server-side and is said to improvise performance by using async I/O.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://notes.ericjiang.com/posts/751"&gt;theory&lt;/a&gt; suggests that synchronous or blocking model of I/O works something like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/2014/06/nodejs-comp.png"&gt;&lt;img alt="Blocking I/O" class="alignnone size-full wp-image-3070" height="354" src="/uploads/old/nodejs-comp.png" width="506"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I/O is typically the costliest part of a web transaction. When a request arrives to the apache web server, it passes it to PHP interpreter for scripting any dynamic contents. Now comes the tricky part - If the PHP script wants to read something from the disk/database or write to it, that is the slowest link in the chain. When you call PHP function file_get_contents(), the entire thread is blocked until the contents are retrieved! The server can't do anything until your script gets the file contents. Consider what happens when multiples of simultaneous requests are issued by different users to your server? They get queued, because no thread is available to do the job since they are all blocked in I/O!&lt;/p&gt;
&lt;p&gt;Here comes the unique selling-point of node.js. Since node.js implements async I/O in almost all its functions, the server thread in the above scenario is freed as soon as the file retrieval function (fs.readFile) is called. Then, once the I/O completes, node calls a function (passed earlier by fs.readFile) along with the data parameters. In the meantime, that valuable thread can be used for serving some other request.&lt;/p&gt;
&lt;p&gt;So thats the theory about it anyway. But I'm not someone who just accepts any new fad in the town just because it is hype and everyone uses it. Nope, I want to get under the covers and verify it for myself. I wanted to see whether this theory holds in actual practice or not.&lt;/p&gt;
&lt;p&gt;So I brought upon myself the job of writing two simple scripts for benchmarking this - one in PHP (hosted on apache2) and other in javascript (hosted on node.js). The test itself was very simple. The script would:&lt;/p&gt;
&lt;p&gt;1. Accept the request.\
2. Generate a random string of 108 kilobytes.\
3. Write the string to a file on the disk.\
4. Read the contents back from disk.\
5. Return the string back on the response stream.&lt;/p&gt;
&lt;p&gt;This is the first script, index.php:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    &lt;?php
    //index.php
    $s=""; //generate a random string of 108KB and a random filename
    $fname = chr(rand(0,57)+65).chr(rand(0,57)+65).chr(rand(0,57)+65).chr(rand(0,57)+65).'.txt';
    for($i=0;$i&amp;lt;108000;$i++)
    {
        $n=rand(0,57)+65;
        $s = $s.chr($n);
    }

    //write s to a file
    file_put_contents($fname,$s);
    $result = file_get_contents($fname);
    echo $result;

&lt;/figure&gt;

&lt;p&gt;And here is the second script, server.js:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    //server.js
    var http = require('http');    
    var server = http.createServer(handler);

    function handler(request, response) {
        //console.log('request received!');
        response.writeHead(200, {'Content-Type': 'text/plain'});

        s=""; //generate a random string of 108KB and a random filename
        fname = String.fromCharCode(Math.floor(65 + (Math.random()*(122-65)) )) +
            String.fromCharCode(Math.floor(65 + (Math.random()*(122-65)) )) +
            String.fromCharCode(Math.floor(65 + (Math.random()*(122-65)) )) + 
            String.fromCharCode(Math.floor(65 + (Math.random()*(122-65)) )) + ".txt";

        for(i=0;i&amp;lt;108000;i++)
        {
            n=Math.floor(65 + (Math.random()*(122-65)) );
            s+=String.fromCharCode(n);
        }

        //write s to a file
        var fs = require('fs');
        fs.writeFile(fname, s, function(err, fd) {
                if (err) throw err;
                //console.log("The file was saved!");
                //read back from the file
                fs.readFile(fname, function (err, data) {
                    if (err) throw err;
                    result = data;
                    response.end(result);
                });  
            }
        );
    }

    server.listen(8124);
    console.log('Server running at http://127.0.0.1:8124/');

&lt;/figure&gt;

&lt;p&gt;And then, I ran the apache benchmarking tool on both of them with 2000 requests (200 concurrent). When I saw the time stats of the result, I was astounded:&lt;/p&gt;
&lt;p&gt;``` {lang="xml"}&lt;/p&gt;
&lt;h1&gt;PHP:&lt;/h1&gt;
&lt;p&gt;Concurrency Level:      200
Time taken for tests:   574.796 seconds
Complete requests:      2000&lt;/p&gt;
&lt;h1&gt;node.js:&lt;/h1&gt;
&lt;p&gt;Concurrency Level:      200
Time taken for tests:   41.887 seconds
Complete requests:      2000
```&lt;/p&gt;
&lt;p&gt;The truth is out. node.js was faster than PHP by more 14 times! These results are astonishing. It simply means that node.js IS going to be THE de-facto standard for writing performance driven apps in the upcoming future, there is no doubt about it!&lt;/p&gt;
&lt;p&gt;Agreed that the &lt;a href="http://nodejs.org"&gt;nodejs&lt;/a&gt; ecosystem isn't that widely developed yet, and most node modules for things like db connectivity, network access, utilities, etc. are actively being developed. But still, after seeing these results, its a no-brainer. Any extra effort spent in developing node.js apps is more than worth it. PHP might be still having the "king of web" status, but with node.js in the town, I don't see that status staying for very long!&lt;/p&gt;
&lt;h2&gt;Update&lt;/h2&gt;
&lt;p&gt;After reading some comments from the below section, I felt obliged to create a C#/mono version too. This, unfortunately, has turned out to be the slowest of the bunch (\~40 secs for 1 request). Either the Task library in mono is terribly implemented, or there is something terribly wrong with my &lt;a href="http://pastebin.mozilla.org/5406784"&gt;code&lt;/a&gt;. I'll fix it once I get some time and be back with my next post (maybe ASP.NET vs node.js vs PHP!).&lt;/p&gt;
&lt;h2&gt;Second Update&lt;/h2&gt;
&lt;p&gt;As for C#/ASP.NET, this is the most optimum version that I could manage. It still lags behind both PHP and node.js and most of the issued requests just get dropped. (And yes, I've tested it on both Linux/Mono and Windows-Server-2012/IIS environments). Maybe ASP.NET is inherently slower, so I'll have to change the terms of this benchmark to take it into comparison:&lt;/p&gt;
&lt;figure class="highlight"&gt;
    public class Handler : System.Web.IHttpHandler
    {
        private StringBuilder payload = null;

        private async void processAsync()
        {
            var r = new Random ();

            //generate a random string of 108kb
            payload=new StringBuilder();
            for (var i = 0; i &amp;lt; 54000; i++)
                payload.Append( (char)(r.Next(65,90)));

            //create a unique file
            var fname = "";
            do{fname = @"c:\source\csharp\asyncdemo\" + r.Next (1, 99999999).ToString () + ".txt";
            } while(File.Exists(fname));            

            //write the string to disk in async manner
            using(FileStream fs = File.Open(fname,FileMode.CreateNew,FileAccess.ReadWrite))
            {
                var bytes=(new System.Text.ASCIIEncoding ()).GetBytes (payload.ToString());
                await fs.WriteAsync (bytes,0,bytes.Length);
                fs.Close ();
            }

            //read the string back from disk in async manner
            payload = new StringBuilder ();
            StreamReader sr = new StreamReader (fname);
            payload.Append(await sr.ReadToEndAsync ());
            sr.Close ();
            //File.Delete (fname); //remove the file
        }

        public void ProcessRequest (HttpContext context)
        {
            Task task = new Task(processAsync);
            task.Start ();
            task.Wait ();

            //write the string back on the response stream
            context.Response.ContentType = "text/plain";
            context.Response.Write (payload.ToString());
        }

        public bool IsReusable 
        {
            get {
                return false;
            }
        }
    }

&lt;/figure&gt;

&lt;p&gt;References&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Node.js"&gt;https://en.wikipedia.org/wiki/Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://notes.ericjiang.com/posts/751"&gt;http://notes.ericjiang.com/posts/751&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nodejs.org"&gt;http://nodejs.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/node-js-vs-apache-php-benchmark/wiki/Tests"&gt;https://code.google.com/p/node-js-vs-apache-php-benchmark/wiki/Tests&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>How to create a custom email plugin for Wordpress</title><link href="blog/2014/06/how-to-create-a-custom-email-plugin-for-wordpress.html" rel="alternate"></link><published>2014-06-07T10:39:00+05:30</published><updated>2014-06-07T10:39:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-06-07:blog/2014/06/how-to-create-a-custom-email-plugin-for-wordpress.html</id><summary type="html">&lt;p&gt;Last week, I suddenly stopped receiving email notifications for my &lt;a href="https://www.openshift.com/"&gt;openshift&lt;/a&gt; hosted blog. I came to know after some &lt;a href="http://stackoverflow.com/questions/17583205/sendmail-on-openshift-php-codeigniter/17598537#17598537"&gt;reading&lt;/a&gt; that commonly used cloud hosts such as openshift, aws, etc. are usually blacklisted by most email servers, hence its not a good idea to use them to send mails.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last week, I suddenly stopped receiving email notifications for my &lt;a href="https://www.openshift.com/"&gt;openshift&lt;/a&gt; hosted blog. I came to know after some &lt;a href="http://stackoverflow.com/questions/17583205/sendmail-on-openshift-php-codeigniter/17598537#17598537"&gt;reading&lt;/a&gt; that commonly used cloud hosts such as openshift, aws, etc. are usually blacklisted by most email servers, hence its not a good idea to use them to send mails.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;In any case, why should I depend on my hosting provider for email sending. Until now, I had never bothered about how mail sending worked in wordpress as it used to work out of the box. So last week, I pulled up my socks and decided to put my php &lt;a href="http://en.wikipedia.org/wiki/Geany"&gt;IDE&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Xdebug"&gt;debugger&lt;/a&gt; to some good work.&lt;/p&gt;
&lt;p&gt;I decided to use my &lt;a href="https://sendgrid.com"&gt;sendgrid&lt;/a&gt; account to send mails. All that`s needed now is calling the web service with the credentials they've provided. But how to integrate this with my wordpress blog?&lt;/p&gt;
&lt;p&gt;Once I located &lt;strong&gt;&lt;em&gt;where&lt;/em&gt;&lt;/strong&gt; the mail sending functionality is there in wordpress code, adding a new method was a piece of cake!! Turns out that wordpress, by default, just executes the "mail" command which is usually just a symlink on unix boxes actually pointing to &lt;em&gt;/usr/bin/sendmail&lt;/em&gt; or something. I found it in a pluggable function &lt;em&gt;wp_mail()&lt;/em&gt;. (see &lt;em&gt;/wp-includes/pluggable.php&lt;/em&gt;). I also came to know from the codex that &lt;a href="http://codex.wordpress.org/Pluggable_Functions"&gt;pluggable functions&lt;/a&gt; can be easily overridden by plugins.&lt;/p&gt;
&lt;p&gt;Now all I had to do was write a small plugin in the /wp-content/plugins/sendgrid/ folder and override this wp_mail() function with whatever I want.&lt;/p&gt;
&lt;p&gt;Lo and behold! I started receiving notifications for all comments and contact forms filled, by just writing this one plugin. I found the process so simple and easy to integrate with wordpress that I couldn't help sharing with you. Here are the two php snippets that you need to place in /wp-content/plugins/&lt;em&gt;your-plugin-name&lt;/em&gt;/ and activate it. &lt;em&gt;Wordpress&lt;/em&gt; will do the rest!&lt;/p&gt;
&lt;p&gt;(First one is the main plugin php file that displays the plugin in your admin menu and overrides the wp_mail function. The second php file contains the actual custom function that sends email via sendgrid.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;wp-content/plugins/sendgrid/myplugin.php:&lt;/em&gt;&lt;/p&gt;
&lt;figure class="highlight"&gt;
    &lt;?php /**
     * Plugin Name: Sendgrid Plugin
     * Plugin URI:  http://www.prahladyeri.com
     * Description: Mail sending using Sendgrid Web API
     * Version:     0.1
     * Author:      Prahlad Yeri
     * Author URI:  http://www.prahladyeri.com
     * License:     MIT
     */

    //namespace MailDemo;
    require_once('sendgrid.php');

    add_action( 'init', 'plugin_init' );

    /**
     * Plugin Name: Prahlad's mail
     * Description: Alternative way to send a mail
     */
    if (!function_exists('wp_mail')) 
    {
        function wp_mail($to, $subject, $message, $headers = '', $attachments = array())
        {
            $sto = '';
            if (is_array($to))
            {
                $sto = implode(',',$to);
            } else {
                $sto = $to;
            }
            sendgridmail('wpadmin@mywebsite.com', $sto, $subject, $message, $headers);
        }
    }

    function plugin_init()
    {
    }

&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;wp-content/plugins/sendgrid/sendgrid.php:&lt;/em&gt;&lt;/p&gt;
&lt;figure class="highlight"&gt;
    &lt;?php //wp-content/plugins/sendgrid/sendgrid.php
    function sendgridmail($from, $to, $subject, $message, $headers) {        
    $url = 'https://api.sendgrid.com/';
    $user='your-sendgrid-username';   
    $pass='your-sendgrid-password';

    $params = array(       
    'api_user'  ?&gt; $user,
            'api_key'   =&gt; $pass,
            'to'        =&gt; $to,
            'subject'   =&gt; $subject,
            'html'      =&gt; '',
            'text'      =&gt; $message,
            'from'      =&gt; $from,
          );


        $request =  $url.'api/mail.send.json';

        // Generate curl request
        $session = curl_init($request);
        // Tell curl to use HTTP POST
        curl_setopt ($session, CURLOPT_POST, true);
        // Tell curl that this is the body of the POST
        curl_setopt ($session, CURLOPT_POSTFIELDS, $params);
        // Tell curl not to return headers, but do return the response
        curl_setopt($session, CURLOPT_HEADER, false);
        curl_setopt($session, CURLOPT_RETURNTRANSFER, true);

        print_r('obtaining the response');
        // obtain response
        $response = curl_exec($session);
        print_r('closing curl session');
        curl_close($session);

        // print everything out
        //print_r($response);
    }

    //only for testing:
    /*$to      = 'prahladyeri@yahoo.com';
    $subject = 'Testemail';
    $message = 'It works!!';
    echo 'To is: ' + $to;
    #wp_mail($to, $subject, $message, array() );
    sendgridmail($to, $subject, $message, array());
    print_r('Just sent!');*/

&lt;/figure&gt;

&lt;p&gt;References:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://codex.wordpress.org/Pluggable_Functions"&gt;http://codex.wordpress.org/Pluggable_Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://codex.wordpress.org/Pluggable_Functions"&gt;http://stackoverflow.com/questions/17583205/sendmail-on-openshift-php-codeigniter/17598537#17598537&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Geany"&gt;http://en.wikipedia.org/wiki/Geany&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Xdebug"&gt;http://en.wikipedia.org/wiki/Xdebug&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sendgrid.com"&gt;https://sendgrid.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sendgrid.com/docs/"&gt;https://sendgrid.com/docs/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openshift.com/"&gt;https://www.openshift.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>An Introduction to Go - Elegance with Power and Simplicity</title><link href="blog/2014/06/an-introduction-to-go-elegance-with-power-and-simplicity.html" rel="alternate"></link><published>2014-06-05T12:42:00+05:30</published><updated>2014-06-05T12:42:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-06-05:blog/2014/06/an-introduction-to-go-elegance-with-power-and-simplicity.html</id><summary type="html">&lt;p&gt;Whilst I usually try to stick with only "bread-butter" languages (i.e. php, python, java &amp;amp; C#), my last project involved the &lt;a href="https://developers.google.com/appengine"&gt;Google appengine&lt;/a&gt; web app written in Google's own flagship &lt;a href="https://en.wikipedia.org/wiki/Go_%28programming_language%29"&gt;Go&lt;/a&gt; language.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Being a polyglot who is always intrigued by new languages, I couldn't help being curious about how it …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whilst I usually try to stick with only "bread-butter" languages (i.e. php, python, java &amp;amp; C#), my last project involved the &lt;a href="https://developers.google.com/appengine"&gt;Google appengine&lt;/a&gt; web app written in Google's own flagship &lt;a href="https://en.wikipedia.org/wiki/Go_%28programming_language%29"&gt;Go&lt;/a&gt; language.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Being a polyglot who is always intrigued by new languages, I couldn't help being curious about how it was coding with Go, hence I took on the project. My experience of coding with Go was so gratifying that I couldn't help but share it with you.&lt;/p&gt;
&lt;p&gt;Go has a unique blend of elegance combined with power: For coding and maintaining apps in any language, readability is a very important feature. As your project size grows bigger and bigger, this becomes more and more important. In fact, you are even prepared to sacrifice some performance gain achieved by low level languages like C to get the developer productivity achieved through more 'readable' languages like java and python. This factor partly explains why less and less programs are coded in C/C++ now and more in java. It also explains the recent popularity of python, an interpreted and relatively 'low performance' language compared to its siblings, Java and C++.&lt;/p&gt;
&lt;p&gt;What Go brings to the table is a graceful combination of both readability and performance. Yes, unbelievable but true! It has the compiler and the strongest type system like that of C/C++ coupled with a syntax that feels home with dynamic languages like python. It even has the simplicity that is comparable to python.&lt;/p&gt;
&lt;p&gt;Syntactically, Go is based on C++, but with lots of modifications that make it easy to use, such as:&lt;/p&gt;
&lt;p&gt;1. No semicolons (;) to end the statements;&lt;/p&gt;
&lt;p&gt;2. No type declaration needed like C (int i=2;). In Go, types are automatically “guessed” from value (i := 2).&lt;/p&gt;
&lt;p&gt;3. No containing braces required statements like for and if.&lt;/p&gt;
&lt;p&gt;An example would be helpful here to grasp how Go is different and better. Consider a simple square-root calculation function in C++:&lt;/p&gt;
&lt;p&gt;``` {lang="go"}
float Sqrt(float x) {
    int z = 1.0;
    for (int i= 0; i &amp;lt; 1000; i++) {
        z -= (z*z - x) / (2 * z);
    }
    return z;
}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; 

Now here the same function written in Go:

 

``` {lang=&amp;quot;go&amp;quot;}
package newmath

func Sqrt(x float64) float64 {
    z := 1.0
    for i := 0; i &amp;lt; 1000; i++ {
        z -= (z*z - x) / (2 * z)
    }
    return z
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Did you notice a few things about Go? For instance:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;1. Less clunkiness:&lt;/em&gt; No need of hashes, braces around the ifs/fors and no need of semicolons to end statements (some of you might argue about semicolons, saying it allows you to quickly combine multiple statements on one line, but do you realize how less readable code you are creating by doing that?)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2. Dynamism:&lt;/em&gt; The := is a “short assignment” operator in Go, meaning that you don't need to specify its type. “z:=1.0” is certainly more elegant compared to “float z = 10;”.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;3. Efficient compilation:&lt;/em&gt; Despite the dynamic nature of this language that seems to suggest an interpreted nature, Go compiles and runs as efficiently as a low-level language such as C/C++.&lt;/p&gt;
&lt;p&gt;Another reason for investing your skills in Go is that Go has &lt;a href="https://developers.google.com/appengine/docs/go/"&gt;Google's backing&lt;/a&gt;. Indeed, the language itself is a Google invention and Google has started implementing it in most of its projects such as the &lt;a href="https://developers.google.com/appengine"&gt;Google Appengine&lt;/a&gt; cloud hosting service.&lt;/p&gt;
&lt;p&gt;A controversy that might indirectly pave the way for Go's success is the looming high-profile &lt;a href="https://en.wikipedia.org/wiki/Oracle_v._Google"&gt;Oracle vs Google&lt;/a&gt; lawsuit about Oracle's accusations that Google incorrectly used its copyrighted Java APIs for implementing its Android operating system. Its quite unlikely that Oracle is able to get away with its claims, but if the uncertainty regarding this stays for any time longer, its very much possible that Google will gradually start building its Android APIs in Go language slowly discarding the Java APIs.&lt;/p&gt;
&lt;p&gt;Now I'm not a fortune-teller, but looking at the way things are currently positioned, Go doesn't look like a language that is going to fade anytime soon.&lt;/p&gt;
&lt;p&gt;You can have a look at official Go docs, tutorials and a list of libraries and utilities provided in references below. Happy learning Go Language!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: If you are running a debian based linux system like ubuntu, you can install golang using the CLI:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;sudo apt-get install gccgo&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;References:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://golang.org/help/"&gt;http://golang.org/help/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://golang.org/"&gt;http://golang.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.google.com/p/go-wiki/wiki/Projects"&gt;https://code.google.com/p/go-wiki/wiki/Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://golang.org/doc/faq"&gt;http://golang.org/doc/faq&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://developers.google.com/appengine/docs/go/"&gt;https://developers.google.com/appengine/docs/go/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Go_%28programming_language%29"&gt;https://en.wikipedia.org/wiki/Go_%28programming_language%29&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Oracle_v._Google"&gt; https://en.wikipedia.org/wiki/Oracle_v._Google&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>The REAL way to make Eclipse run faster on Ubuntu</title><link href="blog/2014/06/real-way-make-eclipse-run-faster-ubuntu.html" rel="alternate"></link><published>2014-06-02T09:57:00+05:30</published><updated>2014-06-02T09:57:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-06-02:blog/2014/06/real-way-make-eclipse-run-faster-ubuntu.html</id><summary type="html">&lt;p&gt;If you are still one of those people who are frustrated with the crawling speed of eclipse IDE (especially after the recent clunky releases of Juno/Kepler), then you are in good company! Most of the advice you might have read until now for speeding up Eclipse must have involved …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you are still one of those people who are frustrated with the crawling speed of eclipse IDE (especially after the recent clunky releases of Juno/Kepler), then you are in good company! Most of the advice you might have read until now for speeding up Eclipse must have involved tweaking the following parameters in eclipse.ini file:&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;::: {.wp_syntax}
&lt;code class="python"&gt;-Xmn512m -Xms1024m -Xmx1024m -Xss2m -XX:PermSize=1024m -XX:MaxPermSize=1024m -XX:+UseParallelGC&lt;/code&gt;&lt;/code&gt;
:::&lt;/p&gt;
&lt;p&gt;Since Eclipse is pretty much a RAM hungry monster, feeding it with lots of RAM should surely make it run fast, right? Wrong! Until recently I had spent a lot of time tweaking those parameters, but no substantial performance could be gained (though I have 4GB of RAM with i3 which is not a bad configuration). The main issue here is that the underlying linux won't provide the required boost to eclipse no matter whatever the parameters you provide. For instance, the system monitor shows that eclipse is only consuming 500Mb RAM, now what difference will it make if I provide 2048m to -XX:MaxPermSize?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.prahladyeri.com/uploads/2014/06/eclipse-monitor.png"&gt;&lt;img alt="System Monitor" class="size-medium wp-image-2969" src="/uploads/old/eclipse-monitor-300x236.png"&gt;&lt;/a&gt; System Monitor&lt;/p&gt;
&lt;p&gt;My search lead me to another better &lt;a href="http://ubuntuguide.net/ubuntu-using-ramdisk-for-better-performance-and-fast-response"&gt;approach&lt;/a&gt; to solving this problem. If somehow we can load JDK into a shared memory or a RAM-Disk instead of it starting from the local hard-disk, both startup time and performance could be drastically improved.&lt;/p&gt;
&lt;p&gt;But how do we create a RAM-Disk on linux? Well, if you using ubuntu, then you are in &lt;a href="http://superuser.com/questions/45342/when-should-i-use-dev-shm-and-when-should-i-use-tmp"&gt;luck!&lt;/a&gt; Ubuntu has a working RAM-Disk folder called &lt;strong&gt;/dev/shm&lt;/strong&gt; that could be globally used by any application as a temporary storage. If you go to that folder, you can see lots of files stored by pulseaudio.&lt;/p&gt;
&lt;p&gt;I thought why not copy the JDK folder to /dev/shm and provide that as a -vm parameter to eclipse. Lo and behold! Eclipse runs about 10 times faster on my ubuntu machine. Try it yourself and let me know (If you are having performance issues with Eclipse, that is..-).&lt;/p&gt;</content></entry><entry><title>How to make your ubuntu machine thank you for its battery life!</title><link href="blog/2014/04/how-to-make-your-ubuntu-machine-thank-you-for-its-battery-life.html" rel="alternate"></link><published>2014-04-21T04:18:00+05:30</published><updated>2014-04-21T04:18:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-04-21:blog/2014/04/how-to-make-your-ubuntu-machine-thank-you-for-its-battery-life.html</id><summary type="html">&lt;p&gt;Ever since I bought my Toshiba Dual-core Notebook and installed ubuntu on it, I was disappointed by the fact that how quickly it used to heat up and the battery started draining. Add to the equation, the Indian summer of 40 degrees Celsius plus, and you soon have your fans …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever since I bought my Toshiba Dual-core Notebook and installed ubuntu on it, I was disappointed by the fact that how quickly it used to heat up and the battery started draining. Add to the equation, the Indian summer of 40 degrees Celsius plus, and you soon have your fans crying with agony.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Of course,  the Toshiba CD comes with all the bells and whistles for power saving, but thats only for the Windows users, what about us Linuxers? After some &lt;a href="http://www.noobslab.com/2013/10/enable-laptop-mode-and-other-tweaks-to.html"&gt;research&lt;/a&gt;, I came to know about some tweaks I can perform on my ubuntu system so that my laptop not only heats less, but also gets its battery life expanded!&lt;/p&gt;
&lt;p&gt;The fact is that one of the most power hungry component of your machine is the CPU (apart from your LCD/screen). Assuming that you are already sane enough not to keep your screen brightness at its max, here is an important tweak that you may perform to prolong the life of your battery. If you are having any issues with your CPU fan making a lot of &lt;a href="http://lifehacker.com/5813003/how-can-i-quiet-a-noisy-computer-fan"&gt;noise&lt;/a&gt;, this will help with that issue too, (since by lowering your CPU consumption you will make your fan work less).&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.prahladyeri.com/uploads/2014/04/indicator-cpufreq.png"&gt;&lt;img alt="indicator-cpufreq - An ubuntu app" class="size-full wp-image-2524" height="221" src="/uploads/old/indicator-cpufreq.png" width="173"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;indicator-cpufreq - An ubuntu app&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This small wonder of an app can be installed on ubuntu by issuing "&lt;strong&gt;&lt;em&gt;sudo apt-get install indicator-cpufreq&lt;/em&gt;&lt;/strong&gt;".&lt;/p&gt;
&lt;p&gt;Once it is installed just add the command "indicator-cpufreq" to your startup applications, and you will see the above applet in your ubuntu system tray! You may now choose to set your CPU scaling mode to "Powersave" whenever you are performing any less cpu-intensive task (like most of us) such as editing a Libreoffice document or a spreadsheet. On the other hand, you may occasionally set the scaling mode to "Performance" when you are doing some cpu-intensive task such as playing a 3D game.&lt;/p&gt;
&lt;p&gt;By default, the applet starts in "&lt;strong&gt;Ondemand&lt;/strong&gt;" mode. To, set the default to "&lt;strong&gt;Powersave&lt;/strong&gt;", all you have to do is make a small edit to script &lt;em&gt;/etc/init.d/ondemand&lt;/em&gt; as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    ....
    &lt;span class="k"&gt;for&lt;/span&gt; CPUFREQ in /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor
    &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="o"&gt;[&lt;/span&gt; -f &lt;span class="nv"&gt;$CPUFREQ&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;
        &lt;span class="c1"&gt;#changed by Prahlad from ondemand to powersave&lt;/span&gt;
        &lt;span class="nb"&gt;echo&lt;/span&gt; -n powersave &amp;gt; &lt;span class="nv"&gt;$CPUFREQ&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;
    ....
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Take this small step (if you already haven't) and see how your battery life prolongs, as your electricity bill falls!!&lt;/p&gt;
&lt;address&gt;
**References:**

&lt;/address&gt;

&lt;ol&gt;
&lt;li&gt;&lt;address&gt;
    http://www.noobslab.com/2013/10/enable-laptop-mode-and-other-tweaks-to.html
    &lt;/address&gt;&lt;/li&gt;
&lt;li&gt;&lt;address&gt;
    http://askubuntu.com/questions/223250/how-to-tweak-powertop-to-reduce-power-consumption?rq=1
    &lt;/address&gt;&lt;/li&gt;
&lt;li&gt;&lt;address&gt;
    http://lifehacker.com/5866009/control-your-computers-fan-speeds-for-better-performance-when-you-need-it-silence-when-you-dont
    &lt;/address&gt;&lt;/li&gt;
&lt;li&gt;&lt;address&gt;
    http://lifehacker.com/5813003/how-can-i-quiet-a-noisy-computer-fan
    &lt;/address&gt;&lt;/li&gt;
&lt;li&gt;&lt;address&gt;
    https://bugs.launchpad.net/indicator-cpufreq/+bug/1082868
    &lt;/address&gt;&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>Google appengine tip: How to clear appcfg credential cache</title><link href="blog/2014/01/google-appengine-tip-how-to-clear-appcfg-credential-cache.html" rel="alternate"></link><published>2014-01-19T23:19:00+05:30</published><updated>2014-01-19T23:19:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2014-01-19:blog/2014/01/google-appengine-tip-how-to-clear-appcfg-credential-cache.html</id><summary type="html">&lt;p&gt;Many a times, it so happens that you need to work with multiple credentials while uploading/downloading apps on Google appengine. In such a scenario, it becomes difficult to switch credentials instantly.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/gae_new_Logo.png"&gt;&lt;img alt="gae_new_Logo" class="alignnone size-full wp-image-1382" height="48" src="/uploads/old/gae_new_Logo.png" width="54"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For instance, you have just uploaded an app using appcfg.py with your google credentials and they are …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Many a times, it so happens that you need to work with multiple credentials while uploading/downloading apps on Google appengine. In such a scenario, it becomes difficult to switch credentials instantly.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/gae_new_Logo.png"&gt;&lt;img alt="gae_new_Logo" class="alignnone size-full wp-image-1382" height="48" src="/uploads/old/gae_new_Logo.png" width="54"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For instance, you have just uploaded an app using appcfg.py with your google credentials and they are still stored in the cache. So when you want to upload a new app, it won't ask you for email/password and still try to retrieve old credentials automatically ignoring any command-line parameters you have given! Thus, you keep scratching your head as to why you are getting a permission-denied error while uploading/downloading the app!&lt;/p&gt;
&lt;p&gt;The only way out here is clearing the credential cache of appcfg. On Linux systems, these are stored in a file called:&lt;/p&gt;
&lt;p&gt;``` {lang="python"}
/home/username/.appcfg_cookies&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;On Windows based systems, these are typically stored in:

``` {lang=&amp;quot;python&amp;quot;}
C:\Users\username\.appcfg_cookies
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Just delete this file and you are done! Next time, appcfg.py will ask you for a fresh google email and password, thus enabling you to upload/download your app.&lt;/p&gt;
&lt;p&gt;References:\
&lt;a href="http://stackoverflow.com/questions/5149914/how-to-save-my-user-account-and-password-in-google-app-engine-launcher"&gt;http://stackoverflow.com/questions/5149914/how-to-save-my-user-account-and-password-in-google-app-engine-launcher\
&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>How to host your own mail server using Google appengine</title><link href="blog/2013/12/how-to-host-your-own-mail-server-using-google-appengine.html" rel="alternate"></link><published>2013-12-30T21:23:00+05:30</published><updated>2013-12-30T21:23:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-12-30:blog/2013/12/how-to-host-your-own-mail-server-using-google-appengine.html</id><summary type="html">&lt;p&gt;Google has an outstanding habit of bringing the power of elites to the masses. Firstly, they took over the world of smartphones with android, and now the buzzword everywhere is Google Appengine.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Once you get the basics of GAE and start looking beyond your first &lt;a href="/blog/2013/12/how-to-create-a-pythonic-app-in-google-app-engine/" title="How to create a Python app in Google App Engine"&gt;HelloWorld&lt;/a&gt; application, you will start …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Google has an outstanding habit of bringing the power of elites to the masses. Firstly, they took over the world of smartphones with android, and now the buzzword everywhere is Google Appengine.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;Once you get the basics of GAE and start looking beyond your first &lt;a href="/blog/2013/12/how-to-create-a-pythonic-app-in-google-app-engine/" title="How to create a Python app in Google App Engine"&gt;HelloWorld&lt;/a&gt; application, you will start appreciating the sheer power it provides compared to other paid hosting providers. GAE provides you the ability to send mails from your app without paying a single penny. Only if your app starts exceeding the usage quotas, you will have to pay in order to continue using the services.&lt;/p&gt;
&lt;p&gt;An application of the above is creating and hosting your own email server through your app. Below is a single python script which acts as an http mail server that can route your email requests. It also doubles up as a test server so you can test the hosted service by appending the "/test" subdirectory to the url. You may pass http POST requests to your app including fields like username, to, cc, subject etc. once you build this script and host your app in the google cloud.&lt;/p&gt;
&lt;figure class="highlight"&gt;
    #main.py
    import webapp2
    import urllib2
    from google.appengine.api import users,mail

    class TestPage(webapp2.RequestHandler):
        def get(self):
            body = """
            &amp;lt;form method="post" action="http://your-app-id.appspot.com"&gt;
            Full Name: &amp;lt;input name="fullname" /&gt;&amp;lt;br /&gt;
            user: &amp;lt;input name="username" /&gt;&amp;lt;br /&gt;
            to: &amp;lt;input name="to" /&gt;&amp;lt;br /&gt;
            cc: &amp;lt;input name="cc" /&gt;&amp;lt;br /&gt;
            bcc: &amp;lt;input name="bcc" /&gt;&amp;lt;br /&gt;
            subject: &amp;lt;input name="subject" /&gt;&amp;lt;br /&gt;
            body: &amp;lt;textarea name="body"&gt;&amp;lt;/textarea&gt;&amp;lt;br /&gt;
            &amp;lt;input type="submit" /&gt;
            &amp;lt;/form&gt;
            """
            self.response.write(body)

    class MainPage(webapp2.RequestHandler):
        def post(self):
            #TODO: check if password is correct.

            #From will actually be a placeholder, since only your own appspotmail addresses would be allowed.
            tfullname = self.request.get('fullname')
            tusername = self.request.get('username')
            tto = self.request.get('to')
            tcc = self.request.get('cc')
            tbcc = self.request.get('bcc')
            tsubject = self.request.get('subject')
            tbody = self.request.get('body')
            tattachment = self.request.get('attachment')
            send_mail(fullname=tfullname,username=tusername,to=tto,subject=tsubject,body=tbody,cc=tcc,bcc=tbcc,attachment=tattachment)
            self.response.write("success")
            #self.response.write(tto)

        def get(self):
            #self.response.headers['Content-Type'] = 'text/plain'
            self.response.out.write("""your-app-id http mail service version 1.0.&amp;lt;br /&gt;
            post vars:
            [password]
            [fullname]
            [username]
            [to]
            [cc]
            [bcc]
            [subject]
            [body]
            [attachment]

            &amp;lt;br /&gt;
            &amp;lt;br /&gt;

            &amp;lt;a type="button" href="test"&gt;Click here for a demo&amp;lt;/a&gt;
            """)

    def send_mail(fullname,username,to,subject,body,cc=None,bcc=None,attachment=None):
        sender=fullname + " &amp;lt;" + username + "@your-app-id.appspotmail.com&gt;"
        message = mail.EmailMessage(sender=sender)
        message.to = to
        if cc!=None and cc!='':
            message.cc=cc
        if bcc!=None and bcc!='':
            message.bcc = bcc
        message.subject = subject
        message.body = body
        message.send()

    application = webapp2.WSGIApplication([
                                           ('/', MainPage),
                                           ('/test', TestPage)
                                           ], debug=True)

&lt;/figure&gt;

&lt;p&gt;So now, you may bid farewell to third party mail services like mail-chimp and others - since you have your own mail server.&lt;/p&gt;</content></entry><entry><title>How to create a Python app in Google App Engine</title><link href="blog/2013/12/how-to-create-a-python-app-in-google-app-engine.html" rel="alternate"></link><published>2013-12-06T18:35:00+05:30</published><updated>2013-12-06T18:35:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-12-06:blog/2013/12/how-to-create-a-python-app-in-google-app-engine.html</id><summary type="html">&lt;p&gt;Whilst the &lt;a href="https://developers.google.com/appengine/docs/python"&gt;official pythonic reference&lt;/a&gt; for Google app engine is the way I learnt how to build my first GAE app, I found it a bit frustrating to go through &lt;a href="https://developers.google.com/appengine/docs/python/#Python_Selecting_the_Python_runtime"&gt;each&lt;/a&gt; and &lt;a href="https://developers.google.com/appengine/docs/python/#Python_The_environment"&gt;every&lt;/a&gt; link and understand large topics like caching and data stores in detail just to build a small …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whilst the &lt;a href="https://developers.google.com/appengine/docs/python"&gt;official pythonic reference&lt;/a&gt; for Google app engine is the way I learnt how to build my first GAE app, I found it a bit frustrating to go through &lt;a href="https://developers.google.com/appengine/docs/python/#Python_Selecting_the_Python_runtime"&gt;each&lt;/a&gt; and &lt;a href="https://developers.google.com/appengine/docs/python/#Python_The_environment"&gt;every&lt;/a&gt; link and understand large topics like caching and data stores in detail just to build a small hello world pythonic app in Google App Engine. What I wanted was a quick and dirty tutorial that let me build a small app first, and then let me improvise upon the areas that I needed to dig deeper.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/gae_python.png"&gt;&lt;img alt="How to Create a Pythonic app in Google App Engine" class="alignnone wp-image-301" height="150" src="/uploads/old/gae_python.png" width="150"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I couldn't find such a tutorial anywhere, so I'm writing this one.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Setup your Environment:&lt;/strong&gt; Download and install &lt;a href="http://www.python.org/getit/releases/2.7/"&gt;python 2.7&lt;/a&gt; for your platform, if you haven't done so already (as of this writing, only 2.5 and 2.7 versions are supported) . Then, download and install the GAE API from &lt;a href="https://developers.google.com/appengine/downloads#Google_App_Engine_SDK_for_Python"&gt;here&lt;/a&gt;. MSI setups are available for windows platform. For linux, you can just unzip into a local folder like '\~/programs/'. The zip file will create a subdir called 'google_appengine'. Practically, the only two python scripts you are ever going to need to develop a GAE app are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dev_appserver.py&lt;/li&gt;
&lt;li&gt;appcfg.py&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Register your app on appspot.com:&lt;/strong&gt; The next step is to register your subdomain on GAE by visiting &lt;a href="https://appengine.google.com/"&gt;https://appengine.google.com&lt;/a&gt;. Once you register your app there, you will get a subdomain called &lt;strong&gt;http://&lt;em&gt;your-app-id&lt;/em&gt;.appspot.com&lt;/strong&gt;. There are also options for redirecting your custom domain such as &lt;strong&gt;www.mydomain.com&lt;/strong&gt; to your app subdomain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create your app on the local machine:&lt;/strong&gt; This is as simple as creating a folder on your machine such as \~/source/foo in linux or C:\source\foo in windows. Then just create a text file named app.yaml  with below contents inside this folder:&lt;/p&gt;
&lt;p&gt;``` {lang="python"}
application: your-app-id
version: 1
runtime: python27
api_version: 1
threadsafe: true&lt;/p&gt;
&lt;p&gt;handlers:
- url: /.*
  script: helloworld.application
```&lt;/p&gt;
&lt;p&gt;Note that &lt;strong&gt;your-app-id&lt;/strong&gt; is the name that you just registered for yourself, make sure that it is typed correctly. version parameter refers to the version of your app, while api_version is the version of GAE SDK used to run this app. The line "script: helloworld.application" indicates that this wsgi handler will be invoked for your app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create the wsgi handler:&lt;/strong&gt; This is as simple as creating a python file named "helloworld.py" in the same folder as above, and add below contents to it:&lt;/p&gt;
&lt;p&gt;``` {lang="python"}
import webapp2&lt;/p&gt;
&lt;p&gt;class MainPage(webapp2.RequestHandler):&lt;/p&gt;
&lt;p&gt;def get(self):
        self.response.headers['Content-Type'] = 'text/plain'
        self.response.write('Hello, World!')&lt;/p&gt;
&lt;p&gt;application = webapp2.WSGIApplication([
    ('/', MainPage),
], debug=True)
```&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Test your app: &lt;/strong&gt;To test your app, open up your terminal and change directory to your GAE installation folder (alternatively, add the GAE installation folder to your PATH/\$PATH environment variable to avoid doing this each time), and then type the below command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python dev_appserver.py ~/source/foo
#OR on windows:
python dev_appserver.py C:\source\foo
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Deploy your app:&lt;/strong&gt; Want to host this app on GAE and check it out? Just fire up your terminal as described above and issue this command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python appcfg.py update ~/source/foo
#OR on windows:
python appcfg.py update C:\source\foo
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Test your app:&lt;/strong&gt; The above command should host your app on your appspot subdomain (It will ask for your google username/password before doing so). Once the app is successfully hosted, you can check it out by visiting http://your-app-id.appspot.com.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Furthur reading:&lt;/strong&gt; Now that you have a working app, you can actually visit the official reference to read more about:&lt;ol&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/appengine/docs/python/gettingstartedpython27/handlingforms"&gt;webapp2&lt;/a&gt;: The pythonic web framework used to handle requests and generate responses.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/appengine/docs/python/#Python_The_Datastore_and_services"&gt;Datastore&lt;/a&gt;: The big data storage feature that GAE provides your app to store its data.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/appengine/docs/python/#Python_Quotas_and_limits"&gt;Quotas and Limits&lt;/a&gt;: Learn about the various limits that google sets for your app to access resources (Don't worry, they are enough to suffice a small to medium scale app).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/appengine/docs/python/#Python_App_caching"&gt;App caching&lt;/a&gt;: Learn how to take advantage of various caching mechanisms in GAE to speed up your app.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>How to create android dialogs in a reusable manner</title><link href="blog/2013/12/how-to-create-android-dialogs-in-a-reusable-manner.html" rel="alternate"></link><published>2013-12-01T04:55:00+05:30</published><updated>2013-12-01T04:55:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-12-01:blog/2013/12/how-to-create-android-dialogs-in-a-reusable-manner.html</id><summary type="html">&lt;p&gt;Creating dialogs is a very common need in your app to show a dialog box to the user in order to fetch a value, be it a mobile, desktop or even a web application. Furthermore, the values can range from anything like simple &lt;em&gt;OK-Cancel&lt;/em&gt; dialog results to a list of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Creating dialogs is a very common need in your app to show a dialog box to the user in order to fetch a value, be it a mobile, desktop or even a web application. Furthermore, the values can range from anything like simple &lt;em&gt;OK-Cancel&lt;/em&gt; dialog results to a list of "check-able" values or even a date-range.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.prahladyeri.com/uploads/2013/11/droid-man.png"&gt;&lt;img alt="droid-man" class="alignnone wp-image-209" height="70" src="/uploads/old/droid-man.png" width="60"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I experienced the need to create an android dialog for each one of those for showing reports in a recent android app project. [Whilst the java api offers maximum flexibility in creating dialog interface elements, there is no ready-made method that can be called to get, say a result for a message-dialog like this:]{style="line-height: 1.714285714; font-size: 1rem;"}&lt;/p&gt;
&lt;p&gt;``` {lang="java"}
result = MessageBox.Show();&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Other languages like C\# and VB provide such methods to show modal dialog boxes that return values after waiting for a modal dialog. But unfortunately, there is no concept of &amp;quot;modal&amp;quot; in android. A thread cannot just sit idle waiting for input as the resources are too valuable for that. Instead, there is the concept of callbacks, so that instead of you waiting for the dialog to return, the method calls back a function reference you have passed it:

``` {lang=&amp;quot;java&amp;quot;}
AlertDialog.Builder builder=new AlertDialog.Builder(context);
builder.setTitle(&amp;quot;Milk supply tracker&amp;quot;);
builder.setMessage(message);
builder.setPositiveButton(&amp;quot;Yes&amp;quot;,listener);
builder.setNegativeButton(&amp;quot;No&amp;quot;,listener);
builder.create().show();
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The listener here is the referece to a function that will be called when the Yes or No button will be clicked. This not only complicates your code, but makes it very difficult to reuse code for handling different situations like getting a selection from a range of values or getting a date/time range. To solve this problem, I created a separate java class called Dialog and added variations of ShowDialog() methods to handle each type of dialog:&lt;/p&gt;
&lt;p&gt;``` {lang="java"}
class Dialog
{
    public static void ShowMessageDialog(Context context, String message)
    {
        ShowDialog(context,message,MessageBoxType.OKOnly,new String[]{},false, null,null);
    }&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;public static void ShowMessageDialog(Context context, String message, MessageBoxType type , OnClickListener listener)
 {
     ShowDialog(context,message,type,new String[]{},false, listener,null);
 }

public static void ShowListDialog(Context context, String message, String[] listItems, boolean isMultiChoice, OnClickListener listener)
 {
 if (isMultiChoice)
     ShowDialog(context, message, MessageBoxType.OkCancel , listItems, isMultiChoice, listener,null);
 else
     ShowDialog(context, message, MessageBoxType.OKOnly , listItems, isMultiChoice, null,listener);
 }

public static void ShowDateDialog(Context context,String message,OnDateSetListener listener)
{
    Calendar c=Calendar.getInstance();
    int y=c.get(Calendar.YEAR);
    int m=c.get(Calendar.MONTH);
    int d=c.get(Calendar.DAY_OF_MONTH);

    DatePickerDialog dlg=new DatePickerDialog(context, listener, y, m, d);
    dlg.setTitle(message);
    dlg.show();
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;As you can see, the ShowMessageDialog() accepts different parameters depending on whether a listener is required or not. ShowListDialog(), on the other hand passes an array of strings to create a dialog displaying a list of values from which a user may select. The isMultiChoice parameter tells whether a checkbox is required or not against each value in the select list. All this is actually implemented in the ShowDialog() private method, whereas the ShowDateDialog() has its own implementation. Here is the source for ShowDialog():

``` {lang=&amp;quot;java&amp;quot;}
private static void ShowDialog(Context context, String message, MessageBoxType type , String[] listItems, boolean isMultiChoice, OnClickListener listener,OnClickListener selectedItemListener)
{
    AlertDialog.Builder builder=new AlertDialog.Builder(context);

    if (listItems.length&amp;gt;0 &amp;amp;&amp;amp; isMultiChoice==false)
    {
        CheckedItems=new ArrayList();//won&amp;#39;t be used in this case.
        builder.setTitle(message);

        builder.setItems(listItems, selectedItemListener);
    }
    else if (listItems.length&amp;gt;0 &amp;amp;&amp;amp; isMultiChoice==true)
    {
        CheckedItems=new ArrayList();
        builder.setTitle(message);

        builder.setMultiChoiceItems(listItems, null, new OnMultiChoiceClickListener() 
        {
            @Override
            public void onClick(DialogInterface dialog, int which, boolean checked) 
            {
                if (checked)
                    CheckedItems.add(which);
                else
                {
                    if (CheckedItems.contains(which))
                        CheckedItems.remove(which);
                }
            }
        });
    }
    else
    {
        builder.setTitle(&amp;quot;Milk supply tracker&amp;quot;);
        builder.setMessage(message);
    }

    if (listItems.length==0 || isMultiChoice)
    {
        switch(type)
        {
        case OKOnly:
            builder.setPositiveButton(&amp;quot;OK&amp;quot;,listener);
            break;
        case OkCancel:
            builder.setPositiveButton(&amp;quot;OK&amp;quot;,listener);
            builder.setNegativeButton(&amp;quot;Cancel&amp;quot;,listener);
            break;
        case YesNo:
            builder.setPositiveButton(&amp;quot;Yes&amp;quot;,listener);
            builder.setNegativeButton(&amp;quot;No&amp;quot;,listener);
            break;
        }           
    }

    builder.create().show();
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So hopefully, this class should suffice all your needs related to showing a dialog on your android app. Here is a working example of how the ShowListDialog() is actually called with checkboxes on:&lt;/p&gt;
&lt;p&gt;``` {lang="java"}
selItems=new String[]{"apples","oranges","grapes"};
Device.ShowListDialog(this,"Select a fruit" ,this.selItems, true, new DialogInterface.OnClickListener() {&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;Override&lt;/span&gt;
    &lt;span class="nt"&gt;public&lt;/span&gt; &lt;span class="nt"&gt;void&lt;/span&gt; &lt;span class="nt"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;DialogInterface&lt;/span&gt; &lt;span class="nt"&gt;dialog&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;int&lt;/span&gt; &lt;span class="nt"&gt;which&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;which&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nt"&gt;DialogInterface&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;BUTTON_POSITIVE&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="err"&gt;for(int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Device&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CheckedItems&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Dialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ShowMessageDialog&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ReportsActivity&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;selected:&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;selItems&lt;/span&gt;&lt;span class="cp"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;]&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;}
```&lt;/p&gt;</content></entry><entry><title>How to uniquely identify your Android device in code</title><link href="blog/2013/11/how-to-uniquely-identify-your-android-device-in-code.html" rel="alternate"></link><published>2013-11-28T02:17:00+05:30</published><updated>2013-11-28T02:17:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-11-28:blog/2013/11/how-to-uniquely-identify-your-android-device-in-code.html</id><summary type="html">&lt;p&gt;My last android project involved tracking each device where the app is installed and storing the information to a database. It is quite a common need to uniquely identify your android device in code.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/droid-man.png"&gt;&lt;img alt="droid-man" class="alignnone wp-image-209" height="70" src="/uploads/old/droid-man.png" width="60"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, had it been a PC, it would have been easy to track the MAC-address of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;My last android project involved tracking each device where the app is installed and storing the information to a database. It is quite a common need to uniquely identify your android device in code.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/droid-man.png"&gt;&lt;img alt="droid-man" class="alignnone wp-image-209" height="70" src="/uploads/old/droid-man.png" width="60"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now, had it been a PC, it would have been easy to track the MAC-address of the NIC or an HDD serial to uniquely identify and track that device. But what is the equivalent for android?&lt;/p&gt;
&lt;p&gt;My research first led me to IMEI number (&lt;em&gt;TelephonyManager.getDeviceId()&lt;/em&gt;). IMEI is a unique number associated with your device (pretty much like a vehicle's chassis number) and is widely used for tracking cellphones. The android API provides this ready-made function to uniquely identify your device if you wish to go this route:&lt;/p&gt;
&lt;p&gt;``` {lang="java"}
public static String getDeviceIdTm(Context context)
{
    TelephonyManager tm=(TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE);
    return tm.getDeviceId();
}&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;But wait, not all devices are equipped with Telephony. What about tablets and amazon kindle devices? It so happens, that this is just one way to track your device, but it is not full-proof. It will work only for phones and for other devices this function will return null.

This led me to another way of tracking an Android device: An in-built variable that the Android system itself provides you: ANDROID\_ID. In theory, this variable is all you need to know to identify your device uniquely:

``` {lang=&amp;quot;java&amp;quot;}
public static String getDeviceIdAndroid(Context context)
{
    return Secure.getString(context.getContentResolver(),Secure.ANDROID_ID);
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But Alas! Even this is not full-proof. It will work on most modern versions of android (HoneyComb and above). Again, due to a manufacturer bug, it will not return a unique value, but a constant value "9774d56d682e549c" on some handsets.&lt;/p&gt;
&lt;p&gt;This led me to a third way of identifying my device which was a bit hackish. I prefer not to use this method if any of the prior two methods worked.&lt;/p&gt;
&lt;p&gt;``` {lang="java"}
public static String getDeviceIdPseudo(Context context)
 {
     String tstr="";
     if (Build.VERSION.SDK_INT &amp;gt; Build.VERSION_CODES.FROYO) {
         tstr+= Build.SERIAL;
         tstr += "::" + (Build.PRODUCT.length() % 10) + (Build.BOARD.length() % 10) + (Build.BRAND.length() % 10) + (Build.CPU_ABI.length() % 10) + (Build.DEVICE.length() % 10) + (Build.MANUFACTURER.length() % 10) + (Build.MODEL.length() % 10);
         return tstr;
    }
 }&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;This method computes a Pseudo-id for your device taking reference to some hardware values. If the previous two methods don&amp;#39;t work, then this is all you are left with for device identification.

I then integrated the above three methods to create a generic method called ***getDeviceIdUnique()*** that will work on all android devices - irrespective of whether its a phone/tablet or what make it is:

``` {lang=&amp;quot;java&amp;quot;}
public static String getDeviceIdUnique(Context context)
 {
     try {
         String a = getDeviceIdTm(context);
         String b = getDeviceIdAndroid(context);
         String c = getDeviceIdPseudo(context);

         if (a!=null &amp;amp;&amp;amp; a.length()&amp;gt;0 &amp;amp;&amp;amp; a.replace(&amp;quot;0&amp;quot;, &amp;quot;&amp;quot;).length()&amp;gt;0) 
             return a;
         else if (b!=null &amp;amp;&amp;amp; b.length()&amp;gt;0 &amp;amp;&amp;amp; b.equals(&amp;quot;9774d56d682e549c&amp;quot;)==false) 
             return b;
         else if (c!=null &amp;amp;&amp;amp; c.length()&amp;gt;0) 
             return c;
         else
             return &amp;quot;&amp;quot;;
         }
     catch(Exception ex)
     {
         return &amp;quot;&amp;quot;;
     }
 }
&lt;/pre&gt;&lt;/div&gt;


&lt;address&gt;
References:

&lt;/address&gt;

&lt;address&gt;
&lt;http://stackoverflow.com/questions/2785485/is-there-a-unique-android-device-id&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://stackoverflow.com/questions/4468248/unique-id-of-android-device&gt;

&lt;/address&gt;</content></entry><entry><title>The 7 "Bread and Butter" Plugins for your Wordpress blog</title><link href="blog/2013/11/the-7-bread-and-butter-plugins-for-your-wordpress-blog.html" rel="alternate"></link><published>2013-11-27T19:09:00+05:30</published><updated>2013-11-27T19:09:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-11-27:blog/2013/11/the-7-bread-and-butter-plugins-for-your-wordpress-blog.html</id><summary type="html">&lt;p&gt;Based on my experiments while setting up this blog, below are the 7 "bread and butter" plugins for your wordpress blog. These plugins came very handy for me and allowed me to seamlessly integrate much needed functionality in my blog without writing a single line of php code.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/database_active.png"&gt;&lt;img alt="Wordpress Plugin" class="alignnone wp-image-186" height="77" src="/uploads/old/database_active.png" width="77"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/plugins/contact-form-7/"&gt;Contact Form …&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;Based on my experiments while setting up this blog, below are the 7 "bread and butter" plugins for your wordpress blog. These plugins came very handy for me and allowed me to seamlessly integrate much needed functionality in my blog without writing a single line of php code.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/database_active.png"&gt;&lt;img alt="Wordpress Plugin" class="alignnone wp-image-186" height="77" src="/uploads/old/database_active.png" width="77"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/plugins/contact-form-7/"&gt;Contact Form 7&lt;/a&gt; (Contact Forms): &lt;/strong&gt;While designing this blog, a Contact page was one of my primary requirements. This plugin is popular and well maintained. Once installed, you will have a Contact tab on your dashboard that has a default contact-form with a short-code. You can copy-paste this short-code into any post or page of yours, and lo and behold! You have a contact form ready such as &lt;a href="http://www.prahladyeri.com/contact/" title="Contact"&gt;the one on this blog&lt;/a&gt;. Of course, you can customize the default contact-form to change the fields to suit your particular needs. By default, the form filled by the user is mailed to the admin user's email address. If you want to store the form data in the WP database in addition to that, you will have to install the &lt;a href="http://wordpress.org/extend/plugins/flamingo/"&gt;Flamingo&lt;/a&gt; plugin along with this.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/plugins/jetpack/"&gt;Jetpack&lt;/a&gt; (Multi-purpose): &lt;/strong&gt;This is what I would term the "bread-and-butter" plugin for wordpress blog owners. Brought to you by Automattic (the company behind Wordpress), this plugin provides almost every feature a blogger can think of such as:&lt;ul&gt;
&lt;li&gt;Comprehensive statistics such as hits per page/post, incoming/outoing links, referrals, etc.&lt;/li&gt;
&lt;li&gt;Social buttons and a social-networking based comment system.&lt;/li&gt;
&lt;li&gt;Email subscriptions for your blog posts and comments.&lt;/li&gt;
&lt;li&gt;A mobile theme that automatically streamlines your site for mobile visitors.&lt;/li&gt;
&lt;li&gt;Allowing your readers to login to your blog using their wordpress.com account.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/plugins/akismet/"&gt;Akismet&lt;/a&gt; (Spam control): &lt;/strong&gt;Again, this is a "bread and butter" kind of plugin. What kind of blogger, in his right mind, will trust comments on his high-traffic blog to be spam free! Akismet is a web-service that specializes in eradicating spam. Once you install this plugin, all your comments will be scanned by this web service before they make way to your dashboard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/extend/plugins/wordpress-importer/"&gt;WordPress Importer&lt;/a&gt; (migrating your existing wordpress blog): &lt;/strong&gt;If you are migrating your posts from another wordpress hosted blog or a wordpress.com blog (like I did), you need this plugin to import the posts that you exported from there. In fact, wordpress automatically prompts you to install this plugin when you go to Dashboard-&gt;Tools-&gt;Import to import your posts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/plugins/xml-sitemap-feed/"&gt;XML Sitemap &amp;amp; Google News Feeds&lt;/a&gt; (Submitting sitemaps to spiders): &lt;/strong&gt;A well written blog must also be searchable by spiders and search-engines, so that it can send readers to your blog. Now, when you submit your blog url to the search-engines like Google or Bing, it pays to have a sitemap so that the spiders know how is your blog or website structured. After installing this plugin, an automatic sitemap url is seamlessly generated for you at http://Your-WP-URL/sitemap.xml. You can then submit this sitemap url to the search engines and thus increase the visibility of your wordpress blog.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/plugins/w3-total-cache/"&gt;W3 Total Cache&lt;/a&gt; (caching and performance): &lt;/strong&gt;Whilst I haven't installed this plugin myself yet, it is said to improve the performance of your blog by serving static content to your users instead of running heavy-duty php scripts that increase your backend load. This plugin is also recommended by the XML Sitemap plugin.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://wordpress.org/plugins/backup/"&gt;Backup&lt;/a&gt; (backing up your wordpress site):&lt;/strong&gt; You usually take an export of your posts from the Tools-Export menu, but if you want to backup your entire wordpress blog including the mysql database dump and all files used for hosting your wordpress blog, then this plugin is the way to go.&lt;/li&gt;
&lt;/ol&gt;</content></entry><entry><title>How to Generate PDFs in Python for Google App Engine</title><link href="blog/2013/11/how-to-generate-pdf-in-python-for-google-app-engine.html" rel="alternate"></link><published>2013-11-26T19:07:00+05:30</published><updated>2013-11-26T19:07:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-11-26:blog/2013/11/how-to-generate-pdf-in-python-for-google-app-engine.html</id><summary type="html">&lt;p&gt;One of my last projects based on google app engine and python involved storing form data in GAE datastore and generating PDF documents that the user can download. Whilst data storing was the easier part as google's big data API it is pretty &lt;a href="https://developers.google.com/appengine/docs/python/datastore/"&gt;well documented&lt;/a&gt;, the trickier aspect was to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;One of my last projects based on google app engine and python involved storing form data in GAE datastore and generating PDF documents that the user can download. Whilst data storing was the easier part as google's big data API it is pretty &lt;a href="https://developers.google.com/appengine/docs/python/datastore/"&gt;well documented&lt;/a&gt;, the trickier aspect was to convert it to PDF using python.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/pdf.png"&gt;&lt;img alt="pdf" class="alignnone wp-image-164" height="108" src="/uploads/old/pdf-300x300.png" width="108"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This was especially difficult in the face of GAE not providing an easy mechanism for disk writing that most PDF generation libraries require. To share my endeavors, I'm writing this post about how to generate pdfs in python for Google app engine.&lt;/p&gt;
&lt;p&gt;The solution I came across was, as far as I know, the only possible way of generating PDFs in python! There are about three PDF generation utilities in python, each differing in terms of their area of usage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.reportlab.com"&gt;&lt;strong&gt;Reportlab PDF library&lt;/strong&gt;&lt;/a&gt;: This is the ideal library, if you want to create a pdf from scratch. It provides objects like canvas, pdfmetrics and ttfonts that help you with stuff like adding lines, shapes, images and paragraphs. This is pretty much comparable to the comprehensive iText java library or its C# port, iTextSharp. Their &lt;a href="http://www.reportlab.com/software/documentation/"&gt;documentation&lt;/a&gt; is also good.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.xhtml2pdf.com/"&gt;&lt;strong&gt;xhtml2pdf&lt;/strong&gt;&lt;/a&gt;: If you want to simply convert an existing html document to pdf, the xhtml2pdf library comes in very handy.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pypi.python.org/pypi/pyPdf"&gt;&lt;strong&gt;pyPDF&lt;/strong&gt;&lt;/a&gt;: If all you want to do is merge two PDFs page by page quickly, this library is the way to go.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I figured out after researching the above three libraries that a combination of xhtml2pdf and pyPDF is what I needed. Since I already had the html document template ready, I just put placeholders for my form data like __name__ , __occupation__, etc so that I can fill these before converting to PDF.&lt;/p&gt;
&lt;p&gt;Now, I could fill these values from my python program, but the real challenge was storing the resulting PDF to disk, which was not allowed by google app engine! Turns out, we don't need to actually store anything to disk. By sending the CreatePDF() output to a &lt;a href="http://docs.python.org/library/stringio.html"&gt;StringIO&lt;/a&gt; object, which is stored in memory instead of the filesystem, I could bypass the need to actually store anything to disk!!&lt;/p&gt;
&lt;p&gt;``` {lang="python"}
f=open('template.htm','r')
sourceHtml = unicode(f.read(), errors='ignore')
f.close()
sourceHtml = template.render(tvals)
sourceHtml = sourceHtml.replace('&lt;strong&gt;name&lt;/strong&gt;',sname)
sourceHtml = sourceHtml.replace('&lt;strong&gt;address&lt;/strong&gt;',saddress)
sourceHtml = sourceHtml.replace('&lt;strong&gt;occupation&lt;/strong&gt;',will.occupation)
packet = StringIO.StringIO() #write to memory
pisa.CreatePDF(sourceHtml,dest=packet)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Now, it would have been simple to just self.response.write(packet) to send this pdf download to the user, but in my case, I had to merge this generated pdf with another template-pdf which contained information like symbols, images and page-numbers that for some reason, could not be placed into the html document. So, I had to create a PdfFileReader object (coutesy of PyPDF library!), and then merge each page of my generated document with this template document. Then where do I write this merged output? Any guesses? - another StringIO object!! And then finally, write this StringIO object to self.response, so the user can download it.

``` {lang=&amp;quot;python&amp;quot;}
packet.seek(0)
new =PdfFileReader(packet) #generated pdf
template = PdfFileReader(file(&amp;quot;template.pdf&amp;quot;, &amp;quot;rb&amp;quot;)) #template pdf
output=PdfFileWriter() #writer for the merged pdf
for i in range(new.getNumPages()):
    page=template.getPage(i)
    page.mergePage(new.getPage(i))
    output.addPage(page)

outputStream = StringIO.StringIO()
output.write(outputStream) #write merged output to the StringIO object

self.response.headers[&amp;#39;Content-Type&amp;#39;] = &amp;#39;application/pdf&amp;#39;
fname = (will.name if mirror==&amp;#39;n&amp;#39; else will.partner)
self.response.headers[&amp;#39;Content-Disposition&amp;#39;] = &amp;#39;attachment; filename=&amp;#39; + str(fname).replace(&amp;#39; &amp;#39;,&amp;#39;_&amp;#39;) + &amp;#39;.pdf&amp;#39;
self.response.write(outputStream.getvalue())
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remember to add and include the below libraries before you do this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{lang="python"}
import StringIO
import xhtml2pdf.pisa as pisa
from pyPdf import PdfFileWriter,PdfFileReader
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.pdfbase import pdfmetrics,ttfonts&lt;/code&gt;&lt;/p&gt;
&lt;address&gt;
References:

&lt;/address&gt;

&lt;address&gt;
&lt;https://developers.google.com/appengine/docs/python/datastore/&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://www.reportlab.com/software/documentation/&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://www.xhtml2pdf.com/&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;https://pypi.python.org/pypi/pyPdf&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://stackoverflow.com/questions/4899885/how-to-set-any-font-in-reportlab-canvas-in-python&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://stackoverflow.com/questions/13522638/paginating-in-pisa-xhtml2pdf-just-repeats-last-page&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://docs.python.org/library/stringio.html&gt;

&lt;/address&gt;

&lt;address&gt;

&lt;/address&gt;</content></entry><entry><title>3 Steps to integrate barcode scanning in your Android app</title><link href="blog/2013/11/three-steps-to-integrate-barcode-scanning-in-your-android-app.html" rel="alternate"></link><published>2013-11-24T14:50:00+05:30</published><updated>2013-11-24T14:50:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-11-24:blog/2013/11/three-steps-to-integrate-barcode-scanning-in-your-android-app.html</id><summary type="html">&lt;p&gt;Whilst barcode scanning is a pretty complex and non-trivial task in itself, it could be overwhelming sometimes with android programming. Lucky for us, there exists an opensource project called &lt;a href="https://github.com/zxing/zxing"&gt;&lt;em&gt;ZXing (pronounced Zebra-crossing)&lt;/em&gt;&lt;/a&gt; that solves this problem for us.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/barcode.png"&gt;&lt;img alt="Barcode" class="wp-image-152 alignnone" height="77" src="/uploads/old/barcode.png" width="108"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The ZXing project has already done the heavy lifting by programming the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Whilst barcode scanning is a pretty complex and non-trivial task in itself, it could be overwhelming sometimes with android programming. Lucky for us, there exists an opensource project called &lt;a href="https://github.com/zxing/zxing"&gt;&lt;em&gt;ZXing (pronounced Zebra-crossing)&lt;/em&gt;&lt;/a&gt; that solves this problem for us.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="/uploads/old/barcode.png"&gt;&lt;img alt="Barcode" class="wp-image-152 alignnone" height="77" src="/uploads/old/barcode.png" width="108"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The ZXing project has already done the heavy lifting by programming the core java components required to scan a 1d/2d barcode or even a PR-code in the form of a &lt;a href="https://play.google.com/store/apps/details?id=com.google.zxing.client.android"&gt;Google-play app&lt;/a&gt;. All you have to do is send an intent to this app and receive the scanned results that you may use in your app.&lt;/p&gt;
&lt;p&gt;The ZXing project is Apache licensed, so it is free to use without any kind of restrictions. Follow these steps to integrate ZXing with your app:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Step 1:&lt;/em&gt;&lt;/strong&gt; Download the source for IntentIntegrator.java and IntentResult.java from &lt;a href="http://code.google.com/p/zxing/source/browse/trunk#trunk%2Fandroid-integration%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgoogle%2Fzxing%2Fintegration%2Fandroid"&gt;here&lt;/a&gt; and add the files to your android project sources.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Step 2:&lt;/em&gt;&lt;/strong&gt; Start an intent in that part of your code where you would like to initiate the barcode scanning (such as a menu handler):&lt;/p&gt;
&lt;p&gt;``` {lang="java"}
IntentIntegrator integrator = new IntentIntegrator(yourActivity);
integrator.initiateScan();&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="nt"&gt;Step&lt;/span&gt; &lt;span class="nt"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:***&lt;/span&gt; &lt;span class="nt"&gt;All&lt;/span&gt; &lt;span class="nt"&gt;that&lt;/span&gt; &lt;span class="nt"&gt;remains&lt;/span&gt; &lt;span class="nt"&gt;now&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;handle&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;result&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;this&lt;/span&gt; &lt;span class="nt"&gt;activity&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;your&lt;/span&gt; &lt;span class="nt"&gt;onActivityResult&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="nt"&gt;handler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;This&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;how&lt;/span&gt; &lt;span class="nt"&gt;I&lt;/span&gt; &lt;span class="nt"&gt;did&lt;/span&gt; &lt;span class="nt"&gt;it&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;my&lt;/span&gt; &lt;span class="nt"&gt;code&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;

&lt;span class="err"&gt;```&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;lang=&amp;quot;java&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;requestCode&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nt"&gt;IntentIntegrator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;REQUEST_CODE&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;IntentResult&lt;/span&gt; &lt;span class="err"&gt;scanResult&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;IntentIntegrator.parseActivityResult(requestCode,&lt;/span&gt; &lt;span class="err"&gt;resultCode,&lt;/span&gt; &lt;span class="err"&gt;data)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="err"&gt;if&lt;/span&gt; &lt;span class="err"&gt;(scanResult&lt;/span&gt; &lt;span class="err"&gt;!=&lt;/span&gt; &lt;span class="err"&gt;null)&lt;/span&gt;
    &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;handle&lt;/span&gt; &lt;span class="err"&gt;scan&lt;/span&gt; &lt;span class="err"&gt;result&lt;/span&gt;
        &lt;span class="err"&gt;//MessageBox.run(this,&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;&amp;quot;,&lt;/span&gt; &lt;span class="err"&gt;&amp;quot;toString()&lt;/span&gt; &lt;span class="n"&gt;returns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; + scanResult.toString());&lt;/span&gt;
&lt;span class="s2"&gt;    }&lt;/span&gt;
&lt;span class="s2"&gt;    else&lt;/span&gt;
&lt;span class="s2"&gt;    {&lt;/span&gt;
&lt;span class="s2"&gt;        // else continue with any other code you need in the method&lt;/span&gt;
&lt;span class="s2"&gt;        MessageBox.run(this, &amp;quot;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="n"&gt;scanResult&lt;/span&gt; &lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That`s all! The above code not only returns the barcode scanning result to your app, but even prompts the user to install a barcode scanner app in case one isn't there. This is the easiest and recommended way of integrating barcode scanning in your android app.&lt;/p&gt;
&lt;p&gt;In case you want to embed the entire ZXing component in your app and don't want to install an app separately for it, refer to the relevant links in the references section. However, this method is not recommended as your app won't get the updates from ZXing.&lt;/p&gt;
&lt;address&gt;
References:

&lt;/address&gt;

&lt;address&gt;
&lt;http://stackoverflow.com/questions/11205183/integrating-zxing-barcode-scanner?rq=1&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://stackoverflow.com/questions/4854442/embed-zxing-library-without-using-barcode-scanner-app/4854637#4854637&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://stackoverflow.com/questions/16433860/how-to-use-zxing-library-wihtout-installing-barcodescanner-app&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;https://github.com/zxing/zxing&gt;

&lt;/address&gt;

&lt;address&gt;
&lt;http://code.google.com/p/zxing/wiki/ScanningViaIntent&gt;

&lt;/address&gt;

&lt;address&gt;

&lt;/address&gt;</content></entry><entry><title>Some Wordpress tips and tricks</title><link href="blog/2013/11/some-wordpress-tips-and-tricks.html" rel="alternate"></link><published>2013-11-23T12:19:00+05:30</published><updated>2013-11-23T12:19:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-11-23:blog/2013/11/some-wordpress-tips-and-tricks.html</id><summary type="html">&lt;p&gt;Wordpress is a universally recognized and robust blogging platform written in the PHP language. Below are a bunch of Wordpress tricks that I've learned during my deployments, and I'd like to share with you.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. Change breadcrumbs to start from "Home" instead of \&amp;lt;Site-Title&gt;&lt;/em&gt;&lt;/strong&gt; (Works for Mantra theme): When I …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Wordpress is a universally recognized and robust blogging platform written in the PHP language. Below are a bunch of Wordpress tricks that I've learned during my deployments, and I'd like to share with you.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;1. Change breadcrumbs to start from "Home" instead of \&amp;lt;Site-Title&gt;&lt;/em&gt;&lt;/strong&gt; (Works for Mantra theme): When I set up this site, the breadcrumbs in the post used to read like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.prahladyeri.com/"&gt;Prahlad Yeri » &lt;/a&gt;&lt;a href="http://www.prahladyeri.com/category/wordpress/"&gt;wordpress » &lt;/a&gt;WordPress installation quick-start guide&lt;/p&gt;
&lt;p&gt;However, I wanted it to look like this:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.prahladyeri.com/"&gt;Home » &lt;/a&gt;&lt;a href="http://www.prahladyeri.com/category/wordpress/"&gt;wordpress » &lt;/a&gt;WordPress installation quick-start guide&lt;/p&gt;
&lt;p&gt;In order to do that, you need to look into your theme-functions.php file and see where wordpress is echoing your breadcrumbs. In the mantra theme, I found this in the function mantra_breadcrumbs(). So accordingly, I changed get_bloginfo('name') and hard-coded it to 'Home':&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;//changed by prahlad
//echo &amp;#39;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39;.get_bloginfo(&amp;#39;url&amp;#39;).&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39;.get_bloginfo(&amp;#39;name&amp;#39;).&amp;#39; &lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&amp;#39;; 
echo &amp;#39;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&amp;#39;.get_bloginfo(&amp;#39;url&amp;#39;).&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;#39;.&amp;#39;Home&amp;#39;.&amp;#39; &lt;span class="ni"&gt;&amp;amp;raquo;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&amp;#39;;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You have to do this at multiple places in the mantra_breadcrumbs() (or your theme's equivalent function) wherever get_bloginfo('name') is used and replace it with 'Home'.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;2. How to crop off the big page-title that appears on top of pages:&lt;/em&gt; &lt;/strong&gt;This is a nice little css trick.  Just open your theme's style.css and switch off the display for "entry-title" class elements within the "page" class elements. This will hide the page titles only on page-titles (and not posts!):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;/*start: prahlad - used to hide post-titles on all pages (not posts)*/&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;page&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;entry-title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c"&gt;/*end: prahlad*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you notice that some whitespace is still left on top of the page, you can try some of these modifiers:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;.site-header&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;padding-bottom:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="c"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="na"&gt;.site-content&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;margin-top:&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="c"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;/*&lt;/span&gt;&lt;span class="c"&gt;#content {&lt;/span&gt;
 &lt;span class="nl"&gt;margin-top:&lt;/span&gt; &lt;span class="err"&gt;-20&lt;/span&gt;&lt;span class="nf"&gt;px&lt;/span&gt;&lt;span class="c"&gt;;&lt;/span&gt;
&lt;span class="err"&gt;}*/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;&lt;em&gt;3. How to add a contact-form to your post or page:&lt;/em&gt;&lt;/strong&gt;  In order to do that you need a Contact-Form plugin. The most popular and well-maintained plugin at that is "Contact-Forms 7":&lt;/p&gt;
&lt;p&gt;&lt;a href="http://wordpress.org/plugins/contact-form-7/"&gt;http://wordpress.org/plugins/contact-form-7/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is a pretty decent form plugin that, from a single line of short-code (in your page or post), creates a basic all-purpose contact-form such as this:&lt;/p&gt;
&lt;p&gt;[caption id="attachment_120" align="alignnone" width="300"]&lt;a href="/uploads/old/Contact-Forms-7.png"&gt;&lt;img alt="Page created with Contact Forms 7" class="size-medium wp-image-120" height="164" src="/uploads/old/Contact-Forms-7-300x164.png" width="300"&gt;&lt;/a&gt; Page created with Contact Forms 7[/caption]&lt;/p&gt;
&lt;p&gt;When you install this plugin, you will see an additional "Contact" tab in your dashboard. When you click that, you will see a default form with a short-code like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[contact-form-7 id=&amp;quot;116&amp;quot; title=&amp;quot;Contact form 1&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can copy-paste this short-code anywhere in the editor for your page or post. For this site's contact page, it looked something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[contact-form-7 id=&amp;quot;116&amp;quot; title=&amp;quot;Contact form 1&amp;quot;]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By default, the information in the text-fields are mailed to the admin user's email-address when a user submits this form. You can change all this by editing the default form that you find in the "Contact" tab of your dashboard. You can add/remove the text-fields, add validation and much &lt;a href="http://contactform7.com/tag-syntax/"&gt;more&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another plugin that works in combination with this is the &lt;a href="http://wordpress.org/plugins/flamingo"&gt;flamingo plugin&lt;/a&gt;. It is useful in case you want to store the contact information in the wordpress database in addition to getting it mailed to your email address.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;4: Change the footer notices (such as "Powered by Wordpress", etc..):&lt;/em&gt;&lt;/strong&gt; Just open your footer.php from editor and try to find a snippet such as this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;colophon&amp;quot;&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;contentinfo&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kr"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;site-info&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt; &lt;span class="nx"&gt;do_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;twentytwelve_credits&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change it accordingly to suit your needs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;References:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;http://www.cryoutcreations.eu/forums/t/breadcrumbs-how-to-show-home-instead-of-site-title-in-the-breadcrumbs&lt;/li&gt;
&lt;li&gt;http://wordpress.org/plugins/contact-form-7/&lt;/li&gt;
&lt;li&gt;http://www.wpsquared.com/top-10-wordpress-contact-form-plugins/&lt;/li&gt;
&lt;li&gt;http://wordpress.org/support/topic/plugin-contact-form-7-16?replies=5&lt;/li&gt;
&lt;li&gt;http://contactform7.com/text-fields/&lt;/li&gt;
&lt;li&gt;http://contactform7.com/tag-syntax/&lt;/li&gt;
&lt;/ul&gt;</content></entry><entry><title>Wordpress installation quick-start guide</title><link href="blog/2013/11/wordpress-installation-quick-start-guide.html" rel="alternate"></link><published>2013-11-17T04:17:00+05:30</published><updated>2013-11-17T04:17:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:None,2013-11-17:blog/2013/11/wordpress-installation-quick-start-guide.html</id><summary type="html">&lt;p&gt;Wordpress is a blogging platform that is very easy to use, but involves many configuration trivia which may become overwhelming, unless organized and documented somewhere. Based on my experience of setting up this website, here are the things that I had to keep in mind to get it up and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Wordpress is a blogging platform that is very easy to use, but involves many configuration trivia which may become overwhelming, unless organized and documented somewhere. Based on my experience of setting up this website, here are the things that I had to keep in mind to get it up and running:&lt;!--more--&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Wordpress file-structure:&lt;/strong&gt; A brief understanding of the file structure helps before delving into the installation details. The folder where you upload the contents of wordpress installation files has an index.php file that triggers other configuration files from there. You have to setup the mysql database credentials in the &lt;em&gt;wp-config.php&lt;/em&gt; file before starting the installation. Inside the root folder, there are two sub-folders, &lt;strong&gt;wp-admin&lt;/strong&gt; and &lt;strong&gt;wp-content&lt;/strong&gt;. The wp-admin folder stores the necessary files to bring up the admin interface when you type http://your-wp-url/wp-admin to administer your site for adding posts, moderating comments, etc. The wp-content folder on the other hand, stores contains files and folders to create the structure, functionality and look and feel of your blog. The wp-content folder further has &lt;strong&gt;wp-themes&lt;/strong&gt; and &lt;strong&gt;wp-plugins&lt;/strong&gt; folders. The former controls the structure and look and feel (themes), whereas the latter is for adding extra bits of extra functionality (plugins).&lt;ul&gt;
&lt;li&gt;&lt;em&gt;root-folder » index.php, wp-config.php, wp-settings.php&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;&lt;em&gt;wp-admin - Files &amp;amp; folders to control admin interface.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wp-content&lt;/em&gt;&lt;ul&gt;
&lt;li&gt;&lt;em&gt;wp-themes - Files and folders to control look and feel.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wp-plugins - Files and folders to add bits of extra functionality.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;wp-includes - Contains header files for other php scripts.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- --&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Famous File-minute installation:&lt;/strong&gt;Once you have the basic understanding, you may proceed with the much advertised&lt;a href="http://codex.wordpress.org/Installing_WordPress#Famous_5-Minute_Install" title="famous five minute installation"&gt;&lt;em&gt;famous five minute installation&lt;/em&gt;&lt;/a&gt; of your wordpress site. Basically, once you have set the mysql credentials in wp-config.php, wordpress does the rest by creating the required tables for your blog-posts, comments and other elements. But make sure, the wp-user you configure has suffient rights to create/alter/query/etc. on the wordpress database you have configured.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configuration:&lt;/strong&gt; These settings in wp-config.php come quite handy during deployment:&lt;ul&gt;
&lt;li&gt;DB_NAME - mysql database name reserved for the wordpress blog.&lt;/li&gt;
&lt;li&gt;DB_USER - mysql user-id.&lt;/li&gt;
&lt;li&gt;DB_PASSWORD - mysql password.&lt;/li&gt;
&lt;li&gt;DB_HOST - hostname of the machine where mysql is running.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above settings are almost always different in your local environment from that of your web-hosting machine. Hence, it is advisable that you keep the local version of wp-config.php separate by adding an exception to version control systems like git, svn, etc. if you are using any.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Site name settings:&lt;/strong&gt; Two php global variables called WP_HOME and WP_SITEURL are almost always a source of trouble during migration of wordpress sites. These variables tell wordpress the url of your currently hosted wordpress site (such as http://localhost/wp or http://www.mysite.com/blog). When you migrate your database settings to your web host, wordpress obviously can't find the localhost there. To temporarily solve this issue, you can hard-code these values at the start of wp-config.php like this:&lt;ul&gt;
&lt;li&gt;define('WP_HOME','http://workstation2/rhc/prahladyeri/php');&lt;/li&gt;
&lt;li&gt;define('WP_SITEURL','http://workstation2/rhc/prahladyeri/php');&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you have access to wp-admin, you should remove them from wp-config.php and go to Settings-&gt;General to set these variables in a proper manner under the fields, "Wordpress Address (URL)" and "Site Address (URL)".&lt;/p&gt;</content><category term="DIY"></category><category term="PHP"></category><category term="Wordpress"></category></entry></feed>