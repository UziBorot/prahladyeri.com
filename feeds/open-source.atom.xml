<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Prahlad Yeri - Freelance Programmer - Open Source</title><link href="https://prahladyeri.com/" rel="alternate"></link><link href="https://prahladyeri.com/feeds/open-source.atom.xml" rel="self"></link><id>https://prahladyeri.com/</id><updated>2018-07-03T16:57:00+05:30</updated><entry><title>Open Source vs Free Software is a bit like Socialist vs Communist</title><link href="https://prahladyeri.com/blog/2018/07/open-source-vs-free-software-is-a-bit-like-socialist-vs-communist.html" rel="alternate"></link><published>2018-07-03T16:57:00+05:30</published><updated>2018-07-03T16:57:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.com,2018-07-03:/blog/2018/07/open-source-vs-free-software-is-a-bit-like-socialist-vs-communist.html</id><summary type="html">&lt;p&gt;Socialism and Communism have a lot in common, both ideologies aim to bring an equilibrium and welfare in the society by removing the income inequality between the rich and the poor. However, how they both go about doing their business is what makes the difference between sky and earth. Whilst …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Socialism and Communism have a lot in common, both ideologies aim to bring an equilibrium and welfare in the society by removing the income inequality between the rich and the poor. However, how they both go about doing their business is what makes the difference between sky and earth. Whilst Communism does advocate the use of &lt;strong&gt;force&lt;/strong&gt; to achieve its aim, Socialism does not and that's the major difference of spirit between them. If you remove this force element, you'll in fact find that they are both pretty much the same thing with only technical differences here and there.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="pexels-photo-273691" class="alignnone wp-image-903 size-medium" height="199" src="/uploads/2018/07/pexels-photo-273691-300x199.jpeg" width="300"&gt;&lt;/p&gt;
&lt;p&gt;Coming to the world of software, its a similar case when it comes to GPL (free software or copyleft) and non-GPL (open source or liberal) variety of FOSS licenses. The &lt;a href="https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt"&gt;GNU GPL&lt;/a&gt; forces their ideology upon the user of the software by expressly restricting him/her to the kind of use cases permitted on the said software:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt;&amp;gt; To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This restriction or force factor is what makes GPL or LGPL less desirable than the other more liberal (also called "open source") licenses, just as the communist ideology is less desirable than socialist ideology by most people.&lt;/p&gt;
&lt;p&gt;On the other hand, consider a liberal open source license such as the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT license&lt;/a&gt;. This license doesn't force anything on how the software may be used by the user (except that the license header itself carrying the name of the author should be passed around with any distributed copies):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;quot;Software&amp;quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;They may use it in any kind of use cases they please, even include it in a closed source or proprietary software if they want. Similar is the case with other open source licenses such as the &lt;a href="https://opensource.org/licenses/BSD-3-Clause"&gt;BSD Modified license&lt;/a&gt;or the &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2 license&lt;/a&gt;. None of these licenses force their users into any kind of restrictions, which is probably why they are more popular and used than the copyleft variety of licenses today.&lt;/p&gt;
&lt;p&gt;Finally, coming to the point of contrast between the copyleft and open source licenses, you'll find that they are all ultimately trying to achieve more or less the same goal, though some would strive for an excellence methodology in software development while others would term it as a struggle for users' freedom depending on what viewpoint you choose to look at it.&lt;/p&gt;
&lt;p&gt;Now, the reasons for GPL restrictions and &lt;a href="https://www.fsf.org/"&gt;their ideology&lt;/a&gt; are quite understandable, but the way they go about implementing it is certainly not ideal from a practical standpoint. &lt;a href="https://stallman.org/"&gt;Stallman's approach&lt;/a&gt; of making copyleft software unusable when linked with non-GPL or proprietary code is like a child's tit-for-tat attitude. Just as proprietary software companies won't let you use their software without a license and make it unapproachable to those who don't have it, Stallman wants to make the GPL world unapproachable to the proprietary companies by making this restriction on mixing GPL with proprietary code. In a perfect world (consisting of mostly power users who would rather visit support forums and do their own builds than use proprietary software), this may have worked wonders to Stallman's cause, but unfortunately we don't live in such a perfect world!&lt;/p&gt;
&lt;p&gt;On the other hand, the open source or liberal licenses that don't put any restrictions on its usage serve the purpose of everyone and so everyone is happy and thrives in this world. Power users are happy because they no longer have to use privacy invasive and/or bloated proprietary software as they can compile their own builds or even visit support forums or issue trackers of various open source projects if required. On the other hand, proprietary software companies are also happy as they get to use the fruits (source code) of open source contributors without spending anything on their part. Of course, taking the moral cognizance of these fruits, many of them also do tend to contribute back by either financially supporting other open source projects or releasing their in-house developed source code as open source to the world at large. There are several examples of these such as Microsoft's &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;, Adobe's code editor called &lt;a href="http://brackets.io/"&gt;Brackets.io&lt;/a&gt;, Apple's &lt;a href="https://developer.apple.com/swift/"&gt;Swift&lt;/a&gt;, etc. Now, consider that in a Richard Stallman's "pureland GPL" world, we wouldn't have all these contributions back from the proprietary companies!&lt;/p&gt;</content><category term="Libre Software"></category><category term="Open Source"></category></entry><entry><title>People migrating from Github to Gitlab should learn about these details first</title><link href="https://prahladyeri.com/blog/2018/06/people-migrating-from-github-to-gitlab-should-learn-about-these-details-first.html" rel="alternate"></link><published>2018-06-11T14:37:00+05:30</published><updated>2018-06-11T14:37:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.com,2018-06-11:/blog/2018/06/people-migrating-from-github-to-gitlab-should-learn-about-these-details-first.html</id><summary type="html">&lt;p&gt;After &lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;Microsoft's recent acquisition of Github&lt;/a&gt;, a mass exodus has kind of begun and many small and large projects are moving their code bases to the much hyped &lt;a href="https://gitlab.com/"&gt;Gitlab&lt;/a&gt; in a hurry, and these include both open and closed source projects. However, before migrating to Gitlab, they should take a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;After &lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;Microsoft's recent acquisition of Github&lt;/a&gt;, a mass exodus has kind of begun and many small and large projects are moving their code bases to the much hyped &lt;a href="https://gitlab.com/"&gt;Gitlab&lt;/a&gt; in a hurry, and these include both open and closed source projects. However, before migrating to Gitlab, they should take a pause and learn something about Gitlab and consider evaluating other alternatives too.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Gitlab Stack" class="size-full wp-image-644" height="605" src="/uploads/2018/06/gitlab_stack.png" width="692"&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gitlab Stack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;According to above &lt;a href="https://stackshare.io/gitlab/gitlab"&gt;StackShare.io chart&lt;/a&gt;, Gitlab basically runs on Microsoft Azure cloud hosting facility. So, if you are leaving Github in order to escape the clutches of Microsoft, then you are headed to a totally wrong place! Microsoft is exactly the place where your source code will reside in this case, only difference is that instead of controlling it directly (as in the case of Github), Microsoft will be controlling your code only technically.&lt;/p&gt;
&lt;p&gt;I know, some of you will be saying that you are self-hosting an open source copy of Gitlab and not actually moving to &lt;a href="https://gitlab.com"&gt;Gitlab.com&lt;/a&gt;. In that case, please have a look at another item in that stack, namely Rails (RoR or Ruby on Rails framework).&lt;/p&gt;
&lt;p&gt;Though Rails is a great framework that developers enjoy to code with, its a performance hog when it comes to actually running on production! There is a reason why &lt;a href="https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/"&gt;Twitter ditched Rails&lt;/a&gt; in favor of Node.js instead of fixing the interpreter like Facebook did with PHP. Apart from Rails being a performance hog, consider that a git hosting facility is not a simple CRUD app. Its very difficult to do advanced things like CI/CD right in a framework like Rails and the effect is showing. It may work out initially, but once your code base starts to increase and your integrations start to scale, you'll hit the RoR scaling limit sooner or later, like &lt;a href="https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process"&gt;many others have&lt;/a&gt;. Its not uncommon for Gitlab to eat gigabytes of your RAM or consume 100% CPU. So, if you are trying to host Gitlab in a small Digital Ocean droplet or Amazon AWS Micro instance, you can just forget about it!&lt;/p&gt;
&lt;p&gt;Or, you can sit back and evaluate your options, it really depends on what you basically want. If you just want a free git hosting facility and don't want to self-host, there is already Github. If you don't like Microsoft, then you have Bitbucket, SourceForge, &lt;a href="http://salsa.debian.org/"&gt;Debian Salsa&lt;/a&gt; and others too apart from Gitlab, so consider those options too before blindly deciding on Gitlab and falling for their marketing trap.&lt;/p&gt;
&lt;p&gt;On the other hand, if you are ready to self-host and have a smaller budget (just for an AWS Micro or Digital Ocean droplet, for instance), then you can use one of the several open source and light-weight git hosting software like &lt;a href="https://try.gogs.io/"&gt;gogs&lt;/a&gt;, &lt;a href="https://try.gitea.io/"&gt;gitea&lt;/a&gt;, &lt;a href="https://github.com/phacility/phabricator"&gt;phabricator&lt;/a&gt; and many others and self-host.&lt;/p&gt;
&lt;p&gt;Finally, if you have a budget for hosting Gitlab on a larger instance (like AWS Large instance or 2GB droplet from Digital Ocean), then the first question I'd ask you is why not just stick to paid hosting plans of Github (or Gitlab/Bitbucket if you don't like Microsoft). That will be a lot cheaper and lenient on your pockets than self hosting a copy of Gitlab on a larger instance.&lt;/p&gt;
&lt;p&gt;Whatever route you end up choosing, it should be a calmly taken logical decision after due consideration to all facts, not in this Github acquisition frenzy. All the best.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html"&gt;https://www.prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackshare.io/gitlab/gitlab"&gt;https://stackshare.io/gitlab/gitlab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com"&gt;https://gitlab.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/"&gt;https://jaredfriedman.wordpress.com/2015/09/15/why-i-wouldnt-use-rails-for-a-new-company/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process"&gt;https://serverfault.com/questions/818489/gitlab-extremely-high-memory-consumption-by-ruby-bundle-process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=10235446"&gt;https://news.ycombinator.com/item?id=10235446&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/osldev-blog/our-first-eight-months-with-gitlab-2f447af92e50"&gt;https://medium.com/osldev-blog/our-first-eight-months-with-gitlab-2f447af92e50&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://salsa.debian.org/"&gt;http://salsa.debian.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://try.gogs.io/"&gt;https://try.gogs.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://try.gitea.io/"&gt;https://try.gitea.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/phacility/phabricator"&gt;https://github.com/phacility/phabricator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="Git"></category><category term="Github"></category><category term="Gitlab"></category><category term="Microsoft"></category><category term="Open Source"></category></entry><entry><title>Microsoft's Github Acquisition - An Unbiased Perspective</title><link href="https://prahladyeri.com/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html" rel="alternate"></link><published>2018-06-08T17:04:00+05:30</published><updated>2018-06-08T17:04:00+05:30</updated><author><name>Prahlad Yeri</name></author><id>tag:prahladyeri.com,2018-06-08:/blog/2018/06/microsofts-github-acquisition-an-unbiased-perspective.html</id><summary type="html">&lt;p&gt;As someone who has worked on Microsoft tooling since the days of Foxpro 2.6 to Visual Studio 2010 in IT career, and yet ditched them all for PHP, Python and open source years later, I think I am qualified to offer a somewhat neutral or objective perspective on this …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As someone who has worked on Microsoft tooling since the days of Foxpro 2.6 to Visual Studio 2010 in IT career, and yet ditched them all for PHP, Python and open source years later, I think I am qualified to offer a somewhat neutral or objective perspective on this acquisition.&lt;!--more--&gt;&lt;/p&gt;
&lt;p&gt;When this news was &lt;strong&gt;&lt;a href="https://www.businessinsider.in/Microsoft-has-been-talking-about-buying-GitHub-a-startup-at-the-center-of-the-software-world-last-valued-at-2-billion/articleshow/64420905.cms"&gt;first announced on last Friday&lt;/a&gt;&lt;/strong&gt;, I was naturally puzzled and so were a lot of other developers and not without reasons. The way this was initially announced without any clarification or their plans about what they were going to do with the hosting facility in future, speculations were bound to be raised and people were bound to be pissed off, especially given Microsoft's history of being "not so friendly" with open source and "not so good" with some acquisitions.&lt;/p&gt;
&lt;p&gt;When it comes to open source, the Linux subreddit is the place where developers pour their hearts out and &lt;a href="https://www.reddit.com/r/linux/comments/8nukfa/microsoft_and_github_have_held_acquisition_talks/"&gt;this particular thread&lt;/a&gt; quite summed up  their initial knee-jerk reaction. As the most upvoted comment says:&lt;/p&gt;
&lt;p&gt;::: {.usertext-body .may-blank-within .md-container}
::: {.md}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;its like Microsoft is obsessed with generating as much frustration in the world as possible
:::
:::&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Other reactions were also quite similar:&lt;/p&gt;
&lt;p&gt;::: {.usertext-body .may-blank-within .md-container}
::: {.md}&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I LOL'ed.&lt;/p&gt;
&lt;p&gt;First, Sourceforge started to install malware on the open source projects. So everyone run to Github. Now, Github might get owned by Microsoft. Not to mention Github is 100% closed source. &lt;strong&gt;Gitlab&lt;/strong&gt; looks good every day. There are other open source git solution too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/"&gt;&lt;strong&gt;GitLab&lt;/strong&gt;&lt;/a&gt;, the top open source competitor to Github soon became the most discussed alternative (apparently, their marketing team did their bit too with the perfect timing!). And so, a mass exodus of projects soon began, which not only became the most discussed topic on reddit, but also caught a lot of media attention too:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.reuters.com/article/us-github-microsoft-gitlab/gitlab-gains-developers-after-microsoft-buys-rival-github-idUSKCN1J12BR"&gt;GitLab gains developers after Microsoft buys rival GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just within a couple of days from this announcement, some &lt;a href="https://motherboard.vice.com/en_us/article/ywen8x/13000-projects-ditched-github-for-gitlab-monday-morning"&gt;13,000 projects had already migrated to Gitlab&lt;/a&gt; which included some prominent names. Naturally, it was time now for Microsoft to do some damage control. But if their PR team was any wiser, they should have already anticipated this and this damage control move should have been done at the outset as the first thing. How could they not expect this backlash considering Microsoft's past history with open source (however distant it may be)?&lt;/p&gt;
&lt;p&gt;The first move came when Satya Nadella, the Microsoft CEO gave an interview to CNBC on Monday (4th June):&lt;/p&gt;
&lt;p&gt;[embed]https://www.youtube.com/watch?v=m164XggdRGA[/embed]&lt;/p&gt;
&lt;p&gt;One of the most important things Satya said in the interview was that Microsoft is a &lt;strong&gt;&lt;em&gt;developer tooling&lt;/em&gt;* &lt;/strong&gt;company at core*** (let's ignore Windows and Office for a moment!). However, most developers still had concerns, they wanted to know how this high level strategy of being open source developer friendly will turn out to be in practice.&lt;/p&gt;
&lt;p&gt;Most importantly, they needed an assurance that their daily driver for source control isn't going to be integrated and hijacked by other Microsoft products like Skype, Linkedin or even a Passport account. And that assurance came yesterday from &lt;a href="https://en.wikipedia.org/wiki/Nat_Friedman"&gt;Nat Friedman&lt;/a&gt;, the future CEO of Github &lt;a href="https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/"&gt;in his Reddit AMA&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Firstly, the fact that Github Inc. was going in the hands of an open source veteran who had contributed to GNOME and MONO projects in the past was itself quite reassuring. At least, Github isn't going to be controlled by a typical corporate honcho who has nothing but shareholders' interests in mind! Nat assured most redditors that Github is going to stay as it is, its developer focus is not going to be shifted, nor is it going to be integrated with any other products. And most importantly, they will never require a Microsoft account to login to Github, rather, their other products might consider allowing a Github user to authenticate to their systems in future:&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/e0a5e3r/&lt;/p&gt;
&lt;p&gt;Nat also goes on to further assure redditors in the AMA that they will always remain a "developer first" company, and are keen to learn a lot from Github from this acquisition. Rather than impose their own work culture on Github, they'll be taking lessons from Github and try and be like them:&lt;/p&gt;
&lt;p&gt;https://www.reddit.com/r/AMA/comments/8pc8mf/im_nat_friedman_future_ceo_of_github_ama/e0a6eh1/&lt;/p&gt;
&lt;p&gt;All in all, this damage control or whatever Microsoft has done seems to have done the magic at least for the moment. People and projects seem to have stopped their exodus to Gitlab, though its difficult to say what could happen in the long term.
:::
:::&lt;/p&gt;</content><category term="Github"></category><category term="Gitlab"></category><category term="Linux"></category><category term="Microsoft"></category></entry></feed>